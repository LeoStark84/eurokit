-- NODEBOXES
-- all weird shaped thingies
dofile(modpath .. "/boxes.lua")


-- NODE REGISTRATION

minetest.register_node( "eurokit:marble", {
	description = "Marble",
	tiles = {"eurokit_white_marble.png" },
	groups = { marble = 1, cracky = 2 },
	sounds = default.node_sound_stone_defaults()
})

minetest.register_node( "eurokit:marble_stair_outward", {
	description = "Marble Stair Outward",
	groups = { marble = 1, cracky = 2, outward = 1, stair = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_stair_outward 6",
	recipe = {
		{ "", "eurokit:marble", "" },
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_stair_outward", "eurokit:marble_stair_outward", "eurokit:marble_stair_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_stair", {
	description = "Marble Stair",
	groups = { marble = 1, cracky = 2, ultramodel = 1, stair = 1, stir = 1, redundant = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_stair 8",
	recipe = {
		{ "eurokit:marble", "", "" },
		{ "eurokit:marble", "eurokit:marble", "" },
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 3",
	recipe = {
		{ "eurokit:marble_stair", "eurokit:marble_stair", "" },
		{ "eurokit:marble_stair", "eurokit:marble_stair", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_slab", {
	description = "Marble Slab",
	groups = { marble = 1, cracky = 2, slab = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slab,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_slab 6",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_slab", "", "" },
		{ "eurokit:marble_slab", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_stair_inward", {
	description = "Marble Stair Inward",
	groups = { marble = 1, cracky = 2, inward = 1, stair = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_stair_inward 6",
	recipe = {
		{ "", "eurokit:marble", "" },
		{ "eurokit:marble", "", "eurokit:marble" },
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 2",
	recipe = {
		{ "eurokit:marble_stair_inward", "", "" },
		{ "eurokit:marble_stair_inward", "eurokit:marble_stair_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_stair_outward", {
	description = "Marble Stair Outward",
	groups = { marble = 1, cracky = 2, outward = 1, stair = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_stair_outward 6",
	recipe = {
		{ "", "eurokit:marble", "" },
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_stair_outward", "eurokit:marble_stair_outward", "eurokit:marble_stair_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_stair", {
	description = "Marble Stair",
	groups = { marble = 1, cracky = 2, ultramodel = 1, stair = 1, stir = 1, redundant = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_stair 8",
	recipe = {
		{ "eurokit:marble", "", "" },
		{ "eurokit:marble", "eurokit:marble", "" },
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 3",
	recipe = {
		{ "eurokit:marble_stair", "eurokit:marble_stair", "" },
		{ "eurokit:marble_stair", "eurokit:marble_stair", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_slab", {
	description = "Marble Slab",
	groups = { marble = 1, cracky = 2, slab = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slab,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_slab 6",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_slab", "", "" },
		{ "eurokit:marble_slab", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_stair_inward", {
	description = "Marble Stair Inward",
	groups = { marble = 1, cracky = 2, inward = 1, stair = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_stair_inward 6",
	recipe = {
		{ "", "eurokit:marble", "" },
		{ "eurokit:marble", "", "eurokit:marble" },
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 2",
	recipe = {
		{ "eurokit:marble_stair_inward", "", "" },
		{ "eurokit:marble_stair_inward", "eurokit:marble_stair_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_half_pillar_mid", {
	description = "Marble Half Pillar Mid",
	groups = { marble = 1, cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_half_pillar_mid 1",
	recipe = {
		{ "eurokit:marble_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pillar_mid 2",
	recipe = {
		{ "eurokit:marble_half_pillar_mid", "eurokit:marble_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_pillar_top", {
	description = "Marble Pillar Top",
	groups = { marble = 1, cracky = 2, pillar = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pillar_top 12",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "", "eurokit:marble", "" },
		{ "", "eurokit:marble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_pillar_top", "eurokit:marble_pillar_top", "eurokit:marble_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_counterarch", {
	description = "Marble Counterarch",
	groups = { marble = 1, cracky = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_counterarch 7",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "", "eurokit:marble", "eurokit:marble" },
		{ "", "", "eurokit:marble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 3",
	recipe = {
		{ "eurokit:marble_counterarch", "eurokit:marble_counterarch", "" },
		{ "eurokit:marble_counterarch", "eurokit:marble_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_vertical_arrowslit", {
	description = "Marble Vertical Arrowslit",
	groups = { marble = 1, cracky = 2, arrowslit = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:marble_arrow_hole", "" },
		{ "", "eurokit:marble_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_wall_indentation_2_inward", {
	description = "Marble Wall Indentation 2 Inward",
	groups = { marble = 1, cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:marble_wall_indentation_2", "" },
		{ "eurokit:marble_wall_indentation_2", "", "eurokit:marble_wall_indentation_2" },
		{ "eurokit:marble_wall_indentation_2", "eurokit:marble_wall_indentation_2", "eurokit:marble_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_wall_indentation_2 4",
	recipe = {
		{ "eurokit:marble_wall_indentation_2_inward", "eurokit:marble_wall_indentation_2_inward", "eurokit:marble_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_half_pillar_base", {
	description = "Marble Half Pillar Base",
	groups = { marble = 1, cracky = 2, pillar = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_half_pillar_base 1",
	recipe = {
		{ "eurokit:marble_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pillar_base 1",
	recipe = {
		{ "eurokit:marble_half_pillar_base", "eurokit:marble_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_small_pointed_arch", {
	description = "Marble Small Pointed Arch",
	groups = { marble = 1, cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_small_pointed_arch 9",
	recipe = {
		{ "eurokit:marble_slope", "eurokit:marble_slope", "eurokit:marble_slope" },
		{ "eurokit:marble_slope", "", "eurokit:marble_slope" },
		{ "eurokit:marble_slope", "", "eurokit:marble_slope" }
	}
})

minetest.register_node( "eurokit:marble_pointed_arch_2", {
	description = "Marble Pointed Arch 2",
	groups = { marble = 1, cracky = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pointed_arch_2 3",
	recipe = {
		{ "eurokit:marble_slope", "eurokit:marble_slope", "" },
		{ "eurokit:marble_slope", "eurokit:marble_slope", "" },
		{ "eurokit:marble_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_slope 5",
	recipe = {
		{ "eurokit:marble_pointed_arch_2", "eurokit:marble_pointed_arch_2", "" },
		{ "eurokit:marble_pointed_arch_2", "eurokit:marble_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_machicolation", {
	description = "Marble Machicolation",
	groups = { marble = 1, cracky = 2, machicolation = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_machicolation 18",
	recipe = {
		{ "eurokit:marble", "", "eurokit:marble" },
		{ "eurokit:marble", "", "eurokit:marble" },
		{ "eurokit:marble", "", "" }
	}
})

minetest.register_node( "eurokit:marble_pointed_arch_1_outward", {
	description = "Marble Pointed Arch 1 Outward",
	groups = { marble = 1, cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:marble_pointed_arch_1", "" },
		{ "eurokit:marble_pointed_arch_1", "eurokit:marble_pointed_arch_1", "eurokit:marble_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pointed_arch_1 1",
	recipe = {
		{ "eurokit:marble_pointed_arch_1_outward", "eurokit:marble_pointed_arch_1_outward", "eurokit:marble_pointed_arch_1_outward" },
		{ "eurokit:marble_pointed_arch_1_outward", "eurokit:marble_pointed_arch_1_outward", "eurokit:marble_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_arrowslit_end_top", {
	description = "Marble Arrowslit End Top",
	groups = { marble = 1, cracky = 2, arrowslit = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:marble_arrow_hole", "eurokit:marble_arrow_hole", "eurokit:marble_arrow_hole" },
		{ "", "eurokit:marble_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_arrowslit_end_bottom", {
	description = "Marble Arrowslit End Bottom",
	groups = { marble = 1, cracky = 2, arrowslit = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:marble_arrow_hole", "" },
		{ "eurokit:marble_arrow_hole", "eurokit:marble_arrow_hole", "eurokit:marble_arrow_hole" }
	}
})

minetest.register_node( "eurokit:marble_wall_indentation_2_outward", {
	description = "Marble Wall Indentation 2 Outward",
	groups = { marble = 1, cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:marble_wall_indentation_2", "" },
		{ "eurokit:marble_wall_indentation_2", "eurokit:marble_wall_indentation_2", "eurokit:marble_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_wall_indentation_2 3",
	recipe = {
		{ "eurokit:marble_wall_indentation_2_outward", "eurokit:marble_wall_indentation_2_outward", "" },
		{ "eurokit:marble_wall_indentation_2_outward", "eurokit:marble_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_pillar_mid", {
	description = "Marble Pillar Mid",
	groups = { marble = 1, cracky = 2, pillar = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pillar_mid 14",
	recipe = {
		{ "", "eurokit:marble", "" },
		{ "", "eurokit:marble", "" },
		{ "", "eurokit:marble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_pillar_mid", "eurokit:marble_pillar_mid", "eurokit:marble_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_arrowslit_end_left", {
	description = "Marble Arrowslit End Left",
	groups = { marble = 1, cracky = 2, arrowslit = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:marble_arrow_hole", "", "" },
		{ "eurokit:marble_arrow_hole", "eurokit:marble_arrow_hole", "" },
		{ "eurokit:marble_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:marble_wall_indentation_2", {
	description = "Marble Wall Indentation 2",
	groups = { marble = 1, cracky = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_wall_indentation_2 2",
	recipe = {
		{ "eurokit:marble_slope", "", "" },
		{ "eurokit:marble_slope", "eurokit:marble_slope", "eurokit:marble_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_arch_inward", {
	description = "Marble Arch Inward",
	groups = { marble = 1, cracky = 2, inward = 1, arch = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_arch_inward 13",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "eurokit:marble", "", "eurokit:marble" },
		{ "", "eurokit:marble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_arch_inward", "eurokit:marble_arch_inward", "eurokit:marble_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_small_arch", {
	description = "Marble Small Arch",
	groups = { marble = 1, cracky = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:marble", "" },
		{ "eurokit:marble", "", "eurokit:marble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 2",
	recipe = {
		{ "eurokit:marble_small_arch", "eurokit:marble_small_arch", "" },
		{ "eurokit:marble_small_arch", "eurokit:marble_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_thin_wall", {
	description = "Marble Thin Wall",
	groups = { marble = 1, cracky = 2, arrowslit = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_thin_wall 24",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "" },
		{ "eurokit:marble", "eurokit:marble", "" },
		{ "eurokit:marble", "eurokit:marble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:marble_thin_wall", "eurokit:marble_thin_wall", "eurokit:marble_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_counterarch_inward", {
	description = "Marble Counterarch Inward",
	groups = { marble = 1, cracky = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_counterarch_inward 3",
	recipe = {
		{ "", "eurokit:marble", "eurokit:marble" },
		{ "", "", "eurokit:marble" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 2",
	recipe = {
		{ "eurokit:marble_counterarch_inward", "", "" },
		{ "eurokit:marble_counterarch_inward", "eurokit:marble_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_small_counterarch", {
	description = "Marble Small Counterarch",
	groups = { marble = 1, cracky = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_small_counterarch 17",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "", "eurokit:marble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_small_counterarch", "eurokit:marble_small_counterarch", "" },
		{ "eurokit:marble_small_counterarch", "eurokit:marble_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_horizontal_arrowslit", {
	description = "Marble Horizontal Arrowslit",
	groups = { marble = 1, cracky = 2, arrowslit = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:marble_arrow_hole", "eurokit:marble_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_arch_outward", {
	description = "Marble Arch Outward",
	groups = { marble = 1, cracky = 2, outward = 1, arch = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_arch_outward 22",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "", "eurokit:marble", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_arch_outward", "", "" },
		{ "eurokit:marble_arch_outward", "eurokit:marble_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_arch", {
	description = "Marble Arch",
	groups = { marble = 1, cracky = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_arch 18",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "eurokit:marble", "eurokit:marble", "" },
		{ "eurokit:marble", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_arch", "eurokit:marble_arch", "" },
		{ "eurokit:marble_arch", "eurokit:marble_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_half_pillar_top", {
	description = "Marble Half Pillar Top",
	groups = { marble = 1, cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_half_pillar_top 1",
	recipe = {
		{ "eurokit:marble_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pillar_top 1",
	recipe = {
		{ "eurokit:marble_half_pillar_top", "eurokit:marble_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_pointed_arch_2_inward", {
	description = "Marble Pointed Arch 2 Inward",
	groups = { marble = 1, cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:marble_pointed_arch_2", "" },
		{ "eurokit:marble_pointed_arch_2", "", "eurokit:marble_pointed_arch_2" },
		{ "eurokit:marble_pointed_arch_2", "eurokit:marble_pointed_arch_2", "eurokit:marble_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pointed_arch_2 6",
	recipe = {
		{ "eurokit:marble_pointed_arch_2_inward", "eurokit:marble_pointed_arch_2_inward", "" },
		{ "eurokit:marble_pointed_arch_2_inward", "eurokit:marble_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_pointed_arch_2_outward", {
	description = "Marble Pointed Arch 2 Outward",
	groups = { marble = 1, cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:marble_pointed_arch_2", "" },
		{ "eurokit:marble_pointed_arch_2", "eurokit:marble_pointed_arch_2", "eurokit:marble_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pointed_arch_2 3",
	recipe = {
		{ "eurokit:marble_pointed_arch_2_outward", "eurokit:marble_pointed_arch_2_outward", "eurokit:marble_pointed_arch_2_outward" },
		{ "eurokit:marble_pointed_arch_2_outward", "eurokit:marble_pointed_arch_2_outward", "eurokit:marble_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_wall_indentation_1_outward", {
	description = "Marble Wall Indentation 1 Outward",
	groups = { marble = 1, cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:marble_wall_indentation_1", "" },
		{ "eurokit:marble_wall_indentation_1", "eurokit:marble_wall_indentation_1", "eurokit:marble_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_wall_indentation_1 1",
	recipe = {
		{ "eurokit:marble_wall_indentation_1_outward", "eurokit:marble_wall_indentation_1_outward", "" },
		{ "eurokit:marble_wall_indentation_1_outward", "eurokit:marble_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_wall_indentation_1_inward", {
	description = "Marble Wall Indentation 1 Inward",
	groups = { marble = 1, cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:marble_wall_indentation_1", "" },
		{ "eurokit:marble_wall_indentation_1", "", "eurokit:marble_wall_indentation_1" },
		{ "eurokit:marble_wall_indentation_1", "eurokit:marble_wall_indentation_1", "eurokit:marble_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_wall_indentation_1 5",
	recipe = {
		{ "eurokit:marble_wall_indentation_1_inward", "eurokit:marble_wall_indentation_1_inward", "eurokit:marble_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_pointed_arch_1", {
	description = "Marble Pointed Arch 1",
	groups = { marble = 1, cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pointed_arch_1 11",
	recipe = {
		{ "eurokit:marble_slope", "eurokit:marble_slope", "" },
		{ "eurokit:marble_slope", "", "" },
		{ "eurokit:marble_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_slope 2",
	recipe = {
		{ "eurokit:marble_pointed_arch_1", "eurokit:marble_pointed_arch_1", "eurokit:marble_pointed_arch_1" },
		{ "eurokit:marble_pointed_arch_1", "eurokit:marble_pointed_arch_1", "eurokit:marble_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_small_straight_arch", {
	description = "Marble Small Straight Arch",
	groups = { marble = 1, cracky = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_small_straight_arch 8",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "eurokit:marble", "", "eurokit:marble" },
		{ "eurokit:marble", "", "eurokit:marble" }
	}
})

minetest.register_node( "eurokit:marble_arrow_hole", {
	description = "Marble Arrow Hole",
	groups = { marble = 1, cracky = 2, arrowslit = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_arrow_hole 21",
	recipe = {
		{ "", "eurokit:marble", "" },
		{ "eurokit:marble", "", "eurokit:marble" },
		{ "", "eurokit:marble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_arrow_hole", "eurokit:marble_arrow_hole", "" },
		{ "eurokit:marble_arrow_hole", "eurokit:marble_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_pointed_arch_1_inward", {
	description = "Marble Pointed Arch 1 Inward",
	groups = { marble = 1, cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:marble_pointed_arch_1", "" },
		{ "eurokit:marble_pointed_arch_1", "", "eurokit:marble_pointed_arch_1" },
		{ "eurokit:marble_pointed_arch_1", "eurokit:marble_pointed_arch_1", "eurokit:marble_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pointed_arch_1 7",
	recipe = {
		{ "eurokit:marble_pointed_arch_1_inward", "eurokit:marble_pointed_arch_1_inward", "" },
		{ "eurokit:marble_pointed_arch_1_inward", "eurokit:marble_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_wall_indentation_1", {
	description = "Marble Wall Indentation 1",
	groups = { marble = 1, cracky = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_wall_indentation_1 7",
	recipe = {
		{ "eurokit:marble_slope", "eurokit:marble_slope", "" },
		{ "eurokit:marble_slope", "", "eurokit:marble_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_counterarch_outward", {
	description = "Marble Counterarch Outward",
	groups = { marble = 1, cracky = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_counterarch_outward 6",
	recipe = {
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" },
		{ "", "", "eurokit:marble" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_counterarch_outward", "eurokit:marble_counterarch_outward", "eurokit:marble_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_arrowslit_end_right", {
	description = "Marble Arrowslit End Right",
	groups = { marble = 1, cracky = 2, arrowslit = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:marble_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:marble_arrow_hole" },
		{ "", "eurokit:marble_arrow_hole", "eurokit:marble_arrow_hole" },
		{ "", "", "eurokit:marble_arrow_hole" }
	}
})

minetest.register_node( "eurokit:marble_pillar_base", {
	description = "Marble Pillar Base",
	groups = { marble = 1, cracky = 2, pillar = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_pillar_base 7",
	recipe = {
		{ "", "eurokit:marble", "" },
		{ "", "eurokit:marble", "" },
		{ "", "eurokit:marble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_pillar_base", "eurokit:marble_pillar_base", "eurokit:marble_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_long_slope_2_outward", {
	description = "Marble Long Slope 2 Outward",
	groups = { marble = 1, cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:marble_long_slope_2", "" },
		{ "eurokit:marble_long_slope_2", "eurokit:marble_long_slope_2", "eurokit:marble_long_slope_2" }
	}
})

minetest.register_node( "eurokit:marble_slope_outward", {
	description = "Marble Slope Outward",
	groups = { marble = 1, cracky = 2, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:marble" },
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 1",
	recipe = {
		{ "eurokit:marble_slope_outward", "eurokit:marble_slope_outward", "eurokit:marble_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_long_slope_2", {
	description = "Marble Long Slope 2",
	groups = { marble = 1, cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:marble_slope", "" },
		{ "eurokit:marble_slope", "eurokit:marble_slope", "eurokit:marble_slope" }
	}
})

minetest.register_node( "eurokit:marble_long_slope_1_outward", {
	description = "Marble Long Slope 1 Outward",
	groups = { marble = 1, cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:marble_long_slope_1", "" },
		{ "eurokit:marble_long_slope_1", "eurokit:marble_long_slope_1", "eurokit:marble_long_slope_1" }
	}
})

minetest.register_node( "eurokit:marble_long_slope_3_inward", {
	description = "Marble Long Slope 3 Inward",
	groups = { marble = 1, cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:marble_long_slope_3", "" },
		{ "eurokit:marble_long_slope_3", "", "eurokit:marble_long_slope_3" },
		{ "eurokit:marble_long_slope_3", "eurokit:marble_long_slope_3", "eurokit:marble_long_slope_3" }
	}
})

minetest.register_node( "eurokit:marble_long_slope_1", {
	description = "Marble Long Slope 1",
	groups = { marble = 1, cracky = 2, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:marble_slope", "", "" },
		{ "eurokit:marble_slope", "eurokit:marble_slope", "eurokit:marble_slope" }
	}
})

minetest.register_node( "eurokit:marble_long_slope_3_outward", {
	description = "Marble Long Slope 3 Outward",
	groups = { marble = 1, cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:marble_long_slope_3", "" },
		{ "eurokit:marble_long_slope_3", "eurokit:marble_long_slope_3", "eurokit:marble_long_slope_3" }
	}
})

minetest.register_node( "eurokit:marble_long_slope_3", {
	description = "Marble Long Slope 3",
	groups = { marble = 1, cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:marble_slope" },
		{ "eurokit:marble_slope", "eurokit:marble_slope", "eurokit:marble_slope" }
	}
})

minetest.register_node( "eurokit:marble_long_slope_2_inward", {
	description = "Marble Long Slope 2 Inward",
	groups = { marble = 1, cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:marble_long_slope_2", "" },
		{ "eurokit:marble_long_slope_2", "", "eurokit:marble_long_slope_2" },
		{ "eurokit:marble_long_slope_2", "eurokit:marble_long_slope_2", "eurokit:marble_long_slope_2" }
	}
})

minetest.register_node( "eurokit:marble_slope_inward", {
	description = "Marble Slope Inward",
	groups = { marble = 1, cracky = 2, inward = 1, slope = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_slope_inward 7",
	recipe = {
		{ "", "", "eurokit:marble" },
		{ "", "eurokit:marble", "" },
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 2",
	recipe = {
		{ "eurokit:marble_slope_inward", "", "" },
		{ "eurokit:marble_slope_inward", "eurokit:marble_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:marble_long_slope_1_inward", {
	description = "Marble Long Slope 1 Inward",
	groups = { marble = 1, cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:marble_long_slope_1", "" },
		{ "eurokit:marble_long_slope_1", "", "eurokit:marble_long_slope_1" },
		{ "eurokit:marble_long_slope_1", "eurokit:marble_long_slope_1", "eurokit:marble_long_slope_1" }
	}
})

minetest.register_node( "eurokit:marble_slope", {
	description = "Marble Slope",
	groups = { marble = 1, cracky = 2, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "eurokit_white_marble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble_slope 11",
	recipe = {
		{ "", "", "eurokit:marble" },
		{ "", "eurokit:marble", "eurokit:marble" },
		{ "eurokit:marble", "eurokit:marble", "eurokit:marble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:marble 2",
	recipe = {
		{ "eurokit:marble_slope", "eurokit:marble_slope", "" },
		{ "eurokit:marble_slope", "eurokit:marble_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof", {
	description = "Slate Roof",
	tiles = {"eurokit_slate_roof.png" },
	groups = { roof = 1, cracky = 1 },
	sounds = default.node_sound_stone_defaults()
})

minetest.register_node( "eurokit:slate_roof_stair_outward", {
	description = "Slate Roof Stair Outward",
	groups = { roof = 1, cracky = 1, outward = 1, stair = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_stair_outward 6",
	recipe = {
		{ "", "eurokit:slate_roof", "" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 1",
	recipe = {
		{ "eurokit:slate_roof_stair_outward", "eurokit:slate_roof_stair_outward", "eurokit:slate_roof_stair_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof_stair", {
	description = "Slate Roof Stair",
	groups = { roof = 1, cracky = 1, ultramodel = 1, stair = 1, stir = 1, redundant = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_stair 8",
	recipe = {
		{ "eurokit:slate_roof", "", "" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 3",
	recipe = {
		{ "eurokit:slate_roof_stair", "eurokit:slate_roof_stair", "" },
		{ "eurokit:slate_roof_stair", "eurokit:slate_roof_stair", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof_slab", {
	description = "Slate Roof Slab",
	groups = { roof = 1, cracky = 1, slab = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slab,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_slab 6",
	recipe = {
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 1",
	recipe = {
		{ "eurokit:slate_roof_slab", "", "" },
		{ "eurokit:slate_roof_slab", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof_stair_inward", {
	description = "Slate Roof Stair Inward",
	groups = { roof = 1, cracky = 1, inward = 1, stair = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_stair_inward 6",
	recipe = {
		{ "", "eurokit:slate_roof", "" },
		{ "eurokit:slate_roof", "", "eurokit:slate_roof" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 2",
	recipe = {
		{ "eurokit:slate_roof_stair_inward", "", "" },
		{ "eurokit:slate_roof_stair_inward", "eurokit:slate_roof_stair_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof_stair_outward", {
	description = "Slate Roof Stair Outward",
	groups = { roof = 1, cracky = 1, outward = 1, stair = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_stair_outward 6",
	recipe = {
		{ "", "eurokit:slate_roof", "" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 1",
	recipe = {
		{ "eurokit:slate_roof_stair_outward", "eurokit:slate_roof_stair_outward", "eurokit:slate_roof_stair_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof_stair", {
	description = "Slate Roof Stair",
	groups = { roof = 1, cracky = 1, ultramodel = 1, stair = 1, stir = 1, redundant = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_stair 8",
	recipe = {
		{ "eurokit:slate_roof", "", "" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 3",
	recipe = {
		{ "eurokit:slate_roof_stair", "eurokit:slate_roof_stair", "" },
		{ "eurokit:slate_roof_stair", "eurokit:slate_roof_stair", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof_slab", {
	description = "Slate Roof Slab",
	groups = { roof = 1, cracky = 1, slab = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slab,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_slab 6",
	recipe = {
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 1",
	recipe = {
		{ "eurokit:slate_roof_slab", "", "" },
		{ "eurokit:slate_roof_slab", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof_stair_inward", {
	description = "Slate Roof Stair Inward",
	groups = { roof = 1, cracky = 1, inward = 1, stair = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.stair_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_stair_inward 6",
	recipe = {
		{ "", "eurokit:slate_roof", "" },
		{ "eurokit:slate_roof", "", "eurokit:slate_roof" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 2",
	recipe = {
		{ "eurokit:slate_roof_stair_inward", "", "" },
		{ "eurokit:slate_roof_stair_inward", "eurokit:slate_roof_stair_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof_needle_3_outward", {
	description = "Slate Roof Needle 3 Outward",
	groups = { roof = 1, cracky = 1, slope = 1, needle = 1, outward = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.needle_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:slate_roof_needle_3_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_needle_3_outward 17",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:slate_roof_needle_3", "" },
		{ "eurokit:slate_roof_needle_3", "eurokit:slate_roof_needle_3", "eurokit:slate_roof_needle_3" }
	}
})

minetest.register_node( "eurokit:slate_roof_needle_1_outward", {
	description = "Slate Roof Needle 1 Outward",
	groups = { roof = 1, cracky = 1, slope = 1, needle = 1, outward = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.needle_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:slate_roof_needle_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_needle_1_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:slate_roof_needle_1", "" },
		{ "eurokit:slate_roof_needle_1", "eurokit:slate_roof_needle_1", "eurokit:slate_roof_needle_1" }
	}
})

minetest.register_node( "eurokit:slate_roof_needle_2", {
	description = "Slate Roof Needle 2",
	groups = { roof = 1, cracky = 1, needle = 1, slope = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.needle_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:slate_roof_needle_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_needle_2 4",
	recipe = {
		{ "", "", "eurokit:slate_roof_slope" },
		{ "", "eurokit:slate_roof_slope", "eurokit:slate_roof_slope" },
		{ "", "", "eurokit:slate_roof_slope" }
	}
})

minetest.register_node( "eurokit:slate_roof_needle_2_inward", {
	description = "Slate Roof Needle 2 Inward",
	groups = { roof = 1, cracky = 1, inward = 1, needle = 1, slope = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.needle_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:slate_roof_needle_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_needle_2_inward 3",
	recipe = {
		{ "", "eurokit:slate_roof_needle_2", "" },
		{ "eurokit:slate_roof_needle_2", "", "eurokit:slate_roof_needle_2" },
		{ "eurokit:slate_roof_needle_2", "eurokit:slate_roof_needle_2", "eurokit:slate_roof_needle_2" }
	}
})

minetest.register_node( "eurokit:slate_roof_needle_2_outward", {
	description = "Slate Roof Needle 2 Outward",
	groups = { roof = 1, cracky = 1, slope = 1, needle = 1, outward = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.needle_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:slate_roof_needle_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_needle_2_outward 7",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:slate_roof_needle_2", "" },
		{ "eurokit:slate_roof_needle_2", "eurokit:slate_roof_needle_2", "eurokit:slate_roof_needle_2" }
	}
})

minetest.register_node( "eurokit:slate_roof_needle_3", {
	description = "Slate Roof Needle 3",
	groups = { roof = 1, cracky = 1, needle = 1, slope = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.needle_3,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:slate_roof_needle_3")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_needle_3 12",
	recipe = {
		{ "", "", "eurokit:slate_roof_slope" },
		{ "", "", "eurokit:slate_roof_slope" },
		{ "", "eurokit:slate_roof_slope", "eurokit:slate_roof_slope" }
	}
})

minetest.register_node( "eurokit:slate_roof_needle_1", {
	description = "Slate Roof Needle 1",
	groups = { roof = 1, cracky = 1, needle = 1, slope = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.needle_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:slate_roof_needle_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_needle_1 2",
	recipe = {
		{ "", "eurokit:slate_roof_slope", "eurokit:slate_roof_slope" },
		{ "", "", "eurokit:slate_roof_slope" },
		{ "", "", "eurokit:slate_roof_slope" }
	}
})

minetest.register_node( "eurokit:slate_roof_needle_1_inward", {
	description = "Slate Roof Needle 1 Inward",
	groups = { roof = 1, cracky = 1, inward = 1, needle = 1, slope = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.needle_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:slate_roof_needle_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_needle_1_inward 4",
	recipe = {
		{ "", "eurokit:slate_roof_needle_1", "" },
		{ "eurokit:slate_roof_needle_1", "", "eurokit:slate_roof_needle_1" },
		{ "eurokit:slate_roof_needle_1", "eurokit:slate_roof_needle_1", "eurokit:slate_roof_needle_1" }
	}
})

minetest.register_node( "eurokit:slate_roof_needle_3_inward", {
	description = "Slate Roof Needle 3 Inward",
	groups = { roof = 1, cracky = 1, inward = 1, needle = 1, slope = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.needle_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:slate_roof_needle_3_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_needle_3_inward 3",
	recipe = {
		{ "", "eurokit:slate_roof_needle_3", "" },
		{ "eurokit:slate_roof_needle_3", "", "eurokit:slate_roof_needle_3" },
		{ "eurokit:slate_roof_needle_3", "eurokit:slate_roof_needle_3", "eurokit:slate_roof_needle_3" }
	}
})

minetest.register_node( "eurokit:slate_roof_long_slope_2_outward", {
	description = "Slate Roof Long Slope 2 Outward",
	groups = { roof = 1, cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:slate_roof_long_slope_2", "" },
		{ "eurokit:slate_roof_long_slope_2", "eurokit:slate_roof_long_slope_2", "eurokit:slate_roof_long_slope_2" }
	}
})

minetest.register_node( "eurokit:slate_roof_slope_outward", {
	description = "Slate Roof Slope Outward",
	groups = { roof = 1, cracky = 1, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:slate_roof" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 1",
	recipe = {
		{ "eurokit:slate_roof_slope_outward", "eurokit:slate_roof_slope_outward", "eurokit:slate_roof_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof_long_slope_2", {
	description = "Slate Roof Long Slope 2",
	groups = { roof = 1, cracky = 1, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:slate_roof_slope", "" },
		{ "eurokit:slate_roof_slope", "eurokit:slate_roof_slope", "eurokit:slate_roof_slope" }
	}
})

minetest.register_node( "eurokit:slate_roof_long_slope_1_outward", {
	description = "Slate Roof Long Slope 1 Outward",
	groups = { roof = 1, cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:slate_roof_long_slope_1", "" },
		{ "eurokit:slate_roof_long_slope_1", "eurokit:slate_roof_long_slope_1", "eurokit:slate_roof_long_slope_1" }
	}
})

minetest.register_node( "eurokit:slate_roof_long_slope_3_inward", {
	description = "Slate Roof Long Slope 3 Inward",
	groups = { roof = 1, cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:slate_roof_long_slope_3", "" },
		{ "eurokit:slate_roof_long_slope_3", "", "eurokit:slate_roof_long_slope_3" },
		{ "eurokit:slate_roof_long_slope_3", "eurokit:slate_roof_long_slope_3", "eurokit:slate_roof_long_slope_3" }
	}
})

minetest.register_node( "eurokit:slate_roof_long_slope_1", {
	description = "Slate Roof Long Slope 1",
	groups = { roof = 1, cracky = 1, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:slate_roof_slope", "", "" },
		{ "eurokit:slate_roof_slope", "eurokit:slate_roof_slope", "eurokit:slate_roof_slope" }
	}
})

minetest.register_node( "eurokit:slate_roof_long_slope_3_outward", {
	description = "Slate Roof Long Slope 3 Outward",
	groups = { roof = 1, cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:slate_roof_long_slope_3", "" },
		{ "eurokit:slate_roof_long_slope_3", "eurokit:slate_roof_long_slope_3", "eurokit:slate_roof_long_slope_3" }
	}
})

minetest.register_node( "eurokit:slate_roof_long_slope_3", {
	description = "Slate Roof Long Slope 3",
	groups = { roof = 1, cracky = 1, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:slate_roof_slope" },
		{ "eurokit:slate_roof_slope", "eurokit:slate_roof_slope", "eurokit:slate_roof_slope" }
	}
})

minetest.register_node( "eurokit:slate_roof_long_slope_2_inward", {
	description = "Slate Roof Long Slope 2 Inward",
	groups = { roof = 1, cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:slate_roof_long_slope_2", "" },
		{ "eurokit:slate_roof_long_slope_2", "", "eurokit:slate_roof_long_slope_2" },
		{ "eurokit:slate_roof_long_slope_2", "eurokit:slate_roof_long_slope_2", "eurokit:slate_roof_long_slope_2" }
	}
})

minetest.register_node( "eurokit:slate_roof_slope_inward", {
	description = "Slate Roof Slope Inward",
	groups = { roof = 1, cracky = 1, inward = 1, slope = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_slope_inward 7",
	recipe = {
		{ "", "", "eurokit:slate_roof" },
		{ "", "eurokit:slate_roof", "" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 2",
	recipe = {
		{ "eurokit:slate_roof_slope_inward", "", "" },
		{ "eurokit:slate_roof_slope_inward", "eurokit:slate_roof_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:slate_roof_long_slope_1_inward", {
	description = "Slate Roof Long Slope 1 Inward",
	groups = { roof = 1, cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:slate_roof_long_slope_1", "" },
		{ "eurokit:slate_roof_long_slope_1", "", "eurokit:slate_roof_long_slope_1" },
		{ "eurokit:slate_roof_long_slope_1", "eurokit:slate_roof_long_slope_1", "eurokit:slate_roof_long_slope_1" }
	}
})

minetest.register_node( "eurokit:slate_roof_slope", {
	description = "Slate Roof Slope",
	groups = { roof = 1, cracky = 1, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "eurokit_slate_roof.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof_slope 11",
	recipe = {
		{ "", "", "eurokit:slate_roof" },
		{ "", "eurokit:slate_roof", "eurokit:slate_roof" },
		{ "eurokit:slate_roof", "eurokit:slate_roof", "eurokit:slate_roof" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:slate_roof 2",
	recipe = {
		{ "eurokit:slate_roof_slope", "eurokit:slate_roof_slope", "" },
		{ "eurokit:slate_roof_slope", "eurokit:slate_roof_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_half_pillar_mid", {
	description = "Obsidian Half Pillar Mid",
	groups = { cracky = 1, pillar = 1, half_pillar = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_half_pillar_mid 1",
	recipe = {
		{ "eurokit:obsidian_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pillar_mid 2",
	recipe = {
		{ "eurokit:obsidian_half_pillar_mid", "eurokit:obsidian_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_pillar_top", {
	description = "Obsidian Pillar Top",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pillar_top 12",
	recipe = {
		{ "default:obsidian", "default:obsidian", "default:obsidian" },
		{ "", "default:obsidian", "" },
		{ "", "default:obsidian", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "eurokit:obsidian_pillar_top", "eurokit:obsidian_pillar_top", "eurokit:obsidian_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_counterarch", {
	description = "Obsidian Counterarch",
	groups = { cracky = 1, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_counterarch 7",
	recipe = {
		{ "default:obsidian", "default:obsidian", "default:obsidian" },
		{ "", "default:obsidian", "default:obsidian" },
		{ "", "", "default:obsidian" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 3",
	recipe = {
		{ "eurokit:obsidian_counterarch", "eurokit:obsidian_counterarch", "" },
		{ "eurokit:obsidian_counterarch", "eurokit:obsidian_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_vertical_arrowslit", {
	description = "Obsidian Vertical Arrowslit",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:obsidian_arrow_hole", "" },
		{ "", "eurokit:obsidian_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_wall_indentation_2_inward", {
	description = "Obsidian Wall Indentation 2 Inward",
	groups = { cracky = 1, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:obsidian_wall_indentation_2", "" },
		{ "eurokit:obsidian_wall_indentation_2", "", "eurokit:obsidian_wall_indentation_2" },
		{ "eurokit:obsidian_wall_indentation_2", "eurokit:obsidian_wall_indentation_2", "eurokit:obsidian_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_wall_indentation_2 4",
	recipe = {
		{ "eurokit:obsidian_wall_indentation_2_inward", "eurokit:obsidian_wall_indentation_2_inward", "eurokit:obsidian_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_half_pillar_base", {
	description = "Obsidian Half Pillar Base",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_half_pillar_base 1",
	recipe = {
		{ "eurokit:obsidian_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pillar_base 1",
	recipe = {
		{ "eurokit:obsidian_half_pillar_base", "eurokit:obsidian_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_small_pointed_arch", {
	description = "Obsidian Small Pointed Arch",
	groups = { cracky = 1, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_small_pointed_arch 9",
	recipe = {
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "eurokit:obsidian_slope" },
		{ "eurokit:obsidian_slope", "", "eurokit:obsidian_slope" },
		{ "eurokit:obsidian_slope", "", "eurokit:obsidian_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_pointed_arch_2", {
	description = "Obsidian Pointed Arch 2",
	groups = { cracky = 1, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pointed_arch_2 3",
	recipe = {
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "" },
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "" },
		{ "eurokit:obsidian_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_slope 5",
	recipe = {
		{ "eurokit:obsidian_pointed_arch_2", "eurokit:obsidian_pointed_arch_2", "" },
		{ "eurokit:obsidian_pointed_arch_2", "eurokit:obsidian_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_machicolation", {
	description = "Obsidian Machicolation",
	groups = { cracky = 1, machicolation = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_machicolation 18",
	recipe = {
		{ "default:obsidian", "", "default:obsidian" },
		{ "default:obsidian", "", "default:obsidian" },
		{ "default:obsidian", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_pointed_arch_1_outward", {
	description = "Obsidian Pointed Arch 1 Outward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_pointed_arch_1", "" },
		{ "eurokit:obsidian_pointed_arch_1", "eurokit:obsidian_pointed_arch_1", "eurokit:obsidian_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pointed_arch_1 1",
	recipe = {
		{ "eurokit:obsidian_pointed_arch_1_outward", "eurokit:obsidian_pointed_arch_1_outward", "eurokit:obsidian_pointed_arch_1_outward" },
		{ "eurokit:obsidian_pointed_arch_1_outward", "eurokit:obsidian_pointed_arch_1_outward", "eurokit:obsidian_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_arrowslit_end_top", {
	description = "Obsidian Arrowslit End Top",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:obsidian_arrow_hole", "eurokit:obsidian_arrow_hole", "eurokit:obsidian_arrow_hole" },
		{ "", "eurokit:obsidian_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_arrowslit_end_bottom", {
	description = "Obsidian Arrowslit End Bottom",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_arrow_hole", "" },
		{ "eurokit:obsidian_arrow_hole", "eurokit:obsidian_arrow_hole", "eurokit:obsidian_arrow_hole" }
	}
})

minetest.register_node( "eurokit:obsidian_wall_indentation_2_outward", {
	description = "Obsidian Wall Indentation 2 Outward",
	groups = { cracky = 1, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_wall_indentation_2", "" },
		{ "eurokit:obsidian_wall_indentation_2", "eurokit:obsidian_wall_indentation_2", "eurokit:obsidian_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_wall_indentation_2 3",
	recipe = {
		{ "eurokit:obsidian_wall_indentation_2_outward", "eurokit:obsidian_wall_indentation_2_outward", "" },
		{ "eurokit:obsidian_wall_indentation_2_outward", "eurokit:obsidian_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_pillar_mid", {
	description = "Obsidian Pillar Mid",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pillar_mid 14",
	recipe = {
		{ "", "default:obsidian", "" },
		{ "", "default:obsidian", "" },
		{ "", "default:obsidian", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "eurokit:obsidian_pillar_mid", "eurokit:obsidian_pillar_mid", "eurokit:obsidian_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_arrowslit_end_left", {
	description = "Obsidian Arrowslit End Left",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:obsidian_arrow_hole", "", "" },
		{ "eurokit:obsidian_arrow_hole", "eurokit:obsidian_arrow_hole", "" },
		{ "eurokit:obsidian_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_wall_indentation_2", {
	description = "Obsidian Wall Indentation 2",
	groups = { cracky = 1, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_wall_indentation_2 2",
	recipe = {
		{ "eurokit:obsidian_slope", "", "" },
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "eurokit:obsidian_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_arch_inward", {
	description = "Obsidian Arch Inward",
	groups = { cracky = 1, inward = 1, arch = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_arch_inward 13",
	recipe = {
		{ "default:obsidian", "default:obsidian", "default:obsidian" },
		{ "default:obsidian", "", "default:obsidian" },
		{ "", "default:obsidian", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "eurokit:obsidian_arch_inward", "eurokit:obsidian_arch_inward", "eurokit:obsidian_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_small_arch", {
	description = "Obsidian Small Arch",
	groups = { cracky = 1, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:obsidian", "" },
		{ "default:obsidian", "", "default:obsidian" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 2",
	recipe = {
		{ "eurokit:obsidian_small_arch", "eurokit:obsidian_small_arch", "" },
		{ "eurokit:obsidian_small_arch", "eurokit:obsidian_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_thin_wall", {
	description = "Obsidian Thin Wall",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_thin_wall 24",
	recipe = {
		{ "default:obsidian", "default:obsidian", "" },
		{ "default:obsidian", "default:obsidian", "" },
		{ "default:obsidian", "default:obsidian", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:obsidian_thin_wall", "eurokit:obsidian_thin_wall", "eurokit:obsidian_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_counterarch_inward", {
	description = "Obsidian Counterarch Inward",
	groups = { cracky = 1, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_counterarch_inward 3",
	recipe = {
		{ "", "default:obsidian", "default:obsidian" },
		{ "", "", "default:obsidian" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 2",
	recipe = {
		{ "eurokit:obsidian_counterarch_inward", "", "" },
		{ "eurokit:obsidian_counterarch_inward", "eurokit:obsidian_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_small_counterarch", {
	description = "Obsidian Small Counterarch",
	groups = { cracky = 1, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_small_counterarch 17",
	recipe = {
		{ "default:obsidian", "default:obsidian", "default:obsidian" },
		{ "default:obsidian", "default:obsidian", "default:obsidian" },
		{ "", "default:obsidian", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "eurokit:obsidian_small_counterarch", "eurokit:obsidian_small_counterarch", "" },
		{ "eurokit:obsidian_small_counterarch", "eurokit:obsidian_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_horizontal_arrowslit", {
	description = "Obsidian Horizontal Arrowslit",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:obsidian_arrow_hole", "eurokit:obsidian_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_arch_outward", {
	description = "Obsidian Arch Outward",
	groups = { cracky = 1, outward = 1, arch = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_arch_outward 22",
	recipe = {
		{ "default:obsidian", "default:obsidian", "default:obsidian" },
		{ "", "default:obsidian", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "eurokit:obsidian_arch_outward", "", "" },
		{ "eurokit:obsidian_arch_outward", "eurokit:obsidian_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_arch", {
	description = "Obsidian Arch",
	groups = { cracky = 1, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_arch 18",
	recipe = {
		{ "default:obsidian", "default:obsidian", "default:obsidian" },
		{ "default:obsidian", "default:obsidian", "" },
		{ "default:obsidian", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "eurokit:obsidian_arch", "eurokit:obsidian_arch", "" },
		{ "eurokit:obsidian_arch", "eurokit:obsidian_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_half_pillar_top", {
	description = "Obsidian Half Pillar Top",
	groups = { cracky = 1, pillar = 1, half_pillar = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_half_pillar_top 1",
	recipe = {
		{ "eurokit:obsidian_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pillar_top 1",
	recipe = {
		{ "eurokit:obsidian_half_pillar_top", "eurokit:obsidian_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_pointed_arch_2_inward", {
	description = "Obsidian Pointed Arch 2 Inward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:obsidian_pointed_arch_2", "" },
		{ "eurokit:obsidian_pointed_arch_2", "", "eurokit:obsidian_pointed_arch_2" },
		{ "eurokit:obsidian_pointed_arch_2", "eurokit:obsidian_pointed_arch_2", "eurokit:obsidian_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pointed_arch_2 6",
	recipe = {
		{ "eurokit:obsidian_pointed_arch_2_inward", "eurokit:obsidian_pointed_arch_2_inward", "" },
		{ "eurokit:obsidian_pointed_arch_2_inward", "eurokit:obsidian_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_pointed_arch_2_outward", {
	description = "Obsidian Pointed Arch 2 Outward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_pointed_arch_2", "" },
		{ "eurokit:obsidian_pointed_arch_2", "eurokit:obsidian_pointed_arch_2", "eurokit:obsidian_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pointed_arch_2 3",
	recipe = {
		{ "eurokit:obsidian_pointed_arch_2_outward", "eurokit:obsidian_pointed_arch_2_outward", "eurokit:obsidian_pointed_arch_2_outward" },
		{ "eurokit:obsidian_pointed_arch_2_outward", "eurokit:obsidian_pointed_arch_2_outward", "eurokit:obsidian_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_wall_indentation_1_outward", {
	description = "Obsidian Wall Indentation 1 Outward",
	groups = { cracky = 1, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_wall_indentation_1", "" },
		{ "eurokit:obsidian_wall_indentation_1", "eurokit:obsidian_wall_indentation_1", "eurokit:obsidian_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_wall_indentation_1 1",
	recipe = {
		{ "eurokit:obsidian_wall_indentation_1_outward", "eurokit:obsidian_wall_indentation_1_outward", "" },
		{ "eurokit:obsidian_wall_indentation_1_outward", "eurokit:obsidian_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_wall_indentation_1_inward", {
	description = "Obsidian Wall Indentation 1 Inward",
	groups = { cracky = 1, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:obsidian_wall_indentation_1", "" },
		{ "eurokit:obsidian_wall_indentation_1", "", "eurokit:obsidian_wall_indentation_1" },
		{ "eurokit:obsidian_wall_indentation_1", "eurokit:obsidian_wall_indentation_1", "eurokit:obsidian_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_wall_indentation_1 5",
	recipe = {
		{ "eurokit:obsidian_wall_indentation_1_inward", "eurokit:obsidian_wall_indentation_1_inward", "eurokit:obsidian_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_pointed_arch_1", {
	description = "Obsidian Pointed Arch 1",
	groups = { cracky = 1, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pointed_arch_1 11",
	recipe = {
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "" },
		{ "eurokit:obsidian_slope", "", "" },
		{ "eurokit:obsidian_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_slope 2",
	recipe = {
		{ "eurokit:obsidian_pointed_arch_1", "eurokit:obsidian_pointed_arch_1", "eurokit:obsidian_pointed_arch_1" },
		{ "eurokit:obsidian_pointed_arch_1", "eurokit:obsidian_pointed_arch_1", "eurokit:obsidian_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_small_straight_arch", {
	description = "Obsidian Small Straight Arch",
	groups = { cracky = 1, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_small_straight_arch 8",
	recipe = {
		{ "default:obsidian", "default:obsidian", "default:obsidian" },
		{ "default:obsidian", "", "default:obsidian" },
		{ "default:obsidian", "", "default:obsidian" }
	}
})

minetest.register_node( "eurokit:obsidian_arrow_hole", {
	description = "Obsidian Arrow Hole",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_arrow_hole 21",
	recipe = {
		{ "", "default:obsidian", "" },
		{ "default:obsidian", "", "default:obsidian" },
		{ "", "default:obsidian", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "eurokit:obsidian_arrow_hole", "eurokit:obsidian_arrow_hole", "" },
		{ "eurokit:obsidian_arrow_hole", "eurokit:obsidian_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_pointed_arch_1_inward", {
	description = "Obsidian Pointed Arch 1 Inward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:obsidian_pointed_arch_1", "" },
		{ "eurokit:obsidian_pointed_arch_1", "", "eurokit:obsidian_pointed_arch_1" },
		{ "eurokit:obsidian_pointed_arch_1", "eurokit:obsidian_pointed_arch_1", "eurokit:obsidian_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pointed_arch_1 7",
	recipe = {
		{ "eurokit:obsidian_pointed_arch_1_inward", "eurokit:obsidian_pointed_arch_1_inward", "" },
		{ "eurokit:obsidian_pointed_arch_1_inward", "eurokit:obsidian_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_wall_indentation_1", {
	description = "Obsidian Wall Indentation 1",
	groups = { cracky = 1, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_wall_indentation_1 7",
	recipe = {
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "" },
		{ "eurokit:obsidian_slope", "", "eurokit:obsidian_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_counterarch_outward", {
	description = "Obsidian Counterarch Outward",
	groups = { cracky = 1, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_counterarch_outward 6",
	recipe = {
		{ "default:obsidian", "default:obsidian", "default:obsidian" },
		{ "", "", "default:obsidian" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "eurokit:obsidian_counterarch_outward", "eurokit:obsidian_counterarch_outward", "eurokit:obsidian_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_arrowslit_end_right", {
	description = "Obsidian Arrowslit End Right",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:obsidian_arrow_hole" },
		{ "", "eurokit:obsidian_arrow_hole", "eurokit:obsidian_arrow_hole" },
		{ "", "", "eurokit:obsidian_arrow_hole" }
	}
})

minetest.register_node( "eurokit:obsidian_pillar_base", {
	description = "Obsidian Pillar Base",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_pillar_base 7",
	recipe = {
		{ "", "default:obsidian", "" },
		{ "", "default:obsidian", "" },
		{ "", "default:obsidian", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "eurokit:obsidian_pillar_base", "eurokit:obsidian_pillar_base", "eurokit:obsidian_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_long_slope_2_outward", {
	description = "Obsidian Long Slope 2 Outward",
	groups = { cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_long_slope_2", "" },
		{ "eurokit:obsidian_long_slope_2", "eurokit:obsidian_long_slope_2", "eurokit:obsidian_long_slope_2" }
	}
})

minetest.register_node( "eurokit:obsidian_slope_outward", {
	description = "Obsidian Slope Outward",
	groups = { cracky = 1, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:obsidian" },
		{ "default:obsidian", "default:obsidian", "default:obsidian" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 1",
	recipe = {
		{ "eurokit:obsidian_slope_outward", "eurokit:obsidian_slope_outward", "eurokit:obsidian_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_long_slope_2", {
	description = "Obsidian Long Slope 2",
	groups = { cracky = 1, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_slope", "" },
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "eurokit:obsidian_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_long_slope_1_outward", {
	description = "Obsidian Long Slope 1 Outward",
	groups = { cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_long_slope_1", "" },
		{ "eurokit:obsidian_long_slope_1", "eurokit:obsidian_long_slope_1", "eurokit:obsidian_long_slope_1" }
	}
})

minetest.register_node( "eurokit:obsidian_long_slope_3_inward", {
	description = "Obsidian Long Slope 3 Inward",
	groups = { cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:obsidian_long_slope_3", "" },
		{ "eurokit:obsidian_long_slope_3", "", "eurokit:obsidian_long_slope_3" },
		{ "eurokit:obsidian_long_slope_3", "eurokit:obsidian_long_slope_3", "eurokit:obsidian_long_slope_3" }
	}
})

minetest.register_node( "eurokit:obsidian_long_slope_1", {
	description = "Obsidian Long Slope 1",
	groups = { cracky = 1, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:obsidian_slope", "", "" },
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "eurokit:obsidian_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_long_slope_3_outward", {
	description = "Obsidian Long Slope 3 Outward",
	groups = { cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_long_slope_3", "" },
		{ "eurokit:obsidian_long_slope_3", "eurokit:obsidian_long_slope_3", "eurokit:obsidian_long_slope_3" }
	}
})

minetest.register_node( "eurokit:obsidian_long_slope_3", {
	description = "Obsidian Long Slope 3",
	groups = { cracky = 1, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:obsidian_slope" },
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "eurokit:obsidian_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_long_slope_2_inward", {
	description = "Obsidian Long Slope 2 Inward",
	groups = { cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:obsidian_long_slope_2", "" },
		{ "eurokit:obsidian_long_slope_2", "", "eurokit:obsidian_long_slope_2" },
		{ "eurokit:obsidian_long_slope_2", "eurokit:obsidian_long_slope_2", "eurokit:obsidian_long_slope_2" }
	}
})

minetest.register_node( "eurokit:obsidian_slope_inward", {
	description = "Obsidian Slope Inward",
	groups = { cracky = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_slope_inward 7",
	recipe = {
		{ "", "", "default:obsidian" },
		{ "", "default:obsidian", "" },
		{ "default:obsidian", "default:obsidian", "default:obsidian" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 2",
	recipe = {
		{ "eurokit:obsidian_slope_inward", "", "" },
		{ "eurokit:obsidian_slope_inward", "eurokit:obsidian_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_long_slope_1_inward", {
	description = "Obsidian Long Slope 1 Inward",
	groups = { cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:obsidian_long_slope_1", "" },
		{ "eurokit:obsidian_long_slope_1", "", "eurokit:obsidian_long_slope_1" },
		{ "eurokit:obsidian_long_slope_1", "eurokit:obsidian_long_slope_1", "eurokit:obsidian_long_slope_1" }
	}
})

minetest.register_node( "eurokit:obsidian_slope", {
	description = "Obsidian Slope",
	groups = { cracky = 1, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_obsidian.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_slope 11",
	recipe = {
		{ "", "", "default:obsidian" },
		{ "", "default:obsidian", "default:obsidian" },
		{ "default:obsidian", "default:obsidian", "default:obsidian" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian 2",
	recipe = {
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "" },
		{ "eurokit:obsidian_slope", "eurokit:obsidian_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_half_pillar_mid", {
	description = "Desert Sandstone Block Half Pillar Mid",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_half_pillar_mid 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pillar_mid 2",
	recipe = {
		{ "eurokit:desert_sandstone_block_half_pillar_mid", "eurokit:desert_sandstone_block_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_pillar_top", {
	description = "Desert Sandstone Block Pillar Top",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pillar_top 12",
	recipe = {
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "", "default:desert_sandstone_block", "" },
		{ "", "default:desert_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_pillar_top", "eurokit:desert_sandstone_block_pillar_top", "eurokit:desert_sandstone_block_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_counterarch", {
	description = "Desert Sandstone Block Counterarch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_counterarch 7",
	recipe = {
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "", "", "default:desert_sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 3",
	recipe = {
		{ "eurokit:desert_sandstone_block_counterarch", "eurokit:desert_sandstone_block_counterarch", "" },
		{ "eurokit:desert_sandstone_block_counterarch", "eurokit:desert_sandstone_block_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_vertical_arrowslit", {
	description = "Desert Sandstone Block Vertical Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:desert_sandstone_block_arrow_hole", "" },
		{ "", "eurokit:desert_sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_wall_indentation_2_inward", {
	description = "Desert Sandstone Block Wall Indentation 2 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:desert_sandstone_block_wall_indentation_2", "" },
		{ "eurokit:desert_sandstone_block_wall_indentation_2", "", "eurokit:desert_sandstone_block_wall_indentation_2" },
		{ "eurokit:desert_sandstone_block_wall_indentation_2", "eurokit:desert_sandstone_block_wall_indentation_2", "eurokit:desert_sandstone_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_wall_indentation_2 4",
	recipe = {
		{ "eurokit:desert_sandstone_block_wall_indentation_2_inward", "eurokit:desert_sandstone_block_wall_indentation_2_inward", "eurokit:desert_sandstone_block_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_half_pillar_base", {
	description = "Desert Sandstone Block Half Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_half_pillar_base 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pillar_base 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_half_pillar_base", "eurokit:desert_sandstone_block_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_small_pointed_arch", {
	description = "Desert Sandstone Block Small Pointed Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_small_pointed_arch 9",
	recipe = {
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope" },
		{ "eurokit:desert_sandstone_block_slope", "", "eurokit:desert_sandstone_block_slope" },
		{ "eurokit:desert_sandstone_block_slope", "", "eurokit:desert_sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_pointed_arch_2", {
	description = "Desert Sandstone Block Pointed Arch 2",
	groups = { cracky = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "" },
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "" },
		{ "eurokit:desert_sandstone_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_slope 5",
	recipe = {
		{ "eurokit:desert_sandstone_block_pointed_arch_2", "eurokit:desert_sandstone_block_pointed_arch_2", "" },
		{ "eurokit:desert_sandstone_block_pointed_arch_2", "eurokit:desert_sandstone_block_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_machicolation", {
	description = "Desert Sandstone Block Machicolation",
	groups = { cracky = 2, machicolation = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_machicolation 18",
	recipe = {
		{ "default:desert_sandstone_block", "", "default:desert_sandstone_block" },
		{ "default:desert_sandstone_block", "", "default:desert_sandstone_block" },
		{ "default:desert_sandstone_block", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_pointed_arch_1_outward", {
	description = "Desert Sandstone Block Pointed Arch 1 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_block_pointed_arch_1", "" },
		{ "eurokit:desert_sandstone_block_pointed_arch_1", "eurokit:desert_sandstone_block_pointed_arch_1", "eurokit:desert_sandstone_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pointed_arch_1 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_pointed_arch_1_outward", "eurokit:desert_sandstone_block_pointed_arch_1_outward", "eurokit:desert_sandstone_block_pointed_arch_1_outward" },
		{ "eurokit:desert_sandstone_block_pointed_arch_1_outward", "eurokit:desert_sandstone_block_pointed_arch_1_outward", "eurokit:desert_sandstone_block_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_arrowslit_end_top", {
	description = "Desert Sandstone Block Arrowslit End Top",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:desert_sandstone_block_arrow_hole", "eurokit:desert_sandstone_block_arrow_hole", "eurokit:desert_sandstone_block_arrow_hole" },
		{ "", "eurokit:desert_sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_arrowslit_end_bottom", {
	description = "Desert Sandstone Block Arrowslit End Bottom",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_block_arrow_hole", "" },
		{ "eurokit:desert_sandstone_block_arrow_hole", "eurokit:desert_sandstone_block_arrow_hole", "eurokit:desert_sandstone_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_wall_indentation_2_outward", {
	description = "Desert Sandstone Block Wall Indentation 2 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_block_wall_indentation_2", "" },
		{ "eurokit:desert_sandstone_block_wall_indentation_2", "eurokit:desert_sandstone_block_wall_indentation_2", "eurokit:desert_sandstone_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_wall_indentation_2 3",
	recipe = {
		{ "eurokit:desert_sandstone_block_wall_indentation_2_outward", "eurokit:desert_sandstone_block_wall_indentation_2_outward", "" },
		{ "eurokit:desert_sandstone_block_wall_indentation_2_outward", "eurokit:desert_sandstone_block_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_pillar_mid", {
	description = "Desert Sandstone Block Pillar Mid",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pillar_mid 14",
	recipe = {
		{ "", "default:desert_sandstone_block", "" },
		{ "", "default:desert_sandstone_block", "" },
		{ "", "default:desert_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_pillar_mid", "eurokit:desert_sandstone_block_pillar_mid", "eurokit:desert_sandstone_block_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_arrowslit_end_left", {
	description = "Desert Sandstone Block Arrowslit End Left",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:desert_sandstone_block_arrow_hole", "", "" },
		{ "eurokit:desert_sandstone_block_arrow_hole", "eurokit:desert_sandstone_block_arrow_hole", "" },
		{ "eurokit:desert_sandstone_block_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_wall_indentation_2", {
	description = "Desert Sandstone Block Wall Indentation 2",
	groups = { cracky = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_wall_indentation_2 2",
	recipe = {
		{ "eurokit:desert_sandstone_block_slope", "", "" },
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_arch_inward", {
	description = "Desert Sandstone Block Arch Inward",
	groups = { cracky = 2, inward = 1, arch = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_arch_inward 13",
	recipe = {
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "default:desert_sandstone_block", "", "default:desert_sandstone_block" },
		{ "", "default:desert_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_arch_inward", "eurokit:desert_sandstone_block_arch_inward", "eurokit:desert_sandstone_block_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_small_arch", {
	description = "Desert Sandstone Block Small Arch",
	groups = { cracky = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:desert_sandstone_block", "" },
		{ "default:desert_sandstone_block", "", "default:desert_sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 2",
	recipe = {
		{ "eurokit:desert_sandstone_block_small_arch", "eurokit:desert_sandstone_block_small_arch", "" },
		{ "eurokit:desert_sandstone_block_small_arch", "eurokit:desert_sandstone_block_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_thin_wall", {
	description = "Desert Sandstone Block Thin Wall",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_thin_wall 24",
	recipe = {
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "" },
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "" },
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_sandstone_block_thin_wall", "eurokit:desert_sandstone_block_thin_wall", "eurokit:desert_sandstone_block_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_counterarch_inward", {
	description = "Desert Sandstone Block Counterarch Inward",
	groups = { cracky = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_counterarch_inward 3",
	recipe = {
		{ "", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "", "", "default:desert_sandstone_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 2",
	recipe = {
		{ "eurokit:desert_sandstone_block_counterarch_inward", "", "" },
		{ "eurokit:desert_sandstone_block_counterarch_inward", "eurokit:desert_sandstone_block_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_small_counterarch", {
	description = "Desert Sandstone Block Small Counterarch",
	groups = { cracky = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_small_counterarch 17",
	recipe = {
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "", "default:desert_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_small_counterarch", "eurokit:desert_sandstone_block_small_counterarch", "" },
		{ "eurokit:desert_sandstone_block_small_counterarch", "eurokit:desert_sandstone_block_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_horizontal_arrowslit", {
	description = "Desert Sandstone Block Horizontal Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_sandstone_block_arrow_hole", "eurokit:desert_sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_arch_outward", {
	description = "Desert Sandstone Block Arch Outward",
	groups = { cracky = 2, outward = 1, arch = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_arch_outward 22",
	recipe = {
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "", "default:desert_sandstone_block", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_arch_outward", "", "" },
		{ "eurokit:desert_sandstone_block_arch_outward", "eurokit:desert_sandstone_block_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_arch", {
	description = "Desert Sandstone Block Arch",
	groups = { cracky = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_arch 18",
	recipe = {
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "" },
		{ "default:desert_sandstone_block", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_arch", "eurokit:desert_sandstone_block_arch", "" },
		{ "eurokit:desert_sandstone_block_arch", "eurokit:desert_sandstone_block_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_half_pillar_top", {
	description = "Desert Sandstone Block Half Pillar Top",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_half_pillar_top 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pillar_top 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_half_pillar_top", "eurokit:desert_sandstone_block_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_pointed_arch_2_inward", {
	description = "Desert Sandstone Block Pointed Arch 2 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:desert_sandstone_block_pointed_arch_2", "" },
		{ "eurokit:desert_sandstone_block_pointed_arch_2", "", "eurokit:desert_sandstone_block_pointed_arch_2" },
		{ "eurokit:desert_sandstone_block_pointed_arch_2", "eurokit:desert_sandstone_block_pointed_arch_2", "eurokit:desert_sandstone_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pointed_arch_2 6",
	recipe = {
		{ "eurokit:desert_sandstone_block_pointed_arch_2_inward", "eurokit:desert_sandstone_block_pointed_arch_2_inward", "" },
		{ "eurokit:desert_sandstone_block_pointed_arch_2_inward", "eurokit:desert_sandstone_block_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_pointed_arch_2_outward", {
	description = "Desert Sandstone Block Pointed Arch 2 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_block_pointed_arch_2", "" },
		{ "eurokit:desert_sandstone_block_pointed_arch_2", "eurokit:desert_sandstone_block_pointed_arch_2", "eurokit:desert_sandstone_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_sandstone_block_pointed_arch_2_outward", "eurokit:desert_sandstone_block_pointed_arch_2_outward", "eurokit:desert_sandstone_block_pointed_arch_2_outward" },
		{ "eurokit:desert_sandstone_block_pointed_arch_2_outward", "eurokit:desert_sandstone_block_pointed_arch_2_outward", "eurokit:desert_sandstone_block_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_wall_indentation_1_outward", {
	description = "Desert Sandstone Block Wall Indentation 1 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_block_wall_indentation_1", "" },
		{ "eurokit:desert_sandstone_block_wall_indentation_1", "eurokit:desert_sandstone_block_wall_indentation_1", "eurokit:desert_sandstone_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_wall_indentation_1 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_wall_indentation_1_outward", "eurokit:desert_sandstone_block_wall_indentation_1_outward", "" },
		{ "eurokit:desert_sandstone_block_wall_indentation_1_outward", "eurokit:desert_sandstone_block_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_wall_indentation_1_inward", {
	description = "Desert Sandstone Block Wall Indentation 1 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_sandstone_block_wall_indentation_1", "" },
		{ "eurokit:desert_sandstone_block_wall_indentation_1", "", "eurokit:desert_sandstone_block_wall_indentation_1" },
		{ "eurokit:desert_sandstone_block_wall_indentation_1", "eurokit:desert_sandstone_block_wall_indentation_1", "eurokit:desert_sandstone_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_wall_indentation_1 5",
	recipe = {
		{ "eurokit:desert_sandstone_block_wall_indentation_1_inward", "eurokit:desert_sandstone_block_wall_indentation_1_inward", "eurokit:desert_sandstone_block_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_pointed_arch_1", {
	description = "Desert Sandstone Block Pointed Arch 1",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pointed_arch_1 11",
	recipe = {
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "" },
		{ "eurokit:desert_sandstone_block_slope", "", "" },
		{ "eurokit:desert_sandstone_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_slope 2",
	recipe = {
		{ "eurokit:desert_sandstone_block_pointed_arch_1", "eurokit:desert_sandstone_block_pointed_arch_1", "eurokit:desert_sandstone_block_pointed_arch_1" },
		{ "eurokit:desert_sandstone_block_pointed_arch_1", "eurokit:desert_sandstone_block_pointed_arch_1", "eurokit:desert_sandstone_block_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_small_straight_arch", {
	description = "Desert Sandstone Block Small Straight Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_small_straight_arch 8",
	recipe = {
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "default:desert_sandstone_block", "", "default:desert_sandstone_block" },
		{ "default:desert_sandstone_block", "", "default:desert_sandstone_block" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_arrow_hole", {
	description = "Desert Sandstone Block Arrow Hole",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_arrow_hole 21",
	recipe = {
		{ "", "default:desert_sandstone_block", "" },
		{ "default:desert_sandstone_block", "", "default:desert_sandstone_block" },
		{ "", "default:desert_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_arrow_hole", "eurokit:desert_sandstone_block_arrow_hole", "" },
		{ "eurokit:desert_sandstone_block_arrow_hole", "eurokit:desert_sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_pointed_arch_1_inward", {
	description = "Desert Sandstone Block Pointed Arch 1 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_sandstone_block_pointed_arch_1", "" },
		{ "eurokit:desert_sandstone_block_pointed_arch_1", "", "eurokit:desert_sandstone_block_pointed_arch_1" },
		{ "eurokit:desert_sandstone_block_pointed_arch_1", "eurokit:desert_sandstone_block_pointed_arch_1", "eurokit:desert_sandstone_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pointed_arch_1 7",
	recipe = {
		{ "eurokit:desert_sandstone_block_pointed_arch_1_inward", "eurokit:desert_sandstone_block_pointed_arch_1_inward", "" },
		{ "eurokit:desert_sandstone_block_pointed_arch_1_inward", "eurokit:desert_sandstone_block_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_wall_indentation_1", {
	description = "Desert Sandstone Block Wall Indentation 1",
	groups = { cracky = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_wall_indentation_1 7",
	recipe = {
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "" },
		{ "eurokit:desert_sandstone_block_slope", "", "eurokit:desert_sandstone_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_counterarch_outward", {
	description = "Desert Sandstone Block Counterarch Outward",
	groups = { cracky = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_counterarch_outward 6",
	recipe = {
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "", "", "default:desert_sandstone_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_counterarch_outward", "eurokit:desert_sandstone_block_counterarch_outward", "eurokit:desert_sandstone_block_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_arrowslit_end_right", {
	description = "Desert Sandstone Block Arrowslit End Right",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_block_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:desert_sandstone_block_arrow_hole" },
		{ "", "eurokit:desert_sandstone_block_arrow_hole", "eurokit:desert_sandstone_block_arrow_hole" },
		{ "", "", "eurokit:desert_sandstone_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_pillar_base", {
	description = "Desert Sandstone Block Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_pillar_base 7",
	recipe = {
		{ "", "default:desert_sandstone_block", "" },
		{ "", "default:desert_sandstone_block", "" },
		{ "", "default:desert_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_pillar_base", "eurokit:desert_sandstone_block_pillar_base", "eurokit:desert_sandstone_block_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_long_slope_2_outward", {
	description = "Desert Sandstone Block Long Slope 2 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_block_long_slope_2", "" },
		{ "eurokit:desert_sandstone_block_long_slope_2", "eurokit:desert_sandstone_block_long_slope_2", "eurokit:desert_sandstone_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_slope_outward", {
	description = "Desert Sandstone Block Slope Outward",
	groups = { cracky = 2, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:desert_sandstone_block" },
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 1",
	recipe = {
		{ "eurokit:desert_sandstone_block_slope_outward", "eurokit:desert_sandstone_block_slope_outward", "eurokit:desert_sandstone_block_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_long_slope_2", {
	description = "Desert Sandstone Block Long Slope 2",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_block_slope", "" },
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_long_slope_1_outward", {
	description = "Desert Sandstone Block Long Slope 1 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_block_long_slope_1", "" },
		{ "eurokit:desert_sandstone_block_long_slope_1", "eurokit:desert_sandstone_block_long_slope_1", "eurokit:desert_sandstone_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_long_slope_3_inward", {
	description = "Desert Sandstone Block Long Slope 3 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:desert_sandstone_block_long_slope_3", "" },
		{ "eurokit:desert_sandstone_block_long_slope_3", "", "eurokit:desert_sandstone_block_long_slope_3" },
		{ "eurokit:desert_sandstone_block_long_slope_3", "eurokit:desert_sandstone_block_long_slope_3", "eurokit:desert_sandstone_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_long_slope_1", {
	description = "Desert Sandstone Block Long Slope 1",
	groups = { cracky = 2, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_sandstone_block_slope", "", "" },
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_long_slope_3_outward", {
	description = "Desert Sandstone Block Long Slope 3 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_block_long_slope_3", "" },
		{ "eurokit:desert_sandstone_block_long_slope_3", "eurokit:desert_sandstone_block_long_slope_3", "eurokit:desert_sandstone_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_long_slope_3", {
	description = "Desert Sandstone Block Long Slope 3",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:desert_sandstone_block_slope" },
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_long_slope_2_inward", {
	description = "Desert Sandstone Block Long Slope 2 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:desert_sandstone_block_long_slope_2", "" },
		{ "eurokit:desert_sandstone_block_long_slope_2", "", "eurokit:desert_sandstone_block_long_slope_2" },
		{ "eurokit:desert_sandstone_block_long_slope_2", "eurokit:desert_sandstone_block_long_slope_2", "eurokit:desert_sandstone_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_slope_inward", {
	description = "Desert Sandstone Block Slope Inward",
	groups = { cracky = 2, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_slope_inward 7",
	recipe = {
		{ "", "", "default:desert_sandstone_block" },
		{ "", "default:desert_sandstone_block", "" },
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 2",
	recipe = {
		{ "eurokit:desert_sandstone_block_slope_inward", "", "" },
		{ "eurokit:desert_sandstone_block_slope_inward", "eurokit:desert_sandstone_block_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_long_slope_1_inward", {
	description = "Desert Sandstone Block Long Slope 1 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:desert_sandstone_block_long_slope_1", "" },
		{ "eurokit:desert_sandstone_block_long_slope_1", "", "eurokit:desert_sandstone_block_long_slope_1" },
		{ "eurokit:desert_sandstone_block_long_slope_1", "eurokit:desert_sandstone_block_long_slope_1", "eurokit:desert_sandstone_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_block_slope", {
	description = "Desert Sandstone Block Slope",
	groups = { cracky = 2, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_desert_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_block_slope 11",
	recipe = {
		{ "", "", "default:desert_sandstone_block" },
		{ "", "default:desert_sandstone_block", "default:desert_sandstone_block" },
		{ "default:desert_sandstone_block", "default:desert_sandstone_block", "default:desert_sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_block 2",
	recipe = {
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "" },
		{ "eurokit:desert_sandstone_block_slope", "eurokit:desert_sandstone_block_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_half_pillar_mid", {
	description = "Stone Block Half Pillar Mid",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_half_pillar_mid 1",
	recipe = {
		{ "eurokit:stone_block_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pillar_mid 2",
	recipe = {
		{ "eurokit:stone_block_half_pillar_mid", "eurokit:stone_block_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_pillar_top", {
	description = "Stone Block Pillar Top",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pillar_top 12",
	recipe = {
		{ "default:stone_block", "default:stone_block", "default:stone_block" },
		{ "", "default:stone_block", "" },
		{ "", "default:stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "eurokit:stone_block_pillar_top", "eurokit:stone_block_pillar_top", "eurokit:stone_block_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_counterarch", {
	description = "Stone Block Counterarch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_counterarch 7",
	recipe = {
		{ "default:stone_block", "default:stone_block", "default:stone_block" },
		{ "", "default:stone_block", "default:stone_block" },
		{ "", "", "default:stone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 3",
	recipe = {
		{ "eurokit:stone_block_counterarch", "eurokit:stone_block_counterarch", "" },
		{ "eurokit:stone_block_counterarch", "eurokit:stone_block_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_vertical_arrowslit", {
	description = "Stone Block Vertical Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:stone_block_arrow_hole", "" },
		{ "", "eurokit:stone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_wall_indentation_2_inward", {
	description = "Stone Block Wall Indentation 2 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:stone_block_wall_indentation_2", "" },
		{ "eurokit:stone_block_wall_indentation_2", "", "eurokit:stone_block_wall_indentation_2" },
		{ "eurokit:stone_block_wall_indentation_2", "eurokit:stone_block_wall_indentation_2", "eurokit:stone_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_wall_indentation_2 4",
	recipe = {
		{ "eurokit:stone_block_wall_indentation_2_inward", "eurokit:stone_block_wall_indentation_2_inward", "eurokit:stone_block_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_half_pillar_base", {
	description = "Stone Block Half Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_half_pillar_base 1",
	recipe = {
		{ "eurokit:stone_block_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pillar_base 1",
	recipe = {
		{ "eurokit:stone_block_half_pillar_base", "eurokit:stone_block_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_small_pointed_arch", {
	description = "Stone Block Small Pointed Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_small_pointed_arch 9",
	recipe = {
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "eurokit:stone_block_slope" },
		{ "eurokit:stone_block_slope", "", "eurokit:stone_block_slope" },
		{ "eurokit:stone_block_slope", "", "eurokit:stone_block_slope" }
	}
})

minetest.register_node( "eurokit:stone_block_pointed_arch_2", {
	description = "Stone Block Pointed Arch 2",
	groups = { cracky = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "" },
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "" },
		{ "eurokit:stone_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_slope 5",
	recipe = {
		{ "eurokit:stone_block_pointed_arch_2", "eurokit:stone_block_pointed_arch_2", "" },
		{ "eurokit:stone_block_pointed_arch_2", "eurokit:stone_block_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_machicolation", {
	description = "Stone Block Machicolation",
	groups = { cracky = 2, machicolation = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_machicolation 18",
	recipe = {
		{ "default:stone_block", "", "default:stone_block" },
		{ "default:stone_block", "", "default:stone_block" },
		{ "default:stone_block", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_pointed_arch_1_outward", {
	description = "Stone Block Pointed Arch 1 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_block_pointed_arch_1", "" },
		{ "eurokit:stone_block_pointed_arch_1", "eurokit:stone_block_pointed_arch_1", "eurokit:stone_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pointed_arch_1 1",
	recipe = {
		{ "eurokit:stone_block_pointed_arch_1_outward", "eurokit:stone_block_pointed_arch_1_outward", "eurokit:stone_block_pointed_arch_1_outward" },
		{ "eurokit:stone_block_pointed_arch_1_outward", "eurokit:stone_block_pointed_arch_1_outward", "eurokit:stone_block_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_arrowslit_end_top", {
	description = "Stone Block Arrowslit End Top",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:stone_block_arrow_hole", "eurokit:stone_block_arrow_hole", "eurokit:stone_block_arrow_hole" },
		{ "", "eurokit:stone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_arrowslit_end_bottom", {
	description = "Stone Block Arrowslit End Bottom",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_block_arrow_hole", "" },
		{ "eurokit:stone_block_arrow_hole", "eurokit:stone_block_arrow_hole", "eurokit:stone_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:stone_block_wall_indentation_2_outward", {
	description = "Stone Block Wall Indentation 2 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_block_wall_indentation_2", "" },
		{ "eurokit:stone_block_wall_indentation_2", "eurokit:stone_block_wall_indentation_2", "eurokit:stone_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_wall_indentation_2 3",
	recipe = {
		{ "eurokit:stone_block_wall_indentation_2_outward", "eurokit:stone_block_wall_indentation_2_outward", "" },
		{ "eurokit:stone_block_wall_indentation_2_outward", "eurokit:stone_block_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_pillar_mid", {
	description = "Stone Block Pillar Mid",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pillar_mid 14",
	recipe = {
		{ "", "default:stone_block", "" },
		{ "", "default:stone_block", "" },
		{ "", "default:stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "eurokit:stone_block_pillar_mid", "eurokit:stone_block_pillar_mid", "eurokit:stone_block_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_arrowslit_end_left", {
	description = "Stone Block Arrowslit End Left",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:stone_block_arrow_hole", "", "" },
		{ "eurokit:stone_block_arrow_hole", "eurokit:stone_block_arrow_hole", "" },
		{ "eurokit:stone_block_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_wall_indentation_2", {
	description = "Stone Block Wall Indentation 2",
	groups = { cracky = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_wall_indentation_2 2",
	recipe = {
		{ "eurokit:stone_block_slope", "", "" },
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "eurokit:stone_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_arch_inward", {
	description = "Stone Block Arch Inward",
	groups = { cracky = 2, inward = 1, arch = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_arch_inward 13",
	recipe = {
		{ "default:stone_block", "default:stone_block", "default:stone_block" },
		{ "default:stone_block", "", "default:stone_block" },
		{ "", "default:stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "eurokit:stone_block_arch_inward", "eurokit:stone_block_arch_inward", "eurokit:stone_block_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_small_arch", {
	description = "Stone Block Small Arch",
	groups = { cracky = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:stone_block", "" },
		{ "default:stone_block", "", "default:stone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 2",
	recipe = {
		{ "eurokit:stone_block_small_arch", "eurokit:stone_block_small_arch", "" },
		{ "eurokit:stone_block_small_arch", "eurokit:stone_block_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_thin_wall", {
	description = "Stone Block Thin Wall",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_thin_wall 24",
	recipe = {
		{ "default:stone_block", "default:stone_block", "" },
		{ "default:stone_block", "default:stone_block", "" },
		{ "default:stone_block", "default:stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:stone_block_thin_wall", "eurokit:stone_block_thin_wall", "eurokit:stone_block_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_counterarch_inward", {
	description = "Stone Block Counterarch Inward",
	groups = { cracky = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_counterarch_inward 3",
	recipe = {
		{ "", "default:stone_block", "default:stone_block" },
		{ "", "", "default:stone_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 2",
	recipe = {
		{ "eurokit:stone_block_counterarch_inward", "", "" },
		{ "eurokit:stone_block_counterarch_inward", "eurokit:stone_block_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_small_counterarch", {
	description = "Stone Block Small Counterarch",
	groups = { cracky = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_small_counterarch 17",
	recipe = {
		{ "default:stone_block", "default:stone_block", "default:stone_block" },
		{ "default:stone_block", "default:stone_block", "default:stone_block" },
		{ "", "default:stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "eurokit:stone_block_small_counterarch", "eurokit:stone_block_small_counterarch", "" },
		{ "eurokit:stone_block_small_counterarch", "eurokit:stone_block_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_horizontal_arrowslit", {
	description = "Stone Block Horizontal Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:stone_block_arrow_hole", "eurokit:stone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_arch_outward", {
	description = "Stone Block Arch Outward",
	groups = { cracky = 2, outward = 1, arch = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_arch_outward 22",
	recipe = {
		{ "default:stone_block", "default:stone_block", "default:stone_block" },
		{ "", "default:stone_block", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "eurokit:stone_block_arch_outward", "", "" },
		{ "eurokit:stone_block_arch_outward", "eurokit:stone_block_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_arch", {
	description = "Stone Block Arch",
	groups = { cracky = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_arch 18",
	recipe = {
		{ "default:stone_block", "default:stone_block", "default:stone_block" },
		{ "default:stone_block", "default:stone_block", "" },
		{ "default:stone_block", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "eurokit:stone_block_arch", "eurokit:stone_block_arch", "" },
		{ "eurokit:stone_block_arch", "eurokit:stone_block_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_half_pillar_top", {
	description = "Stone Block Half Pillar Top",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_half_pillar_top 1",
	recipe = {
		{ "eurokit:stone_block_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pillar_top 1",
	recipe = {
		{ "eurokit:stone_block_half_pillar_top", "eurokit:stone_block_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_pointed_arch_2_inward", {
	description = "Stone Block Pointed Arch 2 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:stone_block_pointed_arch_2", "" },
		{ "eurokit:stone_block_pointed_arch_2", "", "eurokit:stone_block_pointed_arch_2" },
		{ "eurokit:stone_block_pointed_arch_2", "eurokit:stone_block_pointed_arch_2", "eurokit:stone_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pointed_arch_2 6",
	recipe = {
		{ "eurokit:stone_block_pointed_arch_2_inward", "eurokit:stone_block_pointed_arch_2_inward", "" },
		{ "eurokit:stone_block_pointed_arch_2_inward", "eurokit:stone_block_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_pointed_arch_2_outward", {
	description = "Stone Block Pointed Arch 2 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_block_pointed_arch_2", "" },
		{ "eurokit:stone_block_pointed_arch_2", "eurokit:stone_block_pointed_arch_2", "eurokit:stone_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:stone_block_pointed_arch_2_outward", "eurokit:stone_block_pointed_arch_2_outward", "eurokit:stone_block_pointed_arch_2_outward" },
		{ "eurokit:stone_block_pointed_arch_2_outward", "eurokit:stone_block_pointed_arch_2_outward", "eurokit:stone_block_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_wall_indentation_1_outward", {
	description = "Stone Block Wall Indentation 1 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_block_wall_indentation_1", "" },
		{ "eurokit:stone_block_wall_indentation_1", "eurokit:stone_block_wall_indentation_1", "eurokit:stone_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_wall_indentation_1 1",
	recipe = {
		{ "eurokit:stone_block_wall_indentation_1_outward", "eurokit:stone_block_wall_indentation_1_outward", "" },
		{ "eurokit:stone_block_wall_indentation_1_outward", "eurokit:stone_block_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_wall_indentation_1_inward", {
	description = "Stone Block Wall Indentation 1 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:stone_block_wall_indentation_1", "" },
		{ "eurokit:stone_block_wall_indentation_1", "", "eurokit:stone_block_wall_indentation_1" },
		{ "eurokit:stone_block_wall_indentation_1", "eurokit:stone_block_wall_indentation_1", "eurokit:stone_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_wall_indentation_1 5",
	recipe = {
		{ "eurokit:stone_block_wall_indentation_1_inward", "eurokit:stone_block_wall_indentation_1_inward", "eurokit:stone_block_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_pointed_arch_1", {
	description = "Stone Block Pointed Arch 1",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pointed_arch_1 11",
	recipe = {
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "" },
		{ "eurokit:stone_block_slope", "", "" },
		{ "eurokit:stone_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_slope 2",
	recipe = {
		{ "eurokit:stone_block_pointed_arch_1", "eurokit:stone_block_pointed_arch_1", "eurokit:stone_block_pointed_arch_1" },
		{ "eurokit:stone_block_pointed_arch_1", "eurokit:stone_block_pointed_arch_1", "eurokit:stone_block_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_small_straight_arch", {
	description = "Stone Block Small Straight Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_small_straight_arch 8",
	recipe = {
		{ "default:stone_block", "default:stone_block", "default:stone_block" },
		{ "default:stone_block", "", "default:stone_block" },
		{ "default:stone_block", "", "default:stone_block" }
	}
})

minetest.register_node( "eurokit:stone_block_arrow_hole", {
	description = "Stone Block Arrow Hole",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_arrow_hole 21",
	recipe = {
		{ "", "default:stone_block", "" },
		{ "default:stone_block", "", "default:stone_block" },
		{ "", "default:stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "eurokit:stone_block_arrow_hole", "eurokit:stone_block_arrow_hole", "" },
		{ "eurokit:stone_block_arrow_hole", "eurokit:stone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_pointed_arch_1_inward", {
	description = "Stone Block Pointed Arch 1 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:stone_block_pointed_arch_1", "" },
		{ "eurokit:stone_block_pointed_arch_1", "", "eurokit:stone_block_pointed_arch_1" },
		{ "eurokit:stone_block_pointed_arch_1", "eurokit:stone_block_pointed_arch_1", "eurokit:stone_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pointed_arch_1 7",
	recipe = {
		{ "eurokit:stone_block_pointed_arch_1_inward", "eurokit:stone_block_pointed_arch_1_inward", "" },
		{ "eurokit:stone_block_pointed_arch_1_inward", "eurokit:stone_block_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_wall_indentation_1", {
	description = "Stone Block Wall Indentation 1",
	groups = { cracky = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_wall_indentation_1 7",
	recipe = {
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "" },
		{ "eurokit:stone_block_slope", "", "eurokit:stone_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_counterarch_outward", {
	description = "Stone Block Counterarch Outward",
	groups = { cracky = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_counterarch_outward 6",
	recipe = {
		{ "default:stone_block", "default:stone_block", "default:stone_block" },
		{ "", "", "default:stone_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "eurokit:stone_block_counterarch_outward", "eurokit:stone_block_counterarch_outward", "eurokit:stone_block_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_arrowslit_end_right", {
	description = "Stone Block Arrowslit End Right",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_block_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:stone_block_arrow_hole" },
		{ "", "eurokit:stone_block_arrow_hole", "eurokit:stone_block_arrow_hole" },
		{ "", "", "eurokit:stone_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:stone_block_pillar_base", {
	description = "Stone Block Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_pillar_base 7",
	recipe = {
		{ "", "default:stone_block", "" },
		{ "", "default:stone_block", "" },
		{ "", "default:stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "eurokit:stone_block_pillar_base", "eurokit:stone_block_pillar_base", "eurokit:stone_block_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_long_slope_2_outward", {
	description = "Stone Block Long Slope 2 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_block_long_slope_2", "" },
		{ "eurokit:stone_block_long_slope_2", "eurokit:stone_block_long_slope_2", "eurokit:stone_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:stone_block_slope_outward", {
	description = "Stone Block Slope Outward",
	groups = { cracky = 2, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:stone_block" },
		{ "default:stone_block", "default:stone_block", "default:stone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 1",
	recipe = {
		{ "eurokit:stone_block_slope_outward", "eurokit:stone_block_slope_outward", "eurokit:stone_block_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_long_slope_2", {
	description = "Stone Block Long Slope 2",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_block_slope", "" },
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "eurokit:stone_block_slope" }
	}
})

minetest.register_node( "eurokit:stone_block_long_slope_1_outward", {
	description = "Stone Block Long Slope 1 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_block_long_slope_1", "" },
		{ "eurokit:stone_block_long_slope_1", "eurokit:stone_block_long_slope_1", "eurokit:stone_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:stone_block_long_slope_3_inward", {
	description = "Stone Block Long Slope 3 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:stone_block_long_slope_3", "" },
		{ "eurokit:stone_block_long_slope_3", "", "eurokit:stone_block_long_slope_3" },
		{ "eurokit:stone_block_long_slope_3", "eurokit:stone_block_long_slope_3", "eurokit:stone_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:stone_block_long_slope_1", {
	description = "Stone Block Long Slope 1",
	groups = { cracky = 2, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:stone_block_slope", "", "" },
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "eurokit:stone_block_slope" }
	}
})

minetest.register_node( "eurokit:stone_block_long_slope_3_outward", {
	description = "Stone Block Long Slope 3 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_block_long_slope_3", "" },
		{ "eurokit:stone_block_long_slope_3", "eurokit:stone_block_long_slope_3", "eurokit:stone_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:stone_block_long_slope_3", {
	description = "Stone Block Long Slope 3",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:stone_block_slope" },
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "eurokit:stone_block_slope" }
	}
})

minetest.register_node( "eurokit:stone_block_long_slope_2_inward", {
	description = "Stone Block Long Slope 2 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:stone_block_long_slope_2", "" },
		{ "eurokit:stone_block_long_slope_2", "", "eurokit:stone_block_long_slope_2" },
		{ "eurokit:stone_block_long_slope_2", "eurokit:stone_block_long_slope_2", "eurokit:stone_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:stone_block_slope_inward", {
	description = "Stone Block Slope Inward",
	groups = { cracky = 2, inward = 1, slope = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_slope_inward 7",
	recipe = {
		{ "", "", "default:stone_block" },
		{ "", "default:stone_block", "" },
		{ "default:stone_block", "default:stone_block", "default:stone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 2",
	recipe = {
		{ "eurokit:stone_block_slope_inward", "", "" },
		{ "eurokit:stone_block_slope_inward", "eurokit:stone_block_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_block_long_slope_1_inward", {
	description = "Stone Block Long Slope 1 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:stone_block_long_slope_1", "" },
		{ "eurokit:stone_block_long_slope_1", "", "eurokit:stone_block_long_slope_1" },
		{ "eurokit:stone_block_long_slope_1", "eurokit:stone_block_long_slope_1", "eurokit:stone_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:stone_block_slope", {
	description = "Stone Block Slope",
	groups = { cracky = 2, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_block_slope 11",
	recipe = {
		{ "", "", "default:stone_block" },
		{ "", "default:stone_block", "default:stone_block" },
		{ "default:stone_block", "default:stone_block", "default:stone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone_block 2",
	recipe = {
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "" },
		{ "eurokit:stone_block_slope", "eurokit:stone_block_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_half_pillar_mid", {
	description = "Standstone Brick Half Pillar Mid",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_half_pillar_mid 1",
	recipe = {
		{ "eurokit:standstone_brick_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pillar_mid 2",
	recipe = {
		{ "eurokit:standstone_brick_half_pillar_mid", "eurokit:standstone_brick_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_pillar_top", {
	description = "Standstone Brick Pillar Top",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pillar_top 12",
	recipe = {
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" },
		{ "", "default_sandstonebrick", "" },
		{ "", "default_sandstonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "eurokit:standstone_brick_pillar_top", "eurokit:standstone_brick_pillar_top", "eurokit:standstone_brick_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_counterarch", {
	description = "Standstone Brick Counterarch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_counterarch 7",
	recipe = {
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" },
		{ "", "default_sandstonebrick", "default_sandstonebrick" },
		{ "", "", "default_sandstonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 3",
	recipe = {
		{ "eurokit:standstone_brick_counterarch", "eurokit:standstone_brick_counterarch", "" },
		{ "eurokit:standstone_brick_counterarch", "eurokit:standstone_brick_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_vertical_arrowslit", {
	description = "Standstone Brick Vertical Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:standstone_brick_arrow_hole", "" },
		{ "", "eurokit:standstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_wall_indentation_2_inward", {
	description = "Standstone Brick Wall Indentation 2 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:standstone_brick_wall_indentation_2", "" },
		{ "eurokit:standstone_brick_wall_indentation_2", "", "eurokit:standstone_brick_wall_indentation_2" },
		{ "eurokit:standstone_brick_wall_indentation_2", "eurokit:standstone_brick_wall_indentation_2", "eurokit:standstone_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_wall_indentation_2 4",
	recipe = {
		{ "eurokit:standstone_brick_wall_indentation_2_inward", "eurokit:standstone_brick_wall_indentation_2_inward", "eurokit:standstone_brick_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_half_pillar_base", {
	description = "Standstone Brick Half Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_half_pillar_base 1",
	recipe = {
		{ "eurokit:standstone_brick_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pillar_base 1",
	recipe = {
		{ "eurokit:standstone_brick_half_pillar_base", "eurokit:standstone_brick_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_small_pointed_arch", {
	description = "Standstone Brick Small Pointed Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_small_pointed_arch 9",
	recipe = {
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope" },
		{ "eurokit:standstone_brick_slope", "", "eurokit:standstone_brick_slope" },
		{ "eurokit:standstone_brick_slope", "", "eurokit:standstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:standstone_brick_pointed_arch_2", {
	description = "Standstone Brick Pointed Arch 2",
	groups = { cracky = 3, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "" },
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "" },
		{ "eurokit:standstone_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_slope 5",
	recipe = {
		{ "eurokit:standstone_brick_pointed_arch_2", "eurokit:standstone_brick_pointed_arch_2", "" },
		{ "eurokit:standstone_brick_pointed_arch_2", "eurokit:standstone_brick_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_machicolation", {
	description = "Standstone Brick Machicolation",
	groups = { cracky = 3, machicolation = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_machicolation 18",
	recipe = {
		{ "default_sandstonebrick", "", "default_sandstonebrick" },
		{ "default_sandstonebrick", "", "default_sandstonebrick" },
		{ "default_sandstonebrick", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_pointed_arch_1_outward", {
	description = "Standstone Brick Pointed Arch 1 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:standstone_brick_pointed_arch_1", "" },
		{ "eurokit:standstone_brick_pointed_arch_1", "eurokit:standstone_brick_pointed_arch_1", "eurokit:standstone_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pointed_arch_1 1",
	recipe = {
		{ "eurokit:standstone_brick_pointed_arch_1_outward", "eurokit:standstone_brick_pointed_arch_1_outward", "eurokit:standstone_brick_pointed_arch_1_outward" },
		{ "eurokit:standstone_brick_pointed_arch_1_outward", "eurokit:standstone_brick_pointed_arch_1_outward", "eurokit:standstone_brick_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_arrowslit_end_top", {
	description = "Standstone Brick Arrowslit End Top",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:standstone_brick_arrow_hole", "eurokit:standstone_brick_arrow_hole", "eurokit:standstone_brick_arrow_hole" },
		{ "", "eurokit:standstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_arrowslit_end_bottom", {
	description = "Standstone Brick Arrowslit End Bottom",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:standstone_brick_arrow_hole", "" },
		{ "eurokit:standstone_brick_arrow_hole", "eurokit:standstone_brick_arrow_hole", "eurokit:standstone_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:standstone_brick_wall_indentation_2_outward", {
	description = "Standstone Brick Wall Indentation 2 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:standstone_brick_wall_indentation_2", "" },
		{ "eurokit:standstone_brick_wall_indentation_2", "eurokit:standstone_brick_wall_indentation_2", "eurokit:standstone_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_wall_indentation_2 3",
	recipe = {
		{ "eurokit:standstone_brick_wall_indentation_2_outward", "eurokit:standstone_brick_wall_indentation_2_outward", "" },
		{ "eurokit:standstone_brick_wall_indentation_2_outward", "eurokit:standstone_brick_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_pillar_mid", {
	description = "Standstone Brick Pillar Mid",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pillar_mid 14",
	recipe = {
		{ "", "default_sandstonebrick", "" },
		{ "", "default_sandstonebrick", "" },
		{ "", "default_sandstonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "eurokit:standstone_brick_pillar_mid", "eurokit:standstone_brick_pillar_mid", "eurokit:standstone_brick_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_arrowslit_end_left", {
	description = "Standstone Brick Arrowslit End Left",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:standstone_brick_arrow_hole", "", "" },
		{ "eurokit:standstone_brick_arrow_hole", "eurokit:standstone_brick_arrow_hole", "" },
		{ "eurokit:standstone_brick_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_wall_indentation_2", {
	description = "Standstone Brick Wall Indentation 2",
	groups = { cracky = 3, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_wall_indentation_2 2",
	recipe = {
		{ "eurokit:standstone_brick_slope", "", "" },
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_arch_inward", {
	description = "Standstone Brick Arch Inward",
	groups = { cracky = 3, inward = 1, arch = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_arch_inward 13",
	recipe = {
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" },
		{ "default_sandstonebrick", "", "default_sandstonebrick" },
		{ "", "default_sandstonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "eurokit:standstone_brick_arch_inward", "eurokit:standstone_brick_arch_inward", "eurokit:standstone_brick_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_small_arch", {
	description = "Standstone Brick Small Arch",
	groups = { cracky = 3, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default_sandstonebrick", "" },
		{ "default_sandstonebrick", "", "default_sandstonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 2",
	recipe = {
		{ "eurokit:standstone_brick_small_arch", "eurokit:standstone_brick_small_arch", "" },
		{ "eurokit:standstone_brick_small_arch", "eurokit:standstone_brick_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_thin_wall", {
	description = "Standstone Brick Thin Wall",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_thin_wall 24",
	recipe = {
		{ "default_sandstonebrick", "default_sandstonebrick", "" },
		{ "default_sandstonebrick", "default_sandstonebrick", "" },
		{ "default_sandstonebrick", "default_sandstonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:standstone_brick_thin_wall", "eurokit:standstone_brick_thin_wall", "eurokit:standstone_brick_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_counterarch_inward", {
	description = "Standstone Brick Counterarch Inward",
	groups = { cracky = 3, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_counterarch_inward 3",
	recipe = {
		{ "", "default_sandstonebrick", "default_sandstonebrick" },
		{ "", "", "default_sandstonebrick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 2",
	recipe = {
		{ "eurokit:standstone_brick_counterarch_inward", "", "" },
		{ "eurokit:standstone_brick_counterarch_inward", "eurokit:standstone_brick_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_small_counterarch", {
	description = "Standstone Brick Small Counterarch",
	groups = { cracky = 3, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_small_counterarch 17",
	recipe = {
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" },
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" },
		{ "", "default_sandstonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "eurokit:standstone_brick_small_counterarch", "eurokit:standstone_brick_small_counterarch", "" },
		{ "eurokit:standstone_brick_small_counterarch", "eurokit:standstone_brick_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_horizontal_arrowslit", {
	description = "Standstone Brick Horizontal Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:standstone_brick_arrow_hole", "eurokit:standstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_arch_outward", {
	description = "Standstone Brick Arch Outward",
	groups = { cracky = 3, outward = 1, arch = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_arch_outward 22",
	recipe = {
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" },
		{ "", "default_sandstonebrick", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "eurokit:standstone_brick_arch_outward", "", "" },
		{ "eurokit:standstone_brick_arch_outward", "eurokit:standstone_brick_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_arch", {
	description = "Standstone Brick Arch",
	groups = { cracky = 3, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_arch 18",
	recipe = {
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" },
		{ "default_sandstonebrick", "default_sandstonebrick", "" },
		{ "default_sandstonebrick", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "eurokit:standstone_brick_arch", "eurokit:standstone_brick_arch", "" },
		{ "eurokit:standstone_brick_arch", "eurokit:standstone_brick_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_half_pillar_top", {
	description = "Standstone Brick Half Pillar Top",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_half_pillar_top 1",
	recipe = {
		{ "eurokit:standstone_brick_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pillar_top 1",
	recipe = {
		{ "eurokit:standstone_brick_half_pillar_top", "eurokit:standstone_brick_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_pointed_arch_2_inward", {
	description = "Standstone Brick Pointed Arch 2 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:standstone_brick_pointed_arch_2", "" },
		{ "eurokit:standstone_brick_pointed_arch_2", "", "eurokit:standstone_brick_pointed_arch_2" },
		{ "eurokit:standstone_brick_pointed_arch_2", "eurokit:standstone_brick_pointed_arch_2", "eurokit:standstone_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pointed_arch_2 6",
	recipe = {
		{ "eurokit:standstone_brick_pointed_arch_2_inward", "eurokit:standstone_brick_pointed_arch_2_inward", "" },
		{ "eurokit:standstone_brick_pointed_arch_2_inward", "eurokit:standstone_brick_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_pointed_arch_2_outward", {
	description = "Standstone Brick Pointed Arch 2 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:standstone_brick_pointed_arch_2", "" },
		{ "eurokit:standstone_brick_pointed_arch_2", "eurokit:standstone_brick_pointed_arch_2", "eurokit:standstone_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:standstone_brick_pointed_arch_2_outward", "eurokit:standstone_brick_pointed_arch_2_outward", "eurokit:standstone_brick_pointed_arch_2_outward" },
		{ "eurokit:standstone_brick_pointed_arch_2_outward", "eurokit:standstone_brick_pointed_arch_2_outward", "eurokit:standstone_brick_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_wall_indentation_1_outward", {
	description = "Standstone Brick Wall Indentation 1 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:standstone_brick_wall_indentation_1", "" },
		{ "eurokit:standstone_brick_wall_indentation_1", "eurokit:standstone_brick_wall_indentation_1", "eurokit:standstone_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_wall_indentation_1 1",
	recipe = {
		{ "eurokit:standstone_brick_wall_indentation_1_outward", "eurokit:standstone_brick_wall_indentation_1_outward", "" },
		{ "eurokit:standstone_brick_wall_indentation_1_outward", "eurokit:standstone_brick_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_wall_indentation_1_inward", {
	description = "Standstone Brick Wall Indentation 1 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:standstone_brick_wall_indentation_1", "" },
		{ "eurokit:standstone_brick_wall_indentation_1", "", "eurokit:standstone_brick_wall_indentation_1" },
		{ "eurokit:standstone_brick_wall_indentation_1", "eurokit:standstone_brick_wall_indentation_1", "eurokit:standstone_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_wall_indentation_1 5",
	recipe = {
		{ "eurokit:standstone_brick_wall_indentation_1_inward", "eurokit:standstone_brick_wall_indentation_1_inward", "eurokit:standstone_brick_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_pointed_arch_1", {
	description = "Standstone Brick Pointed Arch 1",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pointed_arch_1 11",
	recipe = {
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "" },
		{ "eurokit:standstone_brick_slope", "", "" },
		{ "eurokit:standstone_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_slope 2",
	recipe = {
		{ "eurokit:standstone_brick_pointed_arch_1", "eurokit:standstone_brick_pointed_arch_1", "eurokit:standstone_brick_pointed_arch_1" },
		{ "eurokit:standstone_brick_pointed_arch_1", "eurokit:standstone_brick_pointed_arch_1", "eurokit:standstone_brick_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_small_straight_arch", {
	description = "Standstone Brick Small Straight Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_small_straight_arch 8",
	recipe = {
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" },
		{ "default_sandstonebrick", "", "default_sandstonebrick" },
		{ "default_sandstonebrick", "", "default_sandstonebrick" }
	}
})

minetest.register_node( "eurokit:standstone_brick_arrow_hole", {
	description = "Standstone Brick Arrow Hole",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_arrow_hole 21",
	recipe = {
		{ "", "default_sandstonebrick", "" },
		{ "default_sandstonebrick", "", "default_sandstonebrick" },
		{ "", "default_sandstonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "eurokit:standstone_brick_arrow_hole", "eurokit:standstone_brick_arrow_hole", "" },
		{ "eurokit:standstone_brick_arrow_hole", "eurokit:standstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_pointed_arch_1_inward", {
	description = "Standstone Brick Pointed Arch 1 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:standstone_brick_pointed_arch_1", "" },
		{ "eurokit:standstone_brick_pointed_arch_1", "", "eurokit:standstone_brick_pointed_arch_1" },
		{ "eurokit:standstone_brick_pointed_arch_1", "eurokit:standstone_brick_pointed_arch_1", "eurokit:standstone_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pointed_arch_1 7",
	recipe = {
		{ "eurokit:standstone_brick_pointed_arch_1_inward", "eurokit:standstone_brick_pointed_arch_1_inward", "" },
		{ "eurokit:standstone_brick_pointed_arch_1_inward", "eurokit:standstone_brick_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_wall_indentation_1", {
	description = "Standstone Brick Wall Indentation 1",
	groups = { cracky = 3, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_wall_indentation_1 7",
	recipe = {
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "" },
		{ "eurokit:standstone_brick_slope", "", "eurokit:standstone_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_counterarch_outward", {
	description = "Standstone Brick Counterarch Outward",
	groups = { cracky = 3, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_counterarch_outward 6",
	recipe = {
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" },
		{ "", "", "default_sandstonebrick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "eurokit:standstone_brick_counterarch_outward", "eurokit:standstone_brick_counterarch_outward", "eurokit:standstone_brick_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_arrowslit_end_right", {
	description = "Standstone Brick Arrowslit End Right",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:standstone_brick_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:standstone_brick_arrow_hole" },
		{ "", "eurokit:standstone_brick_arrow_hole", "eurokit:standstone_brick_arrow_hole" },
		{ "", "", "eurokit:standstone_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:standstone_brick_pillar_base", {
	description = "Standstone Brick Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_pillar_base 7",
	recipe = {
		{ "", "default_sandstonebrick", "" },
		{ "", "default_sandstonebrick", "" },
		{ "", "default_sandstonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "eurokit:standstone_brick_pillar_base", "eurokit:standstone_brick_pillar_base", "eurokit:standstone_brick_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_long_slope_2_outward", {
	description = "Standstone Brick Long Slope 2 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:standstone_brick_long_slope_2", "" },
		{ "eurokit:standstone_brick_long_slope_2", "eurokit:standstone_brick_long_slope_2", "eurokit:standstone_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:standstone_brick_slope_outward", {
	description = "Standstone Brick Slope Outward",
	groups = { cracky = 3, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default_sandstonebrick" },
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 1",
	recipe = {
		{ "eurokit:standstone_brick_slope_outward", "eurokit:standstone_brick_slope_outward", "eurokit:standstone_brick_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_long_slope_2", {
	description = "Standstone Brick Long Slope 2",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:standstone_brick_slope", "" },
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:standstone_brick_long_slope_1_outward", {
	description = "Standstone Brick Long Slope 1 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:standstone_brick_long_slope_1", "" },
		{ "eurokit:standstone_brick_long_slope_1", "eurokit:standstone_brick_long_slope_1", "eurokit:standstone_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:standstone_brick_long_slope_3_inward", {
	description = "Standstone Brick Long Slope 3 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:standstone_brick_long_slope_3", "" },
		{ "eurokit:standstone_brick_long_slope_3", "", "eurokit:standstone_brick_long_slope_3" },
		{ "eurokit:standstone_brick_long_slope_3", "eurokit:standstone_brick_long_slope_3", "eurokit:standstone_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:standstone_brick_long_slope_1", {
	description = "Standstone Brick Long Slope 1",
	groups = { cracky = 3, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:standstone_brick_slope", "", "" },
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:standstone_brick_long_slope_3_outward", {
	description = "Standstone Brick Long Slope 3 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:standstone_brick_long_slope_3", "" },
		{ "eurokit:standstone_brick_long_slope_3", "eurokit:standstone_brick_long_slope_3", "eurokit:standstone_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:standstone_brick_long_slope_3", {
	description = "Standstone Brick Long Slope 3",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:standstone_brick_slope" },
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:standstone_brick_long_slope_2_inward", {
	description = "Standstone Brick Long Slope 2 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:standstone_brick_long_slope_2", "" },
		{ "eurokit:standstone_brick_long_slope_2", "", "eurokit:standstone_brick_long_slope_2" },
		{ "eurokit:standstone_brick_long_slope_2", "eurokit:standstone_brick_long_slope_2", "eurokit:standstone_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:standstone_brick_slope_inward", {
	description = "Standstone Brick Slope Inward",
	groups = { cracky = 3, inward = 1, slope = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_slope_inward 7",
	recipe = {
		{ "", "", "default_sandstonebrick" },
		{ "", "default_sandstonebrick", "" },
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 2",
	recipe = {
		{ "eurokit:standstone_brick_slope_inward", "", "" },
		{ "eurokit:standstone_brick_slope_inward", "eurokit:standstone_brick_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:standstone_brick_long_slope_1_inward", {
	description = "Standstone Brick Long Slope 1 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:standstone_brick_long_slope_1", "" },
		{ "eurokit:standstone_brick_long_slope_1", "", "eurokit:standstone_brick_long_slope_1" },
		{ "eurokit:standstone_brick_long_slope_1", "eurokit:standstone_brick_long_slope_1", "eurokit:standstone_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:standstone_brick_slope", {
	description = "Standstone Brick Slope",
	groups = { cracky = 3, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:standstone_brick_slope 11",
	recipe = {
		{ "", "", "default_sandstonebrick" },
		{ "", "default_sandstonebrick", "default_sandstonebrick" },
		{ "default_sandstonebrick", "default_sandstonebrick", "default_sandstonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default_sandstonebrick 2",
	recipe = {
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "" },
		{ "eurokit:standstone_brick_slope", "eurokit:standstone_brick_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_half_pillar_mid", {
	description = "Desert Stone Half Pillar Mid",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_half_pillar_mid 1",
	recipe = {
		{ "eurokit:desert_stone_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pillar_mid 2",
	recipe = {
		{ "eurokit:desert_stone_half_pillar_mid", "eurokit:desert_stone_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_pillar_top", {
	description = "Desert Stone Pillar Top",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pillar_top 12",
	recipe = {
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" },
		{ "", "default:desert_stone", "" },
		{ "", "default:desert_stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "eurokit:desert_stone_pillar_top", "eurokit:desert_stone_pillar_top", "eurokit:desert_stone_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_counterarch", {
	description = "Desert Stone Counterarch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_counterarch 7",
	recipe = {
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" },
		{ "", "default:desert_stone", "default:desert_stone" },
		{ "", "", "default:desert_stone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 3",
	recipe = {
		{ "eurokit:desert_stone_counterarch", "eurokit:desert_stone_counterarch", "" },
		{ "eurokit:desert_stone_counterarch", "eurokit:desert_stone_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_vertical_arrowslit", {
	description = "Desert Stone Vertical Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:desert_stone_arrow_hole", "" },
		{ "", "eurokit:desert_stone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_wall_indentation_2_inward", {
	description = "Desert Stone Wall Indentation 2 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:desert_stone_wall_indentation_2", "" },
		{ "eurokit:desert_stone_wall_indentation_2", "", "eurokit:desert_stone_wall_indentation_2" },
		{ "eurokit:desert_stone_wall_indentation_2", "eurokit:desert_stone_wall_indentation_2", "eurokit:desert_stone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_wall_indentation_2 4",
	recipe = {
		{ "eurokit:desert_stone_wall_indentation_2_inward", "eurokit:desert_stone_wall_indentation_2_inward", "eurokit:desert_stone_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_half_pillar_base", {
	description = "Desert Stone Half Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_half_pillar_base 1",
	recipe = {
		{ "eurokit:desert_stone_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pillar_base 1",
	recipe = {
		{ "eurokit:desert_stone_half_pillar_base", "eurokit:desert_stone_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_small_pointed_arch", {
	description = "Desert Stone Small Pointed Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_small_pointed_arch 9",
	recipe = {
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "eurokit:desert_stone_slope" },
		{ "eurokit:desert_stone_slope", "", "eurokit:desert_stone_slope" },
		{ "eurokit:desert_stone_slope", "", "eurokit:desert_stone_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_pointed_arch_2", {
	description = "Desert Stone Pointed Arch 2",
	groups = { cracky = 3, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "" },
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "" },
		{ "eurokit:desert_stone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_slope 5",
	recipe = {
		{ "eurokit:desert_stone_pointed_arch_2", "eurokit:desert_stone_pointed_arch_2", "" },
		{ "eurokit:desert_stone_pointed_arch_2", "eurokit:desert_stone_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_machicolation", {
	description = "Desert Stone Machicolation",
	groups = { cracky = 3, machicolation = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_machicolation 18",
	recipe = {
		{ "default:desert_stone", "", "default:desert_stone" },
		{ "default:desert_stone", "", "default:desert_stone" },
		{ "default:desert_stone", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_pointed_arch_1_outward", {
	description = "Desert Stone Pointed Arch 1 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_pointed_arch_1", "" },
		{ "eurokit:desert_stone_pointed_arch_1", "eurokit:desert_stone_pointed_arch_1", "eurokit:desert_stone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pointed_arch_1 1",
	recipe = {
		{ "eurokit:desert_stone_pointed_arch_1_outward", "eurokit:desert_stone_pointed_arch_1_outward", "eurokit:desert_stone_pointed_arch_1_outward" },
		{ "eurokit:desert_stone_pointed_arch_1_outward", "eurokit:desert_stone_pointed_arch_1_outward", "eurokit:desert_stone_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_arrowslit_end_top", {
	description = "Desert Stone Arrowslit End Top",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:desert_stone_arrow_hole", "eurokit:desert_stone_arrow_hole", "eurokit:desert_stone_arrow_hole" },
		{ "", "eurokit:desert_stone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_arrowslit_end_bottom", {
	description = "Desert Stone Arrowslit End Bottom",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_arrow_hole", "" },
		{ "eurokit:desert_stone_arrow_hole", "eurokit:desert_stone_arrow_hole", "eurokit:desert_stone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_stone_wall_indentation_2_outward", {
	description = "Desert Stone Wall Indentation 2 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_wall_indentation_2", "" },
		{ "eurokit:desert_stone_wall_indentation_2", "eurokit:desert_stone_wall_indentation_2", "eurokit:desert_stone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_wall_indentation_2 3",
	recipe = {
		{ "eurokit:desert_stone_wall_indentation_2_outward", "eurokit:desert_stone_wall_indentation_2_outward", "" },
		{ "eurokit:desert_stone_wall_indentation_2_outward", "eurokit:desert_stone_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_pillar_mid", {
	description = "Desert Stone Pillar Mid",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pillar_mid 14",
	recipe = {
		{ "", "default:desert_stone", "" },
		{ "", "default:desert_stone", "" },
		{ "", "default:desert_stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "eurokit:desert_stone_pillar_mid", "eurokit:desert_stone_pillar_mid", "eurokit:desert_stone_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_arrowslit_end_left", {
	description = "Desert Stone Arrowslit End Left",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:desert_stone_arrow_hole", "", "" },
		{ "eurokit:desert_stone_arrow_hole", "eurokit:desert_stone_arrow_hole", "" },
		{ "eurokit:desert_stone_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_wall_indentation_2", {
	description = "Desert Stone Wall Indentation 2",
	groups = { cracky = 3, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_wall_indentation_2 2",
	recipe = {
		{ "eurokit:desert_stone_slope", "", "" },
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "eurokit:desert_stone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_arch_inward", {
	description = "Desert Stone Arch Inward",
	groups = { cracky = 3, inward = 1, arch = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_arch_inward 13",
	recipe = {
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" },
		{ "default:desert_stone", "", "default:desert_stone" },
		{ "", "default:desert_stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "eurokit:desert_stone_arch_inward", "eurokit:desert_stone_arch_inward", "eurokit:desert_stone_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_small_arch", {
	description = "Desert Stone Small Arch",
	groups = { cracky = 3, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:desert_stone", "" },
		{ "default:desert_stone", "", "default:desert_stone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 2",
	recipe = {
		{ "eurokit:desert_stone_small_arch", "eurokit:desert_stone_small_arch", "" },
		{ "eurokit:desert_stone_small_arch", "eurokit:desert_stone_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_thin_wall", {
	description = "Desert Stone Thin Wall",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_thin_wall 24",
	recipe = {
		{ "default:desert_stone", "default:desert_stone", "" },
		{ "default:desert_stone", "default:desert_stone", "" },
		{ "default:desert_stone", "default:desert_stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_stone_thin_wall", "eurokit:desert_stone_thin_wall", "eurokit:desert_stone_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_counterarch_inward", {
	description = "Desert Stone Counterarch Inward",
	groups = { cracky = 3, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_counterarch_inward 3",
	recipe = {
		{ "", "default:desert_stone", "default:desert_stone" },
		{ "", "", "default:desert_stone" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 2",
	recipe = {
		{ "eurokit:desert_stone_counterarch_inward", "", "" },
		{ "eurokit:desert_stone_counterarch_inward", "eurokit:desert_stone_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_small_counterarch", {
	description = "Desert Stone Small Counterarch",
	groups = { cracky = 3, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_small_counterarch 17",
	recipe = {
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" },
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" },
		{ "", "default:desert_stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "eurokit:desert_stone_small_counterarch", "eurokit:desert_stone_small_counterarch", "" },
		{ "eurokit:desert_stone_small_counterarch", "eurokit:desert_stone_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_horizontal_arrowslit", {
	description = "Desert Stone Horizontal Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_stone_arrow_hole", "eurokit:desert_stone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_arch_outward", {
	description = "Desert Stone Arch Outward",
	groups = { cracky = 3, outward = 1, arch = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_arch_outward 22",
	recipe = {
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" },
		{ "", "default:desert_stone", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "eurokit:desert_stone_arch_outward", "", "" },
		{ "eurokit:desert_stone_arch_outward", "eurokit:desert_stone_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_arch", {
	description = "Desert Stone Arch",
	groups = { cracky = 3, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_arch 18",
	recipe = {
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" },
		{ "default:desert_stone", "default:desert_stone", "" },
		{ "default:desert_stone", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "eurokit:desert_stone_arch", "eurokit:desert_stone_arch", "" },
		{ "eurokit:desert_stone_arch", "eurokit:desert_stone_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_half_pillar_top", {
	description = "Desert Stone Half Pillar Top",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_half_pillar_top 1",
	recipe = {
		{ "eurokit:desert_stone_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pillar_top 1",
	recipe = {
		{ "eurokit:desert_stone_half_pillar_top", "eurokit:desert_stone_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_pointed_arch_2_inward", {
	description = "Desert Stone Pointed Arch 2 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:desert_stone_pointed_arch_2", "" },
		{ "eurokit:desert_stone_pointed_arch_2", "", "eurokit:desert_stone_pointed_arch_2" },
		{ "eurokit:desert_stone_pointed_arch_2", "eurokit:desert_stone_pointed_arch_2", "eurokit:desert_stone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pointed_arch_2 6",
	recipe = {
		{ "eurokit:desert_stone_pointed_arch_2_inward", "eurokit:desert_stone_pointed_arch_2_inward", "" },
		{ "eurokit:desert_stone_pointed_arch_2_inward", "eurokit:desert_stone_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_pointed_arch_2_outward", {
	description = "Desert Stone Pointed Arch 2 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_pointed_arch_2", "" },
		{ "eurokit:desert_stone_pointed_arch_2", "eurokit:desert_stone_pointed_arch_2", "eurokit:desert_stone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_stone_pointed_arch_2_outward", "eurokit:desert_stone_pointed_arch_2_outward", "eurokit:desert_stone_pointed_arch_2_outward" },
		{ "eurokit:desert_stone_pointed_arch_2_outward", "eurokit:desert_stone_pointed_arch_2_outward", "eurokit:desert_stone_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_wall_indentation_1_outward", {
	description = "Desert Stone Wall Indentation 1 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_wall_indentation_1", "" },
		{ "eurokit:desert_stone_wall_indentation_1", "eurokit:desert_stone_wall_indentation_1", "eurokit:desert_stone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_wall_indentation_1 1",
	recipe = {
		{ "eurokit:desert_stone_wall_indentation_1_outward", "eurokit:desert_stone_wall_indentation_1_outward", "" },
		{ "eurokit:desert_stone_wall_indentation_1_outward", "eurokit:desert_stone_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_wall_indentation_1_inward", {
	description = "Desert Stone Wall Indentation 1 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_stone_wall_indentation_1", "" },
		{ "eurokit:desert_stone_wall_indentation_1", "", "eurokit:desert_stone_wall_indentation_1" },
		{ "eurokit:desert_stone_wall_indentation_1", "eurokit:desert_stone_wall_indentation_1", "eurokit:desert_stone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_wall_indentation_1 5",
	recipe = {
		{ "eurokit:desert_stone_wall_indentation_1_inward", "eurokit:desert_stone_wall_indentation_1_inward", "eurokit:desert_stone_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_pointed_arch_1", {
	description = "Desert Stone Pointed Arch 1",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pointed_arch_1 11",
	recipe = {
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "" },
		{ "eurokit:desert_stone_slope", "", "" },
		{ "eurokit:desert_stone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_slope 2",
	recipe = {
		{ "eurokit:desert_stone_pointed_arch_1", "eurokit:desert_stone_pointed_arch_1", "eurokit:desert_stone_pointed_arch_1" },
		{ "eurokit:desert_stone_pointed_arch_1", "eurokit:desert_stone_pointed_arch_1", "eurokit:desert_stone_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_small_straight_arch", {
	description = "Desert Stone Small Straight Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_small_straight_arch 8",
	recipe = {
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" },
		{ "default:desert_stone", "", "default:desert_stone" },
		{ "default:desert_stone", "", "default:desert_stone" }
	}
})

minetest.register_node( "eurokit:desert_stone_arrow_hole", {
	description = "Desert Stone Arrow Hole",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_arrow_hole 21",
	recipe = {
		{ "", "default:desert_stone", "" },
		{ "default:desert_stone", "", "default:desert_stone" },
		{ "", "default:desert_stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "eurokit:desert_stone_arrow_hole", "eurokit:desert_stone_arrow_hole", "" },
		{ "eurokit:desert_stone_arrow_hole", "eurokit:desert_stone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_pointed_arch_1_inward", {
	description = "Desert Stone Pointed Arch 1 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_stone_pointed_arch_1", "" },
		{ "eurokit:desert_stone_pointed_arch_1", "", "eurokit:desert_stone_pointed_arch_1" },
		{ "eurokit:desert_stone_pointed_arch_1", "eurokit:desert_stone_pointed_arch_1", "eurokit:desert_stone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pointed_arch_1 7",
	recipe = {
		{ "eurokit:desert_stone_pointed_arch_1_inward", "eurokit:desert_stone_pointed_arch_1_inward", "" },
		{ "eurokit:desert_stone_pointed_arch_1_inward", "eurokit:desert_stone_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_wall_indentation_1", {
	description = "Desert Stone Wall Indentation 1",
	groups = { cracky = 3, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_wall_indentation_1 7",
	recipe = {
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "" },
		{ "eurokit:desert_stone_slope", "", "eurokit:desert_stone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_counterarch_outward", {
	description = "Desert Stone Counterarch Outward",
	groups = { cracky = 3, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_counterarch_outward 6",
	recipe = {
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" },
		{ "", "", "default:desert_stone" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "eurokit:desert_stone_counterarch_outward", "eurokit:desert_stone_counterarch_outward", "eurokit:desert_stone_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_arrowslit_end_right", {
	description = "Desert Stone Arrowslit End Right",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:desert_stone_arrow_hole" },
		{ "", "eurokit:desert_stone_arrow_hole", "eurokit:desert_stone_arrow_hole" },
		{ "", "", "eurokit:desert_stone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_stone_pillar_base", {
	description = "Desert Stone Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_pillar_base 7",
	recipe = {
		{ "", "default:desert_stone", "" },
		{ "", "default:desert_stone", "" },
		{ "", "default:desert_stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "eurokit:desert_stone_pillar_base", "eurokit:desert_stone_pillar_base", "eurokit:desert_stone_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_long_slope_2_outward", {
	description = "Desert Stone Long Slope 2 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_long_slope_2", "" },
		{ "eurokit:desert_stone_long_slope_2", "eurokit:desert_stone_long_slope_2", "eurokit:desert_stone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_stone_slope_outward", {
	description = "Desert Stone Slope Outward",
	groups = { cracky = 3, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:desert_stone" },
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 1",
	recipe = {
		{ "eurokit:desert_stone_slope_outward", "eurokit:desert_stone_slope_outward", "eurokit:desert_stone_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_long_slope_2", {
	description = "Desert Stone Long Slope 2",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_slope", "" },
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "eurokit:desert_stone_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_long_slope_1_outward", {
	description = "Desert Stone Long Slope 1 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_long_slope_1", "" },
		{ "eurokit:desert_stone_long_slope_1", "eurokit:desert_stone_long_slope_1", "eurokit:desert_stone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_stone_long_slope_3_inward", {
	description = "Desert Stone Long Slope 3 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:desert_stone_long_slope_3", "" },
		{ "eurokit:desert_stone_long_slope_3", "", "eurokit:desert_stone_long_slope_3" },
		{ "eurokit:desert_stone_long_slope_3", "eurokit:desert_stone_long_slope_3", "eurokit:desert_stone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_stone_long_slope_1", {
	description = "Desert Stone Long Slope 1",
	groups = { cracky = 3, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_stone_slope", "", "" },
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "eurokit:desert_stone_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_long_slope_3_outward", {
	description = "Desert Stone Long Slope 3 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_long_slope_3", "" },
		{ "eurokit:desert_stone_long_slope_3", "eurokit:desert_stone_long_slope_3", "eurokit:desert_stone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_stone_long_slope_3", {
	description = "Desert Stone Long Slope 3",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:desert_stone_slope" },
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "eurokit:desert_stone_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_long_slope_2_inward", {
	description = "Desert Stone Long Slope 2 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:desert_stone_long_slope_2", "" },
		{ "eurokit:desert_stone_long_slope_2", "", "eurokit:desert_stone_long_slope_2" },
		{ "eurokit:desert_stone_long_slope_2", "eurokit:desert_stone_long_slope_2", "eurokit:desert_stone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_stone_slope_inward", {
	description = "Desert Stone Slope Inward",
	groups = { cracky = 3, inward = 1, slope = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_slope_inward 7",
	recipe = {
		{ "", "", "default:desert_stone" },
		{ "", "default:desert_stone", "" },
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 2",
	recipe = {
		{ "eurokit:desert_stone_slope_inward", "", "" },
		{ "eurokit:desert_stone_slope_inward", "eurokit:desert_stone_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_long_slope_1_inward", {
	description = "Desert Stone Long Slope 1 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:desert_stone_long_slope_1", "" },
		{ "eurokit:desert_stone_long_slope_1", "", "eurokit:desert_stone_long_slope_1" },
		{ "eurokit:desert_stone_long_slope_1", "eurokit:desert_stone_long_slope_1", "eurokit:desert_stone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_stone_slope", {
	description = "Desert Stone Slope",
	groups = { cracky = 3, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_desert_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_slope 11",
	recipe = {
		{ "", "", "default:desert_stone" },
		{ "", "default:desert_stone", "default:desert_stone" },
		{ "default:desert_stone", "default:desert_stone", "default:desert_stone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone 2",
	recipe = {
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "" },
		{ "eurokit:desert_stone_slope", "eurokit:desert_stone_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_half_pillar_mid", {
	description = "Stone Brick Half Pillar Mid",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_half_pillar_mid 1",
	recipe = {
		{ "eurokit:stone_brick_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pillar_mid 2",
	recipe = {
		{ "eurokit:stone_brick_half_pillar_mid", "eurokit:stone_brick_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_pillar_top", {
	description = "Stone Brick Pillar Top",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pillar_top 12",
	recipe = {
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" },
		{ "", "default:stonebrick", "" },
		{ "", "default:stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "eurokit:stone_brick_pillar_top", "eurokit:stone_brick_pillar_top", "eurokit:stone_brick_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_counterarch", {
	description = "Stone Brick Counterarch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_counterarch 7",
	recipe = {
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" },
		{ "", "default:stonebrick", "default:stonebrick" },
		{ "", "", "default:stonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 3",
	recipe = {
		{ "eurokit:stone_brick_counterarch", "eurokit:stone_brick_counterarch", "" },
		{ "eurokit:stone_brick_counterarch", "eurokit:stone_brick_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_vertical_arrowslit", {
	description = "Stone Brick Vertical Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:stone_brick_arrow_hole", "" },
		{ "", "eurokit:stone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_wall_indentation_2_inward", {
	description = "Stone Brick Wall Indentation 2 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:stone_brick_wall_indentation_2", "" },
		{ "eurokit:stone_brick_wall_indentation_2", "", "eurokit:stone_brick_wall_indentation_2" },
		{ "eurokit:stone_brick_wall_indentation_2", "eurokit:stone_brick_wall_indentation_2", "eurokit:stone_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_wall_indentation_2 4",
	recipe = {
		{ "eurokit:stone_brick_wall_indentation_2_inward", "eurokit:stone_brick_wall_indentation_2_inward", "eurokit:stone_brick_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_half_pillar_base", {
	description = "Stone Brick Half Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_half_pillar_base 1",
	recipe = {
		{ "eurokit:stone_brick_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pillar_base 1",
	recipe = {
		{ "eurokit:stone_brick_half_pillar_base", "eurokit:stone_brick_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_small_pointed_arch", {
	description = "Stone Brick Small Pointed Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_small_pointed_arch 9",
	recipe = {
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "eurokit:stone_brick_slope" },
		{ "eurokit:stone_brick_slope", "", "eurokit:stone_brick_slope" },
		{ "eurokit:stone_brick_slope", "", "eurokit:stone_brick_slope" }
	}
})

minetest.register_node( "eurokit:stone_brick_pointed_arch_2", {
	description = "Stone Brick Pointed Arch 2",
	groups = { cracky = 3, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "" },
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "" },
		{ "eurokit:stone_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_slope 5",
	recipe = {
		{ "eurokit:stone_brick_pointed_arch_2", "eurokit:stone_brick_pointed_arch_2", "" },
		{ "eurokit:stone_brick_pointed_arch_2", "eurokit:stone_brick_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_machicolation", {
	description = "Stone Brick Machicolation",
	groups = { cracky = 3, machicolation = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_machicolation 18",
	recipe = {
		{ "default:stonebrick", "", "default:stonebrick" },
		{ "default:stonebrick", "", "default:stonebrick" },
		{ "default:stonebrick", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_pointed_arch_1_outward", {
	description = "Stone Brick Pointed Arch 1 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_brick_pointed_arch_1", "" },
		{ "eurokit:stone_brick_pointed_arch_1", "eurokit:stone_brick_pointed_arch_1", "eurokit:stone_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pointed_arch_1 1",
	recipe = {
		{ "eurokit:stone_brick_pointed_arch_1_outward", "eurokit:stone_brick_pointed_arch_1_outward", "eurokit:stone_brick_pointed_arch_1_outward" },
		{ "eurokit:stone_brick_pointed_arch_1_outward", "eurokit:stone_brick_pointed_arch_1_outward", "eurokit:stone_brick_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_arrowslit_end_top", {
	description = "Stone Brick Arrowslit End Top",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:stone_brick_arrow_hole", "eurokit:stone_brick_arrow_hole", "eurokit:stone_brick_arrow_hole" },
		{ "", "eurokit:stone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_arrowslit_end_bottom", {
	description = "Stone Brick Arrowslit End Bottom",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_brick_arrow_hole", "" },
		{ "eurokit:stone_brick_arrow_hole", "eurokit:stone_brick_arrow_hole", "eurokit:stone_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:stone_brick_wall_indentation_2_outward", {
	description = "Stone Brick Wall Indentation 2 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_brick_wall_indentation_2", "" },
		{ "eurokit:stone_brick_wall_indentation_2", "eurokit:stone_brick_wall_indentation_2", "eurokit:stone_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_wall_indentation_2 3",
	recipe = {
		{ "eurokit:stone_brick_wall_indentation_2_outward", "eurokit:stone_brick_wall_indentation_2_outward", "" },
		{ "eurokit:stone_brick_wall_indentation_2_outward", "eurokit:stone_brick_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_pillar_mid", {
	description = "Stone Brick Pillar Mid",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pillar_mid 14",
	recipe = {
		{ "", "default:stonebrick", "" },
		{ "", "default:stonebrick", "" },
		{ "", "default:stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "eurokit:stone_brick_pillar_mid", "eurokit:stone_brick_pillar_mid", "eurokit:stone_brick_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_arrowslit_end_left", {
	description = "Stone Brick Arrowslit End Left",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:stone_brick_arrow_hole", "", "" },
		{ "eurokit:stone_brick_arrow_hole", "eurokit:stone_brick_arrow_hole", "" },
		{ "eurokit:stone_brick_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_wall_indentation_2", {
	description = "Stone Brick Wall Indentation 2",
	groups = { cracky = 3, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_wall_indentation_2 2",
	recipe = {
		{ "eurokit:stone_brick_slope", "", "" },
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "eurokit:stone_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_arch_inward", {
	description = "Stone Brick Arch Inward",
	groups = { cracky = 3, inward = 1, arch = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_arch_inward 13",
	recipe = {
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" },
		{ "default:stonebrick", "", "default:stonebrick" },
		{ "", "default:stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "eurokit:stone_brick_arch_inward", "eurokit:stone_brick_arch_inward", "eurokit:stone_brick_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_small_arch", {
	description = "Stone Brick Small Arch",
	groups = { cracky = 3, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:stonebrick", "" },
		{ "default:stonebrick", "", "default:stonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 2",
	recipe = {
		{ "eurokit:stone_brick_small_arch", "eurokit:stone_brick_small_arch", "" },
		{ "eurokit:stone_brick_small_arch", "eurokit:stone_brick_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_thin_wall", {
	description = "Stone Brick Thin Wall",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_thin_wall 24",
	recipe = {
		{ "default:stonebrick", "default:stonebrick", "" },
		{ "default:stonebrick", "default:stonebrick", "" },
		{ "default:stonebrick", "default:stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:stone_brick_thin_wall", "eurokit:stone_brick_thin_wall", "eurokit:stone_brick_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_counterarch_inward", {
	description = "Stone Brick Counterarch Inward",
	groups = { cracky = 3, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_counterarch_inward 3",
	recipe = {
		{ "", "default:stonebrick", "default:stonebrick" },
		{ "", "", "default:stonebrick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 2",
	recipe = {
		{ "eurokit:stone_brick_counterarch_inward", "", "" },
		{ "eurokit:stone_brick_counterarch_inward", "eurokit:stone_brick_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_small_counterarch", {
	description = "Stone Brick Small Counterarch",
	groups = { cracky = 3, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_small_counterarch 17",
	recipe = {
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" },
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" },
		{ "", "default:stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "eurokit:stone_brick_small_counterarch", "eurokit:stone_brick_small_counterarch", "" },
		{ "eurokit:stone_brick_small_counterarch", "eurokit:stone_brick_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_horizontal_arrowslit", {
	description = "Stone Brick Horizontal Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:stone_brick_arrow_hole", "eurokit:stone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_arch_outward", {
	description = "Stone Brick Arch Outward",
	groups = { cracky = 3, outward = 1, arch = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_arch_outward 22",
	recipe = {
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" },
		{ "", "default:stonebrick", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "eurokit:stone_brick_arch_outward", "", "" },
		{ "eurokit:stone_brick_arch_outward", "eurokit:stone_brick_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_arch", {
	description = "Stone Brick Arch",
	groups = { cracky = 3, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_arch 18",
	recipe = {
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" },
		{ "default:stonebrick", "default:stonebrick", "" },
		{ "default:stonebrick", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "eurokit:stone_brick_arch", "eurokit:stone_brick_arch", "" },
		{ "eurokit:stone_brick_arch", "eurokit:stone_brick_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_half_pillar_top", {
	description = "Stone Brick Half Pillar Top",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_half_pillar_top 1",
	recipe = {
		{ "eurokit:stone_brick_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pillar_top 1",
	recipe = {
		{ "eurokit:stone_brick_half_pillar_top", "eurokit:stone_brick_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_pointed_arch_2_inward", {
	description = "Stone Brick Pointed Arch 2 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:stone_brick_pointed_arch_2", "" },
		{ "eurokit:stone_brick_pointed_arch_2", "", "eurokit:stone_brick_pointed_arch_2" },
		{ "eurokit:stone_brick_pointed_arch_2", "eurokit:stone_brick_pointed_arch_2", "eurokit:stone_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pointed_arch_2 6",
	recipe = {
		{ "eurokit:stone_brick_pointed_arch_2_inward", "eurokit:stone_brick_pointed_arch_2_inward", "" },
		{ "eurokit:stone_brick_pointed_arch_2_inward", "eurokit:stone_brick_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_pointed_arch_2_outward", {
	description = "Stone Brick Pointed Arch 2 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_brick_pointed_arch_2", "" },
		{ "eurokit:stone_brick_pointed_arch_2", "eurokit:stone_brick_pointed_arch_2", "eurokit:stone_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:stone_brick_pointed_arch_2_outward", "eurokit:stone_brick_pointed_arch_2_outward", "eurokit:stone_brick_pointed_arch_2_outward" },
		{ "eurokit:stone_brick_pointed_arch_2_outward", "eurokit:stone_brick_pointed_arch_2_outward", "eurokit:stone_brick_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_wall_indentation_1_outward", {
	description = "Stone Brick Wall Indentation 1 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_brick_wall_indentation_1", "" },
		{ "eurokit:stone_brick_wall_indentation_1", "eurokit:stone_brick_wall_indentation_1", "eurokit:stone_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_wall_indentation_1 1",
	recipe = {
		{ "eurokit:stone_brick_wall_indentation_1_outward", "eurokit:stone_brick_wall_indentation_1_outward", "" },
		{ "eurokit:stone_brick_wall_indentation_1_outward", "eurokit:stone_brick_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_wall_indentation_1_inward", {
	description = "Stone Brick Wall Indentation 1 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:stone_brick_wall_indentation_1", "" },
		{ "eurokit:stone_brick_wall_indentation_1", "", "eurokit:stone_brick_wall_indentation_1" },
		{ "eurokit:stone_brick_wall_indentation_1", "eurokit:stone_brick_wall_indentation_1", "eurokit:stone_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_wall_indentation_1 5",
	recipe = {
		{ "eurokit:stone_brick_wall_indentation_1_inward", "eurokit:stone_brick_wall_indentation_1_inward", "eurokit:stone_brick_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_pointed_arch_1", {
	description = "Stone Brick Pointed Arch 1",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pointed_arch_1 11",
	recipe = {
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "" },
		{ "eurokit:stone_brick_slope", "", "" },
		{ "eurokit:stone_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_slope 2",
	recipe = {
		{ "eurokit:stone_brick_pointed_arch_1", "eurokit:stone_brick_pointed_arch_1", "eurokit:stone_brick_pointed_arch_1" },
		{ "eurokit:stone_brick_pointed_arch_1", "eurokit:stone_brick_pointed_arch_1", "eurokit:stone_brick_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_small_straight_arch", {
	description = "Stone Brick Small Straight Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_small_straight_arch 8",
	recipe = {
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" },
		{ "default:stonebrick", "", "default:stonebrick" },
		{ "default:stonebrick", "", "default:stonebrick" }
	}
})

minetest.register_node( "eurokit:stone_brick_arrow_hole", {
	description = "Stone Brick Arrow Hole",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_arrow_hole 21",
	recipe = {
		{ "", "default:stonebrick", "" },
		{ "default:stonebrick", "", "default:stonebrick" },
		{ "", "default:stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "eurokit:stone_brick_arrow_hole", "eurokit:stone_brick_arrow_hole", "" },
		{ "eurokit:stone_brick_arrow_hole", "eurokit:stone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_pointed_arch_1_inward", {
	description = "Stone Brick Pointed Arch 1 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:stone_brick_pointed_arch_1", "" },
		{ "eurokit:stone_brick_pointed_arch_1", "", "eurokit:stone_brick_pointed_arch_1" },
		{ "eurokit:stone_brick_pointed_arch_1", "eurokit:stone_brick_pointed_arch_1", "eurokit:stone_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pointed_arch_1 7",
	recipe = {
		{ "eurokit:stone_brick_pointed_arch_1_inward", "eurokit:stone_brick_pointed_arch_1_inward", "" },
		{ "eurokit:stone_brick_pointed_arch_1_inward", "eurokit:stone_brick_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_wall_indentation_1", {
	description = "Stone Brick Wall Indentation 1",
	groups = { cracky = 3, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_wall_indentation_1 7",
	recipe = {
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "" },
		{ "eurokit:stone_brick_slope", "", "eurokit:stone_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_counterarch_outward", {
	description = "Stone Brick Counterarch Outward",
	groups = { cracky = 3, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_counterarch_outward 6",
	recipe = {
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" },
		{ "", "", "default:stonebrick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "eurokit:stone_brick_counterarch_outward", "eurokit:stone_brick_counterarch_outward", "eurokit:stone_brick_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_arrowslit_end_right", {
	description = "Stone Brick Arrowslit End Right",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_brick_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:stone_brick_arrow_hole" },
		{ "", "eurokit:stone_brick_arrow_hole", "eurokit:stone_brick_arrow_hole" },
		{ "", "", "eurokit:stone_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:stone_brick_pillar_base", {
	description = "Stone Brick Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_pillar_base 7",
	recipe = {
		{ "", "default:stonebrick", "" },
		{ "", "default:stonebrick", "" },
		{ "", "default:stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "eurokit:stone_brick_pillar_base", "eurokit:stone_brick_pillar_base", "eurokit:stone_brick_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_long_slope_2_outward", {
	description = "Stone Brick Long Slope 2 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_brick_long_slope_2", "" },
		{ "eurokit:stone_brick_long_slope_2", "eurokit:stone_brick_long_slope_2", "eurokit:stone_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:stone_brick_slope_outward", {
	description = "Stone Brick Slope Outward",
	groups = { cracky = 3, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:stonebrick" },
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 1",
	recipe = {
		{ "eurokit:stone_brick_slope_outward", "eurokit:stone_brick_slope_outward", "eurokit:stone_brick_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_long_slope_2", {
	description = "Stone Brick Long Slope 2",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_brick_slope", "" },
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "eurokit:stone_brick_slope" }
	}
})

minetest.register_node( "eurokit:stone_brick_long_slope_1_outward", {
	description = "Stone Brick Long Slope 1 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_brick_long_slope_1", "" },
		{ "eurokit:stone_brick_long_slope_1", "eurokit:stone_brick_long_slope_1", "eurokit:stone_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:stone_brick_long_slope_3_inward", {
	description = "Stone Brick Long Slope 3 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:stone_brick_long_slope_3", "" },
		{ "eurokit:stone_brick_long_slope_3", "", "eurokit:stone_brick_long_slope_3" },
		{ "eurokit:stone_brick_long_slope_3", "eurokit:stone_brick_long_slope_3", "eurokit:stone_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:stone_brick_long_slope_1", {
	description = "Stone Brick Long Slope 1",
	groups = { cracky = 3, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:stone_brick_slope", "", "" },
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "eurokit:stone_brick_slope" }
	}
})

minetest.register_node( "eurokit:stone_brick_long_slope_3_outward", {
	description = "Stone Brick Long Slope 3 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_brick_long_slope_3", "" },
		{ "eurokit:stone_brick_long_slope_3", "eurokit:stone_brick_long_slope_3", "eurokit:stone_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:stone_brick_long_slope_3", {
	description = "Stone Brick Long Slope 3",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:stone_brick_slope" },
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "eurokit:stone_brick_slope" }
	}
})

minetest.register_node( "eurokit:stone_brick_long_slope_2_inward", {
	description = "Stone Brick Long Slope 2 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:stone_brick_long_slope_2", "" },
		{ "eurokit:stone_brick_long_slope_2", "", "eurokit:stone_brick_long_slope_2" },
		{ "eurokit:stone_brick_long_slope_2", "eurokit:stone_brick_long_slope_2", "eurokit:stone_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:stone_brick_slope_inward", {
	description = "Stone Brick Slope Inward",
	groups = { cracky = 3, inward = 1, slope = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_slope_inward 7",
	recipe = {
		{ "", "", "default:stonebrick" },
		{ "", "default:stonebrick", "" },
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 2",
	recipe = {
		{ "eurokit:stone_brick_slope_inward", "", "" },
		{ "eurokit:stone_brick_slope_inward", "eurokit:stone_brick_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_brick_long_slope_1_inward", {
	description = "Stone Brick Long Slope 1 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:stone_brick_long_slope_1", "" },
		{ "eurokit:stone_brick_long_slope_1", "", "eurokit:stone_brick_long_slope_1" },
		{ "eurokit:stone_brick_long_slope_1", "eurokit:stone_brick_long_slope_1", "eurokit:stone_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:stone_brick_slope", {
	description = "Stone Brick Slope",
	groups = { cracky = 3, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_brick_slope 11",
	recipe = {
		{ "", "", "default:stonebrick" },
		{ "", "default:stonebrick", "default:stonebrick" },
		{ "default:stonebrick", "default:stonebrick", "default:stonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stonebrick 2",
	recipe = {
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "" },
		{ "eurokit:stone_brick_slope", "eurokit:stone_brick_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_half_pillar_mid", {
	description = "Silver Sandstone Block Half Pillar Mid",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_half_pillar_mid 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pillar_mid 2",
	recipe = {
		{ "eurokit:silver_sandstone_block_half_pillar_mid", "eurokit:silver_sandstone_block_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_pillar_top", {
	description = "Silver Sandstone Block Pillar Top",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pillar_top 12",
	recipe = {
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "", "default:silver_sandstone_block", "" },
		{ "", "default:silver_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_pillar_top", "eurokit:silver_sandstone_block_pillar_top", "eurokit:silver_sandstone_block_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_counterarch", {
	description = "Silver Sandstone Block Counterarch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_counterarch 7",
	recipe = {
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "", "", "default:silver_sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 3",
	recipe = {
		{ "eurokit:silver_sandstone_block_counterarch", "eurokit:silver_sandstone_block_counterarch", "" },
		{ "eurokit:silver_sandstone_block_counterarch", "eurokit:silver_sandstone_block_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_vertical_arrowslit", {
	description = "Silver Sandstone Block Vertical Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:silver_sandstone_block_arrow_hole", "" },
		{ "", "eurokit:silver_sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_wall_indentation_2_inward", {
	description = "Silver Sandstone Block Wall Indentation 2 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:silver_sandstone_block_wall_indentation_2", "" },
		{ "eurokit:silver_sandstone_block_wall_indentation_2", "", "eurokit:silver_sandstone_block_wall_indentation_2" },
		{ "eurokit:silver_sandstone_block_wall_indentation_2", "eurokit:silver_sandstone_block_wall_indentation_2", "eurokit:silver_sandstone_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_wall_indentation_2 4",
	recipe = {
		{ "eurokit:silver_sandstone_block_wall_indentation_2_inward", "eurokit:silver_sandstone_block_wall_indentation_2_inward", "eurokit:silver_sandstone_block_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_half_pillar_base", {
	description = "Silver Sandstone Block Half Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_half_pillar_base 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pillar_base 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_half_pillar_base", "eurokit:silver_sandstone_block_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_small_pointed_arch", {
	description = "Silver Sandstone Block Small Pointed Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_small_pointed_arch 9",
	recipe = {
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope" },
		{ "eurokit:silver_sandstone_block_slope", "", "eurokit:silver_sandstone_block_slope" },
		{ "eurokit:silver_sandstone_block_slope", "", "eurokit:silver_sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_pointed_arch_2", {
	description = "Silver Sandstone Block Pointed Arch 2",
	groups = { cracky = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "" },
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "" },
		{ "eurokit:silver_sandstone_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_slope 5",
	recipe = {
		{ "eurokit:silver_sandstone_block_pointed_arch_2", "eurokit:silver_sandstone_block_pointed_arch_2", "" },
		{ "eurokit:silver_sandstone_block_pointed_arch_2", "eurokit:silver_sandstone_block_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_machicolation", {
	description = "Silver Sandstone Block Machicolation",
	groups = { cracky = 2, machicolation = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_machicolation 18",
	recipe = {
		{ "default:silver_sandstone_block", "", "default:silver_sandstone_block" },
		{ "default:silver_sandstone_block", "", "default:silver_sandstone_block" },
		{ "default:silver_sandstone_block", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_pointed_arch_1_outward", {
	description = "Silver Sandstone Block Pointed Arch 1 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_block_pointed_arch_1", "" },
		{ "eurokit:silver_sandstone_block_pointed_arch_1", "eurokit:silver_sandstone_block_pointed_arch_1", "eurokit:silver_sandstone_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pointed_arch_1 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_pointed_arch_1_outward", "eurokit:silver_sandstone_block_pointed_arch_1_outward", "eurokit:silver_sandstone_block_pointed_arch_1_outward" },
		{ "eurokit:silver_sandstone_block_pointed_arch_1_outward", "eurokit:silver_sandstone_block_pointed_arch_1_outward", "eurokit:silver_sandstone_block_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_arrowslit_end_top", {
	description = "Silver Sandstone Block Arrowslit End Top",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:silver_sandstone_block_arrow_hole", "eurokit:silver_sandstone_block_arrow_hole", "eurokit:silver_sandstone_block_arrow_hole" },
		{ "", "eurokit:silver_sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_arrowslit_end_bottom", {
	description = "Silver Sandstone Block Arrowslit End Bottom",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_block_arrow_hole", "" },
		{ "eurokit:silver_sandstone_block_arrow_hole", "eurokit:silver_sandstone_block_arrow_hole", "eurokit:silver_sandstone_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_wall_indentation_2_outward", {
	description = "Silver Sandstone Block Wall Indentation 2 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_block_wall_indentation_2", "" },
		{ "eurokit:silver_sandstone_block_wall_indentation_2", "eurokit:silver_sandstone_block_wall_indentation_2", "eurokit:silver_sandstone_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_wall_indentation_2 3",
	recipe = {
		{ "eurokit:silver_sandstone_block_wall_indentation_2_outward", "eurokit:silver_sandstone_block_wall_indentation_2_outward", "" },
		{ "eurokit:silver_sandstone_block_wall_indentation_2_outward", "eurokit:silver_sandstone_block_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_pillar_mid", {
	description = "Silver Sandstone Block Pillar Mid",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pillar_mid 14",
	recipe = {
		{ "", "default:silver_sandstone_block", "" },
		{ "", "default:silver_sandstone_block", "" },
		{ "", "default:silver_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_pillar_mid", "eurokit:silver_sandstone_block_pillar_mid", "eurokit:silver_sandstone_block_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_arrowslit_end_left", {
	description = "Silver Sandstone Block Arrowslit End Left",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:silver_sandstone_block_arrow_hole", "", "" },
		{ "eurokit:silver_sandstone_block_arrow_hole", "eurokit:silver_sandstone_block_arrow_hole", "" },
		{ "eurokit:silver_sandstone_block_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_wall_indentation_2", {
	description = "Silver Sandstone Block Wall Indentation 2",
	groups = { cracky = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_wall_indentation_2 2",
	recipe = {
		{ "eurokit:silver_sandstone_block_slope", "", "" },
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_arch_inward", {
	description = "Silver Sandstone Block Arch Inward",
	groups = { cracky = 2, inward = 1, arch = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_arch_inward 13",
	recipe = {
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "default:silver_sandstone_block", "", "default:silver_sandstone_block" },
		{ "", "default:silver_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_arch_inward", "eurokit:silver_sandstone_block_arch_inward", "eurokit:silver_sandstone_block_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_small_arch", {
	description = "Silver Sandstone Block Small Arch",
	groups = { cracky = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:silver_sandstone_block", "" },
		{ "default:silver_sandstone_block", "", "default:silver_sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 2",
	recipe = {
		{ "eurokit:silver_sandstone_block_small_arch", "eurokit:silver_sandstone_block_small_arch", "" },
		{ "eurokit:silver_sandstone_block_small_arch", "eurokit:silver_sandstone_block_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_thin_wall", {
	description = "Silver Sandstone Block Thin Wall",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_thin_wall 24",
	recipe = {
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "" },
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "" },
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:silver_sandstone_block_thin_wall", "eurokit:silver_sandstone_block_thin_wall", "eurokit:silver_sandstone_block_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_counterarch_inward", {
	description = "Silver Sandstone Block Counterarch Inward",
	groups = { cracky = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_counterarch_inward 3",
	recipe = {
		{ "", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "", "", "default:silver_sandstone_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 2",
	recipe = {
		{ "eurokit:silver_sandstone_block_counterarch_inward", "", "" },
		{ "eurokit:silver_sandstone_block_counterarch_inward", "eurokit:silver_sandstone_block_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_small_counterarch", {
	description = "Silver Sandstone Block Small Counterarch",
	groups = { cracky = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_small_counterarch 17",
	recipe = {
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "", "default:silver_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_small_counterarch", "eurokit:silver_sandstone_block_small_counterarch", "" },
		{ "eurokit:silver_sandstone_block_small_counterarch", "eurokit:silver_sandstone_block_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_horizontal_arrowslit", {
	description = "Silver Sandstone Block Horizontal Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:silver_sandstone_block_arrow_hole", "eurokit:silver_sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_arch_outward", {
	description = "Silver Sandstone Block Arch Outward",
	groups = { cracky = 2, outward = 1, arch = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_arch_outward 22",
	recipe = {
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "", "default:silver_sandstone_block", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_arch_outward", "", "" },
		{ "eurokit:silver_sandstone_block_arch_outward", "eurokit:silver_sandstone_block_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_arch", {
	description = "Silver Sandstone Block Arch",
	groups = { cracky = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_arch 18",
	recipe = {
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "" },
		{ "default:silver_sandstone_block", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_arch", "eurokit:silver_sandstone_block_arch", "" },
		{ "eurokit:silver_sandstone_block_arch", "eurokit:silver_sandstone_block_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_half_pillar_top", {
	description = "Silver Sandstone Block Half Pillar Top",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_half_pillar_top 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pillar_top 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_half_pillar_top", "eurokit:silver_sandstone_block_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_pointed_arch_2_inward", {
	description = "Silver Sandstone Block Pointed Arch 2 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:silver_sandstone_block_pointed_arch_2", "" },
		{ "eurokit:silver_sandstone_block_pointed_arch_2", "", "eurokit:silver_sandstone_block_pointed_arch_2" },
		{ "eurokit:silver_sandstone_block_pointed_arch_2", "eurokit:silver_sandstone_block_pointed_arch_2", "eurokit:silver_sandstone_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pointed_arch_2 6",
	recipe = {
		{ "eurokit:silver_sandstone_block_pointed_arch_2_inward", "eurokit:silver_sandstone_block_pointed_arch_2_inward", "" },
		{ "eurokit:silver_sandstone_block_pointed_arch_2_inward", "eurokit:silver_sandstone_block_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_pointed_arch_2_outward", {
	description = "Silver Sandstone Block Pointed Arch 2 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_block_pointed_arch_2", "" },
		{ "eurokit:silver_sandstone_block_pointed_arch_2", "eurokit:silver_sandstone_block_pointed_arch_2", "eurokit:silver_sandstone_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:silver_sandstone_block_pointed_arch_2_outward", "eurokit:silver_sandstone_block_pointed_arch_2_outward", "eurokit:silver_sandstone_block_pointed_arch_2_outward" },
		{ "eurokit:silver_sandstone_block_pointed_arch_2_outward", "eurokit:silver_sandstone_block_pointed_arch_2_outward", "eurokit:silver_sandstone_block_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_wall_indentation_1_outward", {
	description = "Silver Sandstone Block Wall Indentation 1 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_block_wall_indentation_1", "" },
		{ "eurokit:silver_sandstone_block_wall_indentation_1", "eurokit:silver_sandstone_block_wall_indentation_1", "eurokit:silver_sandstone_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_wall_indentation_1 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_wall_indentation_1_outward", "eurokit:silver_sandstone_block_wall_indentation_1_outward", "" },
		{ "eurokit:silver_sandstone_block_wall_indentation_1_outward", "eurokit:silver_sandstone_block_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_wall_indentation_1_inward", {
	description = "Silver Sandstone Block Wall Indentation 1 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:silver_sandstone_block_wall_indentation_1", "" },
		{ "eurokit:silver_sandstone_block_wall_indentation_1", "", "eurokit:silver_sandstone_block_wall_indentation_1" },
		{ "eurokit:silver_sandstone_block_wall_indentation_1", "eurokit:silver_sandstone_block_wall_indentation_1", "eurokit:silver_sandstone_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_wall_indentation_1 5",
	recipe = {
		{ "eurokit:silver_sandstone_block_wall_indentation_1_inward", "eurokit:silver_sandstone_block_wall_indentation_1_inward", "eurokit:silver_sandstone_block_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_pointed_arch_1", {
	description = "Silver Sandstone Block Pointed Arch 1",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pointed_arch_1 11",
	recipe = {
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "" },
		{ "eurokit:silver_sandstone_block_slope", "", "" },
		{ "eurokit:silver_sandstone_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_slope 2",
	recipe = {
		{ "eurokit:silver_sandstone_block_pointed_arch_1", "eurokit:silver_sandstone_block_pointed_arch_1", "eurokit:silver_sandstone_block_pointed_arch_1" },
		{ "eurokit:silver_sandstone_block_pointed_arch_1", "eurokit:silver_sandstone_block_pointed_arch_1", "eurokit:silver_sandstone_block_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_small_straight_arch", {
	description = "Silver Sandstone Block Small Straight Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_small_straight_arch 8",
	recipe = {
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "default:silver_sandstone_block", "", "default:silver_sandstone_block" },
		{ "default:silver_sandstone_block", "", "default:silver_sandstone_block" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_arrow_hole", {
	description = "Silver Sandstone Block Arrow Hole",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_arrow_hole 21",
	recipe = {
		{ "", "default:silver_sandstone_block", "" },
		{ "default:silver_sandstone_block", "", "default:silver_sandstone_block" },
		{ "", "default:silver_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_arrow_hole", "eurokit:silver_sandstone_block_arrow_hole", "" },
		{ "eurokit:silver_sandstone_block_arrow_hole", "eurokit:silver_sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_pointed_arch_1_inward", {
	description = "Silver Sandstone Block Pointed Arch 1 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:silver_sandstone_block_pointed_arch_1", "" },
		{ "eurokit:silver_sandstone_block_pointed_arch_1", "", "eurokit:silver_sandstone_block_pointed_arch_1" },
		{ "eurokit:silver_sandstone_block_pointed_arch_1", "eurokit:silver_sandstone_block_pointed_arch_1", "eurokit:silver_sandstone_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pointed_arch_1 7",
	recipe = {
		{ "eurokit:silver_sandstone_block_pointed_arch_1_inward", "eurokit:silver_sandstone_block_pointed_arch_1_inward", "" },
		{ "eurokit:silver_sandstone_block_pointed_arch_1_inward", "eurokit:silver_sandstone_block_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_wall_indentation_1", {
	description = "Silver Sandstone Block Wall Indentation 1",
	groups = { cracky = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_wall_indentation_1 7",
	recipe = {
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "" },
		{ "eurokit:silver_sandstone_block_slope", "", "eurokit:silver_sandstone_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_counterarch_outward", {
	description = "Silver Sandstone Block Counterarch Outward",
	groups = { cracky = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_counterarch_outward 6",
	recipe = {
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "", "", "default:silver_sandstone_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_counterarch_outward", "eurokit:silver_sandstone_block_counterarch_outward", "eurokit:silver_sandstone_block_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_arrowslit_end_right", {
	description = "Silver Sandstone Block Arrowslit End Right",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_block_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:silver_sandstone_block_arrow_hole" },
		{ "", "eurokit:silver_sandstone_block_arrow_hole", "eurokit:silver_sandstone_block_arrow_hole" },
		{ "", "", "eurokit:silver_sandstone_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_pillar_base", {
	description = "Silver Sandstone Block Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_pillar_base 7",
	recipe = {
		{ "", "default:silver_sandstone_block", "" },
		{ "", "default:silver_sandstone_block", "" },
		{ "", "default:silver_sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_pillar_base", "eurokit:silver_sandstone_block_pillar_base", "eurokit:silver_sandstone_block_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_long_slope_2_outward", {
	description = "Silver Sandstone Block Long Slope 2 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_block_long_slope_2", "" },
		{ "eurokit:silver_sandstone_block_long_slope_2", "eurokit:silver_sandstone_block_long_slope_2", "eurokit:silver_sandstone_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_slope_outward", {
	description = "Silver Sandstone Block Slope Outward",
	groups = { cracky = 2, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:silver_sandstone_block" },
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 1",
	recipe = {
		{ "eurokit:silver_sandstone_block_slope_outward", "eurokit:silver_sandstone_block_slope_outward", "eurokit:silver_sandstone_block_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_long_slope_2", {
	description = "Silver Sandstone Block Long Slope 2",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_block_slope", "" },
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_long_slope_1_outward", {
	description = "Silver Sandstone Block Long Slope 1 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_block_long_slope_1", "" },
		{ "eurokit:silver_sandstone_block_long_slope_1", "eurokit:silver_sandstone_block_long_slope_1", "eurokit:silver_sandstone_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_long_slope_3_inward", {
	description = "Silver Sandstone Block Long Slope 3 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:silver_sandstone_block_long_slope_3", "" },
		{ "eurokit:silver_sandstone_block_long_slope_3", "", "eurokit:silver_sandstone_block_long_slope_3" },
		{ "eurokit:silver_sandstone_block_long_slope_3", "eurokit:silver_sandstone_block_long_slope_3", "eurokit:silver_sandstone_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_long_slope_1", {
	description = "Silver Sandstone Block Long Slope 1",
	groups = { cracky = 2, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:silver_sandstone_block_slope", "", "" },
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_long_slope_3_outward", {
	description = "Silver Sandstone Block Long Slope 3 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_block_long_slope_3", "" },
		{ "eurokit:silver_sandstone_block_long_slope_3", "eurokit:silver_sandstone_block_long_slope_3", "eurokit:silver_sandstone_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_long_slope_3", {
	description = "Silver Sandstone Block Long Slope 3",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:silver_sandstone_block_slope" },
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_long_slope_2_inward", {
	description = "Silver Sandstone Block Long Slope 2 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:silver_sandstone_block_long_slope_2", "" },
		{ "eurokit:silver_sandstone_block_long_slope_2", "", "eurokit:silver_sandstone_block_long_slope_2" },
		{ "eurokit:silver_sandstone_block_long_slope_2", "eurokit:silver_sandstone_block_long_slope_2", "eurokit:silver_sandstone_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_slope_inward", {
	description = "Silver Sandstone Block Slope Inward",
	groups = { cracky = 2, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_slope_inward 7",
	recipe = {
		{ "", "", "default:silver_sandstone_block" },
		{ "", "default:silver_sandstone_block", "" },
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 2",
	recipe = {
		{ "eurokit:silver_sandstone_block_slope_inward", "", "" },
		{ "eurokit:silver_sandstone_block_slope_inward", "eurokit:silver_sandstone_block_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_long_slope_1_inward", {
	description = "Silver Sandstone Block Long Slope 1 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:silver_sandstone_block_long_slope_1", "" },
		{ "eurokit:silver_sandstone_block_long_slope_1", "", "eurokit:silver_sandstone_block_long_slope_1" },
		{ "eurokit:silver_sandstone_block_long_slope_1", "eurokit:silver_sandstone_block_long_slope_1", "eurokit:silver_sandstone_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_block_slope", {
	description = "Silver Sandstone Block Slope",
	groups = { cracky = 2, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_silver_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_block_slope 11",
	recipe = {
		{ "", "", "default:silver_sandstone_block" },
		{ "", "default:silver_sandstone_block", "default:silver_sandstone_block" },
		{ "default:silver_sandstone_block", "default:silver_sandstone_block", "default:silver_sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_block 2",
	recipe = {
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "" },
		{ "eurokit:silver_sandstone_block_slope", "eurokit:silver_sandstone_block_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_half_pillar_mid", {
	description = "Sandstone Block Half Pillar Mid",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_half_pillar_mid 1",
	recipe = {
		{ "eurokit:sandstone_block_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pillar_mid 2",
	recipe = {
		{ "eurokit:sandstone_block_half_pillar_mid", "eurokit:sandstone_block_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_pillar_top", {
	description = "Sandstone Block Pillar Top",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pillar_top 12",
	recipe = {
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" },
		{ "", "default:sandstone_block", "" },
		{ "", "default:sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "eurokit:sandstone_block_pillar_top", "eurokit:sandstone_block_pillar_top", "eurokit:sandstone_block_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_counterarch", {
	description = "Sandstone Block Counterarch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_counterarch 7",
	recipe = {
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" },
		{ "", "default:sandstone_block", "default:sandstone_block" },
		{ "", "", "default:sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 3",
	recipe = {
		{ "eurokit:sandstone_block_counterarch", "eurokit:sandstone_block_counterarch", "" },
		{ "eurokit:sandstone_block_counterarch", "eurokit:sandstone_block_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_vertical_arrowslit", {
	description = "Sandstone Block Vertical Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:sandstone_block_arrow_hole", "" },
		{ "", "eurokit:sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_wall_indentation_2_inward", {
	description = "Sandstone Block Wall Indentation 2 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:sandstone_block_wall_indentation_2", "" },
		{ "eurokit:sandstone_block_wall_indentation_2", "", "eurokit:sandstone_block_wall_indentation_2" },
		{ "eurokit:sandstone_block_wall_indentation_2", "eurokit:sandstone_block_wall_indentation_2", "eurokit:sandstone_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_wall_indentation_2 4",
	recipe = {
		{ "eurokit:sandstone_block_wall_indentation_2_inward", "eurokit:sandstone_block_wall_indentation_2_inward", "eurokit:sandstone_block_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_half_pillar_base", {
	description = "Sandstone Block Half Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_half_pillar_base 1",
	recipe = {
		{ "eurokit:sandstone_block_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pillar_base 1",
	recipe = {
		{ "eurokit:sandstone_block_half_pillar_base", "eurokit:sandstone_block_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_small_pointed_arch", {
	description = "Sandstone Block Small Pointed Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_small_pointed_arch 9",
	recipe = {
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope" },
		{ "eurokit:sandstone_block_slope", "", "eurokit:sandstone_block_slope" },
		{ "eurokit:sandstone_block_slope", "", "eurokit:sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:sandstone_block_pointed_arch_2", {
	description = "Sandstone Block Pointed Arch 2",
	groups = { cracky = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "" },
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "" },
		{ "eurokit:sandstone_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_slope 5",
	recipe = {
		{ "eurokit:sandstone_block_pointed_arch_2", "eurokit:sandstone_block_pointed_arch_2", "" },
		{ "eurokit:sandstone_block_pointed_arch_2", "eurokit:sandstone_block_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_machicolation", {
	description = "Sandstone Block Machicolation",
	groups = { cracky = 2, machicolation = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_machicolation 18",
	recipe = {
		{ "default:sandstone_block", "", "default:sandstone_block" },
		{ "default:sandstone_block", "", "default:sandstone_block" },
		{ "default:sandstone_block", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_pointed_arch_1_outward", {
	description = "Sandstone Block Pointed Arch 1 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_block_pointed_arch_1", "" },
		{ "eurokit:sandstone_block_pointed_arch_1", "eurokit:sandstone_block_pointed_arch_1", "eurokit:sandstone_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pointed_arch_1 1",
	recipe = {
		{ "eurokit:sandstone_block_pointed_arch_1_outward", "eurokit:sandstone_block_pointed_arch_1_outward", "eurokit:sandstone_block_pointed_arch_1_outward" },
		{ "eurokit:sandstone_block_pointed_arch_1_outward", "eurokit:sandstone_block_pointed_arch_1_outward", "eurokit:sandstone_block_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_arrowslit_end_top", {
	description = "Sandstone Block Arrowslit End Top",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:sandstone_block_arrow_hole", "eurokit:sandstone_block_arrow_hole", "eurokit:sandstone_block_arrow_hole" },
		{ "", "eurokit:sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_arrowslit_end_bottom", {
	description = "Sandstone Block Arrowslit End Bottom",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_block_arrow_hole", "" },
		{ "eurokit:sandstone_block_arrow_hole", "eurokit:sandstone_block_arrow_hole", "eurokit:sandstone_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:sandstone_block_wall_indentation_2_outward", {
	description = "Sandstone Block Wall Indentation 2 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_block_wall_indentation_2", "" },
		{ "eurokit:sandstone_block_wall_indentation_2", "eurokit:sandstone_block_wall_indentation_2", "eurokit:sandstone_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_wall_indentation_2 3",
	recipe = {
		{ "eurokit:sandstone_block_wall_indentation_2_outward", "eurokit:sandstone_block_wall_indentation_2_outward", "" },
		{ "eurokit:sandstone_block_wall_indentation_2_outward", "eurokit:sandstone_block_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_pillar_mid", {
	description = "Sandstone Block Pillar Mid",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pillar_mid 14",
	recipe = {
		{ "", "default:sandstone_block", "" },
		{ "", "default:sandstone_block", "" },
		{ "", "default:sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "eurokit:sandstone_block_pillar_mid", "eurokit:sandstone_block_pillar_mid", "eurokit:sandstone_block_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_arrowslit_end_left", {
	description = "Sandstone Block Arrowslit End Left",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:sandstone_block_arrow_hole", "", "" },
		{ "eurokit:sandstone_block_arrow_hole", "eurokit:sandstone_block_arrow_hole", "" },
		{ "eurokit:sandstone_block_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_wall_indentation_2", {
	description = "Sandstone Block Wall Indentation 2",
	groups = { cracky = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_wall_indentation_2 2",
	recipe = {
		{ "eurokit:sandstone_block_slope", "", "" },
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_arch_inward", {
	description = "Sandstone Block Arch Inward",
	groups = { cracky = 2, inward = 1, arch = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_arch_inward 13",
	recipe = {
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" },
		{ "default:sandstone_block", "", "default:sandstone_block" },
		{ "", "default:sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "eurokit:sandstone_block_arch_inward", "eurokit:sandstone_block_arch_inward", "eurokit:sandstone_block_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_small_arch", {
	description = "Sandstone Block Small Arch",
	groups = { cracky = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:sandstone_block", "" },
		{ "default:sandstone_block", "", "default:sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 2",
	recipe = {
		{ "eurokit:sandstone_block_small_arch", "eurokit:sandstone_block_small_arch", "" },
		{ "eurokit:sandstone_block_small_arch", "eurokit:sandstone_block_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_thin_wall", {
	description = "Sandstone Block Thin Wall",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_thin_wall 24",
	recipe = {
		{ "default:sandstone_block", "default:sandstone_block", "" },
		{ "default:sandstone_block", "default:sandstone_block", "" },
		{ "default:sandstone_block", "default:sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:sandstone_block_thin_wall", "eurokit:sandstone_block_thin_wall", "eurokit:sandstone_block_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_counterarch_inward", {
	description = "Sandstone Block Counterarch Inward",
	groups = { cracky = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_counterarch_inward 3",
	recipe = {
		{ "", "default:sandstone_block", "default:sandstone_block" },
		{ "", "", "default:sandstone_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 2",
	recipe = {
		{ "eurokit:sandstone_block_counterarch_inward", "", "" },
		{ "eurokit:sandstone_block_counterarch_inward", "eurokit:sandstone_block_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_small_counterarch", {
	description = "Sandstone Block Small Counterarch",
	groups = { cracky = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_small_counterarch 17",
	recipe = {
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" },
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" },
		{ "", "default:sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "eurokit:sandstone_block_small_counterarch", "eurokit:sandstone_block_small_counterarch", "" },
		{ "eurokit:sandstone_block_small_counterarch", "eurokit:sandstone_block_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_horizontal_arrowslit", {
	description = "Sandstone Block Horizontal Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:sandstone_block_arrow_hole", "eurokit:sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_arch_outward", {
	description = "Sandstone Block Arch Outward",
	groups = { cracky = 2, outward = 1, arch = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_arch_outward 22",
	recipe = {
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" },
		{ "", "default:sandstone_block", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "eurokit:sandstone_block_arch_outward", "", "" },
		{ "eurokit:sandstone_block_arch_outward", "eurokit:sandstone_block_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_arch", {
	description = "Sandstone Block Arch",
	groups = { cracky = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_arch 18",
	recipe = {
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" },
		{ "default:sandstone_block", "default:sandstone_block", "" },
		{ "default:sandstone_block", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "eurokit:sandstone_block_arch", "eurokit:sandstone_block_arch", "" },
		{ "eurokit:sandstone_block_arch", "eurokit:sandstone_block_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_half_pillar_top", {
	description = "Sandstone Block Half Pillar Top",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_half_pillar_top 1",
	recipe = {
		{ "eurokit:sandstone_block_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pillar_top 1",
	recipe = {
		{ "eurokit:sandstone_block_half_pillar_top", "eurokit:sandstone_block_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_pointed_arch_2_inward", {
	description = "Sandstone Block Pointed Arch 2 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:sandstone_block_pointed_arch_2", "" },
		{ "eurokit:sandstone_block_pointed_arch_2", "", "eurokit:sandstone_block_pointed_arch_2" },
		{ "eurokit:sandstone_block_pointed_arch_2", "eurokit:sandstone_block_pointed_arch_2", "eurokit:sandstone_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pointed_arch_2 6",
	recipe = {
		{ "eurokit:sandstone_block_pointed_arch_2_inward", "eurokit:sandstone_block_pointed_arch_2_inward", "" },
		{ "eurokit:sandstone_block_pointed_arch_2_inward", "eurokit:sandstone_block_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_pointed_arch_2_outward", {
	description = "Sandstone Block Pointed Arch 2 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_block_pointed_arch_2", "" },
		{ "eurokit:sandstone_block_pointed_arch_2", "eurokit:sandstone_block_pointed_arch_2", "eurokit:sandstone_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:sandstone_block_pointed_arch_2_outward", "eurokit:sandstone_block_pointed_arch_2_outward", "eurokit:sandstone_block_pointed_arch_2_outward" },
		{ "eurokit:sandstone_block_pointed_arch_2_outward", "eurokit:sandstone_block_pointed_arch_2_outward", "eurokit:sandstone_block_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_wall_indentation_1_outward", {
	description = "Sandstone Block Wall Indentation 1 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_block_wall_indentation_1", "" },
		{ "eurokit:sandstone_block_wall_indentation_1", "eurokit:sandstone_block_wall_indentation_1", "eurokit:sandstone_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_wall_indentation_1 1",
	recipe = {
		{ "eurokit:sandstone_block_wall_indentation_1_outward", "eurokit:sandstone_block_wall_indentation_1_outward", "" },
		{ "eurokit:sandstone_block_wall_indentation_1_outward", "eurokit:sandstone_block_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_wall_indentation_1_inward", {
	description = "Sandstone Block Wall Indentation 1 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:sandstone_block_wall_indentation_1", "" },
		{ "eurokit:sandstone_block_wall_indentation_1", "", "eurokit:sandstone_block_wall_indentation_1" },
		{ "eurokit:sandstone_block_wall_indentation_1", "eurokit:sandstone_block_wall_indentation_1", "eurokit:sandstone_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_wall_indentation_1 5",
	recipe = {
		{ "eurokit:sandstone_block_wall_indentation_1_inward", "eurokit:sandstone_block_wall_indentation_1_inward", "eurokit:sandstone_block_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_pointed_arch_1", {
	description = "Sandstone Block Pointed Arch 1",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pointed_arch_1 11",
	recipe = {
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "" },
		{ "eurokit:sandstone_block_slope", "", "" },
		{ "eurokit:sandstone_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_slope 2",
	recipe = {
		{ "eurokit:sandstone_block_pointed_arch_1", "eurokit:sandstone_block_pointed_arch_1", "eurokit:sandstone_block_pointed_arch_1" },
		{ "eurokit:sandstone_block_pointed_arch_1", "eurokit:sandstone_block_pointed_arch_1", "eurokit:sandstone_block_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_small_straight_arch", {
	description = "Sandstone Block Small Straight Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_small_straight_arch 8",
	recipe = {
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" },
		{ "default:sandstone_block", "", "default:sandstone_block" },
		{ "default:sandstone_block", "", "default:sandstone_block" }
	}
})

minetest.register_node( "eurokit:sandstone_block_arrow_hole", {
	description = "Sandstone Block Arrow Hole",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_arrow_hole 21",
	recipe = {
		{ "", "default:sandstone_block", "" },
		{ "default:sandstone_block", "", "default:sandstone_block" },
		{ "", "default:sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "eurokit:sandstone_block_arrow_hole", "eurokit:sandstone_block_arrow_hole", "" },
		{ "eurokit:sandstone_block_arrow_hole", "eurokit:sandstone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_pointed_arch_1_inward", {
	description = "Sandstone Block Pointed Arch 1 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:sandstone_block_pointed_arch_1", "" },
		{ "eurokit:sandstone_block_pointed_arch_1", "", "eurokit:sandstone_block_pointed_arch_1" },
		{ "eurokit:sandstone_block_pointed_arch_1", "eurokit:sandstone_block_pointed_arch_1", "eurokit:sandstone_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pointed_arch_1 7",
	recipe = {
		{ "eurokit:sandstone_block_pointed_arch_1_inward", "eurokit:sandstone_block_pointed_arch_1_inward", "" },
		{ "eurokit:sandstone_block_pointed_arch_1_inward", "eurokit:sandstone_block_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_wall_indentation_1", {
	description = "Sandstone Block Wall Indentation 1",
	groups = { cracky = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_wall_indentation_1 7",
	recipe = {
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "" },
		{ "eurokit:sandstone_block_slope", "", "eurokit:sandstone_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_counterarch_outward", {
	description = "Sandstone Block Counterarch Outward",
	groups = { cracky = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_counterarch_outward 6",
	recipe = {
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" },
		{ "", "", "default:sandstone_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "eurokit:sandstone_block_counterarch_outward", "eurokit:sandstone_block_counterarch_outward", "eurokit:sandstone_block_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_arrowslit_end_right", {
	description = "Sandstone Block Arrowslit End Right",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_block_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:sandstone_block_arrow_hole" },
		{ "", "eurokit:sandstone_block_arrow_hole", "eurokit:sandstone_block_arrow_hole" },
		{ "", "", "eurokit:sandstone_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:sandstone_block_pillar_base", {
	description = "Sandstone Block Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_pillar_base 7",
	recipe = {
		{ "", "default:sandstone_block", "" },
		{ "", "default:sandstone_block", "" },
		{ "", "default:sandstone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "eurokit:sandstone_block_pillar_base", "eurokit:sandstone_block_pillar_base", "eurokit:sandstone_block_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_long_slope_2_outward", {
	description = "Sandstone Block Long Slope 2 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_block_long_slope_2", "" },
		{ "eurokit:sandstone_block_long_slope_2", "eurokit:sandstone_block_long_slope_2", "eurokit:sandstone_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:sandstone_block_slope_outward", {
	description = "Sandstone Block Slope Outward",
	groups = { cracky = 2, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:sandstone_block" },
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 1",
	recipe = {
		{ "eurokit:sandstone_block_slope_outward", "eurokit:sandstone_block_slope_outward", "eurokit:sandstone_block_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_long_slope_2", {
	description = "Sandstone Block Long Slope 2",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_block_slope", "" },
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:sandstone_block_long_slope_1_outward", {
	description = "Sandstone Block Long Slope 1 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_block_long_slope_1", "" },
		{ "eurokit:sandstone_block_long_slope_1", "eurokit:sandstone_block_long_slope_1", "eurokit:sandstone_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:sandstone_block_long_slope_3_inward", {
	description = "Sandstone Block Long Slope 3 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:sandstone_block_long_slope_3", "" },
		{ "eurokit:sandstone_block_long_slope_3", "", "eurokit:sandstone_block_long_slope_3" },
		{ "eurokit:sandstone_block_long_slope_3", "eurokit:sandstone_block_long_slope_3", "eurokit:sandstone_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:sandstone_block_long_slope_1", {
	description = "Sandstone Block Long Slope 1",
	groups = { cracky = 2, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:sandstone_block_slope", "", "" },
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:sandstone_block_long_slope_3_outward", {
	description = "Sandstone Block Long Slope 3 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_block_long_slope_3", "" },
		{ "eurokit:sandstone_block_long_slope_3", "eurokit:sandstone_block_long_slope_3", "eurokit:sandstone_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:sandstone_block_long_slope_3", {
	description = "Sandstone Block Long Slope 3",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:sandstone_block_slope" },
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope" }
	}
})

minetest.register_node( "eurokit:sandstone_block_long_slope_2_inward", {
	description = "Sandstone Block Long Slope 2 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:sandstone_block_long_slope_2", "" },
		{ "eurokit:sandstone_block_long_slope_2", "", "eurokit:sandstone_block_long_slope_2" },
		{ "eurokit:sandstone_block_long_slope_2", "eurokit:sandstone_block_long_slope_2", "eurokit:sandstone_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:sandstone_block_slope_inward", {
	description = "Sandstone Block Slope Inward",
	groups = { cracky = 2, inward = 1, slope = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_slope_inward 7",
	recipe = {
		{ "", "", "default:sandstone_block" },
		{ "", "default:sandstone_block", "" },
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 2",
	recipe = {
		{ "eurokit:sandstone_block_slope_inward", "", "" },
		{ "eurokit:sandstone_block_slope_inward", "eurokit:sandstone_block_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_block_long_slope_1_inward", {
	description = "Sandstone Block Long Slope 1 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:sandstone_block_long_slope_1", "" },
		{ "eurokit:sandstone_block_long_slope_1", "", "eurokit:sandstone_block_long_slope_1" },
		{ "eurokit:sandstone_block_long_slope_1", "eurokit:sandstone_block_long_slope_1", "eurokit:sandstone_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:sandstone_block_slope", {
	description = "Sandstone Block Slope",
	groups = { cracky = 2, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_sandstone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_block_slope 11",
	recipe = {
		{ "", "", "default:sandstone_block" },
		{ "", "default:sandstone_block", "default:sandstone_block" },
		{ "default:sandstone_block", "default:sandstone_block", "default:sandstone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone_block 2",
	recipe = {
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "" },
		{ "eurokit:sandstone_block_slope", "eurokit:sandstone_block_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_half_pillar_mid", {
	description = "Sandstone Half Pillar Mid",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_half_pillar_mid 1",
	recipe = {
		{ "eurokit:sandstone_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pillar_mid 2",
	recipe = {
		{ "eurokit:sandstone_half_pillar_mid", "eurokit:sandstone_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_pillar_top", {
	description = "Sandstone Pillar Top",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pillar_top 12",
	recipe = {
		{ "default:sandstone", "default:sandstone", "default:sandstone" },
		{ "", "default:sandstone", "" },
		{ "", "default:sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "eurokit:sandstone_pillar_top", "eurokit:sandstone_pillar_top", "eurokit:sandstone_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_counterarch", {
	description = "Sandstone Counterarch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_counterarch 7",
	recipe = {
		{ "default:sandstone", "default:sandstone", "default:sandstone" },
		{ "", "default:sandstone", "default:sandstone" },
		{ "", "", "default:sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 3",
	recipe = {
		{ "eurokit:sandstone_counterarch", "eurokit:sandstone_counterarch", "" },
		{ "eurokit:sandstone_counterarch", "eurokit:sandstone_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_vertical_arrowslit", {
	description = "Sandstone Vertical Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:sandstone_arrow_hole", "" },
		{ "", "eurokit:sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_wall_indentation_2_inward", {
	description = "Sandstone Wall Indentation 2 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:sandstone_wall_indentation_2", "" },
		{ "eurokit:sandstone_wall_indentation_2", "", "eurokit:sandstone_wall_indentation_2" },
		{ "eurokit:sandstone_wall_indentation_2", "eurokit:sandstone_wall_indentation_2", "eurokit:sandstone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_wall_indentation_2 4",
	recipe = {
		{ "eurokit:sandstone_wall_indentation_2_inward", "eurokit:sandstone_wall_indentation_2_inward", "eurokit:sandstone_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_half_pillar_base", {
	description = "Sandstone Half Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_half_pillar_base 1",
	recipe = {
		{ "eurokit:sandstone_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pillar_base 1",
	recipe = {
		{ "eurokit:sandstone_half_pillar_base", "eurokit:sandstone_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_small_pointed_arch", {
	description = "Sandstone Small Pointed Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_small_pointed_arch 9",
	recipe = {
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "eurokit:sandstone_slope" },
		{ "eurokit:sandstone_slope", "", "eurokit:sandstone_slope" },
		{ "eurokit:sandstone_slope", "", "eurokit:sandstone_slope" }
	}
})

minetest.register_node( "eurokit:sandstone_pointed_arch_2", {
	description = "Sandstone Pointed Arch 2",
	groups = { cracky = 3, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "" },
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "" },
		{ "eurokit:sandstone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_slope 5",
	recipe = {
		{ "eurokit:sandstone_pointed_arch_2", "eurokit:sandstone_pointed_arch_2", "" },
		{ "eurokit:sandstone_pointed_arch_2", "eurokit:sandstone_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_machicolation", {
	description = "Sandstone Machicolation",
	groups = { cracky = 3, machicolation = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_machicolation 18",
	recipe = {
		{ "default:sandstone", "", "default:sandstone" },
		{ "default:sandstone", "", "default:sandstone" },
		{ "default:sandstone", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_pointed_arch_1_outward", {
	description = "Sandstone Pointed Arch 1 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_pointed_arch_1", "" },
		{ "eurokit:sandstone_pointed_arch_1", "eurokit:sandstone_pointed_arch_1", "eurokit:sandstone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pointed_arch_1 1",
	recipe = {
		{ "eurokit:sandstone_pointed_arch_1_outward", "eurokit:sandstone_pointed_arch_1_outward", "eurokit:sandstone_pointed_arch_1_outward" },
		{ "eurokit:sandstone_pointed_arch_1_outward", "eurokit:sandstone_pointed_arch_1_outward", "eurokit:sandstone_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_arrowslit_end_top", {
	description = "Sandstone Arrowslit End Top",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:sandstone_arrow_hole", "eurokit:sandstone_arrow_hole", "eurokit:sandstone_arrow_hole" },
		{ "", "eurokit:sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_arrowslit_end_bottom", {
	description = "Sandstone Arrowslit End Bottom",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_arrow_hole", "" },
		{ "eurokit:sandstone_arrow_hole", "eurokit:sandstone_arrow_hole", "eurokit:sandstone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:sandstone_wall_indentation_2_outward", {
	description = "Sandstone Wall Indentation 2 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_wall_indentation_2", "" },
		{ "eurokit:sandstone_wall_indentation_2", "eurokit:sandstone_wall_indentation_2", "eurokit:sandstone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_wall_indentation_2 3",
	recipe = {
		{ "eurokit:sandstone_wall_indentation_2_outward", "eurokit:sandstone_wall_indentation_2_outward", "" },
		{ "eurokit:sandstone_wall_indentation_2_outward", "eurokit:sandstone_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_pillar_mid", {
	description = "Sandstone Pillar Mid",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pillar_mid 14",
	recipe = {
		{ "", "default:sandstone", "" },
		{ "", "default:sandstone", "" },
		{ "", "default:sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "eurokit:sandstone_pillar_mid", "eurokit:sandstone_pillar_mid", "eurokit:sandstone_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_arrowslit_end_left", {
	description = "Sandstone Arrowslit End Left",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:sandstone_arrow_hole", "", "" },
		{ "eurokit:sandstone_arrow_hole", "eurokit:sandstone_arrow_hole", "" },
		{ "eurokit:sandstone_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_wall_indentation_2", {
	description = "Sandstone Wall Indentation 2",
	groups = { cracky = 3, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_wall_indentation_2 2",
	recipe = {
		{ "eurokit:sandstone_slope", "", "" },
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "eurokit:sandstone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_arch_inward", {
	description = "Sandstone Arch Inward",
	groups = { cracky = 3, inward = 1, arch = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_arch_inward 13",
	recipe = {
		{ "default:sandstone", "default:sandstone", "default:sandstone" },
		{ "default:sandstone", "", "default:sandstone" },
		{ "", "default:sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "eurokit:sandstone_arch_inward", "eurokit:sandstone_arch_inward", "eurokit:sandstone_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_small_arch", {
	description = "Sandstone Small Arch",
	groups = { cracky = 3, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:sandstone", "" },
		{ "default:sandstone", "", "default:sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 2",
	recipe = {
		{ "eurokit:sandstone_small_arch", "eurokit:sandstone_small_arch", "" },
		{ "eurokit:sandstone_small_arch", "eurokit:sandstone_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_thin_wall", {
	description = "Sandstone Thin Wall",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_thin_wall 24",
	recipe = {
		{ "default:sandstone", "default:sandstone", "" },
		{ "default:sandstone", "default:sandstone", "" },
		{ "default:sandstone", "default:sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:sandstone_thin_wall", "eurokit:sandstone_thin_wall", "eurokit:sandstone_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_counterarch_inward", {
	description = "Sandstone Counterarch Inward",
	groups = { cracky = 3, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_counterarch_inward 3",
	recipe = {
		{ "", "default:sandstone", "default:sandstone" },
		{ "", "", "default:sandstone" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 2",
	recipe = {
		{ "eurokit:sandstone_counterarch_inward", "", "" },
		{ "eurokit:sandstone_counterarch_inward", "eurokit:sandstone_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_small_counterarch", {
	description = "Sandstone Small Counterarch",
	groups = { cracky = 3, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_small_counterarch 17",
	recipe = {
		{ "default:sandstone", "default:sandstone", "default:sandstone" },
		{ "default:sandstone", "default:sandstone", "default:sandstone" },
		{ "", "default:sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "eurokit:sandstone_small_counterarch", "eurokit:sandstone_small_counterarch", "" },
		{ "eurokit:sandstone_small_counterarch", "eurokit:sandstone_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_horizontal_arrowslit", {
	description = "Sandstone Horizontal Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:sandstone_arrow_hole", "eurokit:sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_arch_outward", {
	description = "Sandstone Arch Outward",
	groups = { cracky = 3, outward = 1, arch = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_arch_outward 22",
	recipe = {
		{ "default:sandstone", "default:sandstone", "default:sandstone" },
		{ "", "default:sandstone", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "eurokit:sandstone_arch_outward", "", "" },
		{ "eurokit:sandstone_arch_outward", "eurokit:sandstone_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_arch", {
	description = "Sandstone Arch",
	groups = { cracky = 3, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_arch 18",
	recipe = {
		{ "default:sandstone", "default:sandstone", "default:sandstone" },
		{ "default:sandstone", "default:sandstone", "" },
		{ "default:sandstone", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "eurokit:sandstone_arch", "eurokit:sandstone_arch", "" },
		{ "eurokit:sandstone_arch", "eurokit:sandstone_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_half_pillar_top", {
	description = "Sandstone Half Pillar Top",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_half_pillar_top 1",
	recipe = {
		{ "eurokit:sandstone_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pillar_top 1",
	recipe = {
		{ "eurokit:sandstone_half_pillar_top", "eurokit:sandstone_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_pointed_arch_2_inward", {
	description = "Sandstone Pointed Arch 2 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:sandstone_pointed_arch_2", "" },
		{ "eurokit:sandstone_pointed_arch_2", "", "eurokit:sandstone_pointed_arch_2" },
		{ "eurokit:sandstone_pointed_arch_2", "eurokit:sandstone_pointed_arch_2", "eurokit:sandstone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pointed_arch_2 6",
	recipe = {
		{ "eurokit:sandstone_pointed_arch_2_inward", "eurokit:sandstone_pointed_arch_2_inward", "" },
		{ "eurokit:sandstone_pointed_arch_2_inward", "eurokit:sandstone_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_pointed_arch_2_outward", {
	description = "Sandstone Pointed Arch 2 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_pointed_arch_2", "" },
		{ "eurokit:sandstone_pointed_arch_2", "eurokit:sandstone_pointed_arch_2", "eurokit:sandstone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:sandstone_pointed_arch_2_outward", "eurokit:sandstone_pointed_arch_2_outward", "eurokit:sandstone_pointed_arch_2_outward" },
		{ "eurokit:sandstone_pointed_arch_2_outward", "eurokit:sandstone_pointed_arch_2_outward", "eurokit:sandstone_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_wall_indentation_1_outward", {
	description = "Sandstone Wall Indentation 1 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_wall_indentation_1", "" },
		{ "eurokit:sandstone_wall_indentation_1", "eurokit:sandstone_wall_indentation_1", "eurokit:sandstone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_wall_indentation_1 1",
	recipe = {
		{ "eurokit:sandstone_wall_indentation_1_outward", "eurokit:sandstone_wall_indentation_1_outward", "" },
		{ "eurokit:sandstone_wall_indentation_1_outward", "eurokit:sandstone_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_wall_indentation_1_inward", {
	description = "Sandstone Wall Indentation 1 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:sandstone_wall_indentation_1", "" },
		{ "eurokit:sandstone_wall_indentation_1", "", "eurokit:sandstone_wall_indentation_1" },
		{ "eurokit:sandstone_wall_indentation_1", "eurokit:sandstone_wall_indentation_1", "eurokit:sandstone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_wall_indentation_1 5",
	recipe = {
		{ "eurokit:sandstone_wall_indentation_1_inward", "eurokit:sandstone_wall_indentation_1_inward", "eurokit:sandstone_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_pointed_arch_1", {
	description = "Sandstone Pointed Arch 1",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pointed_arch_1 11",
	recipe = {
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "" },
		{ "eurokit:sandstone_slope", "", "" },
		{ "eurokit:sandstone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_slope 2",
	recipe = {
		{ "eurokit:sandstone_pointed_arch_1", "eurokit:sandstone_pointed_arch_1", "eurokit:sandstone_pointed_arch_1" },
		{ "eurokit:sandstone_pointed_arch_1", "eurokit:sandstone_pointed_arch_1", "eurokit:sandstone_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_small_straight_arch", {
	description = "Sandstone Small Straight Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_small_straight_arch 8",
	recipe = {
		{ "default:sandstone", "default:sandstone", "default:sandstone" },
		{ "default:sandstone", "", "default:sandstone" },
		{ "default:sandstone", "", "default:sandstone" }
	}
})

minetest.register_node( "eurokit:sandstone_arrow_hole", {
	description = "Sandstone Arrow Hole",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_arrow_hole 21",
	recipe = {
		{ "", "default:sandstone", "" },
		{ "default:sandstone", "", "default:sandstone" },
		{ "", "default:sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "eurokit:sandstone_arrow_hole", "eurokit:sandstone_arrow_hole", "" },
		{ "eurokit:sandstone_arrow_hole", "eurokit:sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_pointed_arch_1_inward", {
	description = "Sandstone Pointed Arch 1 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:sandstone_pointed_arch_1", "" },
		{ "eurokit:sandstone_pointed_arch_1", "", "eurokit:sandstone_pointed_arch_1" },
		{ "eurokit:sandstone_pointed_arch_1", "eurokit:sandstone_pointed_arch_1", "eurokit:sandstone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pointed_arch_1 7",
	recipe = {
		{ "eurokit:sandstone_pointed_arch_1_inward", "eurokit:sandstone_pointed_arch_1_inward", "" },
		{ "eurokit:sandstone_pointed_arch_1_inward", "eurokit:sandstone_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_wall_indentation_1", {
	description = "Sandstone Wall Indentation 1",
	groups = { cracky = 3, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_wall_indentation_1 7",
	recipe = {
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "" },
		{ "eurokit:sandstone_slope", "", "eurokit:sandstone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_counterarch_outward", {
	description = "Sandstone Counterarch Outward",
	groups = { cracky = 3, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_counterarch_outward 6",
	recipe = {
		{ "default:sandstone", "default:sandstone", "default:sandstone" },
		{ "", "", "default:sandstone" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "eurokit:sandstone_counterarch_outward", "eurokit:sandstone_counterarch_outward", "eurokit:sandstone_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_arrowslit_end_right", {
	description = "Sandstone Arrowslit End Right",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:sandstone_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:sandstone_arrow_hole" },
		{ "", "eurokit:sandstone_arrow_hole", "eurokit:sandstone_arrow_hole" },
		{ "", "", "eurokit:sandstone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:sandstone_pillar_base", {
	description = "Sandstone Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_pillar_base 7",
	recipe = {
		{ "", "default:sandstone", "" },
		{ "", "default:sandstone", "" },
		{ "", "default:sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "eurokit:sandstone_pillar_base", "eurokit:sandstone_pillar_base", "eurokit:sandstone_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_long_slope_2_outward", {
	description = "Sandstone Long Slope 2 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_long_slope_2", "" },
		{ "eurokit:sandstone_long_slope_2", "eurokit:sandstone_long_slope_2", "eurokit:sandstone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:sandstone_slope_outward", {
	description = "Sandstone Slope Outward",
	groups = { cracky = 3, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:sandstone" },
		{ "default:sandstone", "default:sandstone", "default:sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 1",
	recipe = {
		{ "eurokit:sandstone_slope_outward", "eurokit:sandstone_slope_outward", "eurokit:sandstone_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_long_slope_2", {
	description = "Sandstone Long Slope 2",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_slope", "" },
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "eurokit:sandstone_slope" }
	}
})

minetest.register_node( "eurokit:sandstone_long_slope_1_outward", {
	description = "Sandstone Long Slope 1 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_long_slope_1", "" },
		{ "eurokit:sandstone_long_slope_1", "eurokit:sandstone_long_slope_1", "eurokit:sandstone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:sandstone_long_slope_3_inward", {
	description = "Sandstone Long Slope 3 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:sandstone_long_slope_3", "" },
		{ "eurokit:sandstone_long_slope_3", "", "eurokit:sandstone_long_slope_3" },
		{ "eurokit:sandstone_long_slope_3", "eurokit:sandstone_long_slope_3", "eurokit:sandstone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:sandstone_long_slope_1", {
	description = "Sandstone Long Slope 1",
	groups = { cracky = 3, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:sandstone_slope", "", "" },
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "eurokit:sandstone_slope" }
	}
})

minetest.register_node( "eurokit:sandstone_long_slope_3_outward", {
	description = "Sandstone Long Slope 3 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:sandstone_long_slope_3", "" },
		{ "eurokit:sandstone_long_slope_3", "eurokit:sandstone_long_slope_3", "eurokit:sandstone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:sandstone_long_slope_3", {
	description = "Sandstone Long Slope 3",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:sandstone_slope" },
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "eurokit:sandstone_slope" }
	}
})

minetest.register_node( "eurokit:sandstone_long_slope_2_inward", {
	description = "Sandstone Long Slope 2 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:sandstone_long_slope_2", "" },
		{ "eurokit:sandstone_long_slope_2", "", "eurokit:sandstone_long_slope_2" },
		{ "eurokit:sandstone_long_slope_2", "eurokit:sandstone_long_slope_2", "eurokit:sandstone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:sandstone_slope_inward", {
	description = "Sandstone Slope Inward",
	groups = { cracky = 3, inward = 1, slope = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_slope_inward 7",
	recipe = {
		{ "", "", "default:sandstone" },
		{ "", "default:sandstone", "" },
		{ "default:sandstone", "default:sandstone", "default:sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 2",
	recipe = {
		{ "eurokit:sandstone_slope_inward", "", "" },
		{ "eurokit:sandstone_slope_inward", "eurokit:sandstone_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:sandstone_long_slope_1_inward", {
	description = "Sandstone Long Slope 1 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:sandstone_long_slope_1", "" },
		{ "eurokit:sandstone_long_slope_1", "", "eurokit:sandstone_long_slope_1" },
		{ "eurokit:sandstone_long_slope_1", "eurokit:sandstone_long_slope_1", "eurokit:sandstone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:sandstone_slope", {
	description = "Sandstone Slope",
	groups = { cracky = 3, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:sandstone_slope 11",
	recipe = {
		{ "", "", "default:sandstone" },
		{ "", "default:sandstone", "default:sandstone" },
		{ "default:sandstone", "default:sandstone", "default:sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:sandstone 2",
	recipe = {
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "" },
		{ "eurokit:sandstone_slope", "eurokit:sandstone_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:copper_frieze_outward", {
	description = "Copper Frieze Outward",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_outward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_frieze_outward 56",
	recipe = {
		{ "", "", "eurokit:copper_sheet" },
		{ "", "", "" },
		{ "", "", "eurokit:copper_sheet" }
	}
})

minetest.register_node( "eurokit:copper_frieze", {
	description = "Copper Frieze",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_frieze 12",
	recipe = {
		{ "", "eurokit:copper_sheet", "eurokit:copper_sheet" },
		{ "", "", "" },
		{ "", "eurokit:copper_sheet", "eurokit:copper_sheet" }
	}
})

minetest.register_node( "eurokit:copper_fancy_frieze_outward", {
	description = "Copper Fancy Frieze Outward",
	groups = { cracky = 1, frieze = 1, outward = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_outward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_fancy_frieze_outward 99",
	recipe = {
		{ "", "eurokit:copper_sheet", "eurokit:copper_sheet" },
		{ "", "", "eurokit:copper_sheet" },
		{ "", "eurokit:copper_sheet", "eurokit:copper_sheet" }
	}
})

minetest.register_node( "eurokit:copper_side_rail_oblique", {
	description = "Copper Side Rail Oblique",
	groups = { cracky = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:copper_side_rail_oblique")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail_oblique 11",
	recipe = {
		{ "eurokit:copper_sheet", "", "" },
		{ "eurokit:copper_sheet", "eurokit:copper_sheet", "" },
		{ "eurokit:copper_sheet", "", "eurokit:copper_sheet" }
	}
})

minetest.register_node( "eurokit:copper_frieze_inward", {
	description = "Copper Frieze Inward",
	groups = { cracky = 1, frieze = 1, inward = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_inward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_frieze_inward 10",
	recipe = {
		{ "eurokit:copper_sheet", "eurokit:copper_sheet", "eurokit:copper_sheet" },
		{ "", "", "" },
		{ "eurokit:copper_sheet", "eurokit:copper_sheet", "eurokit:copper_sheet" }
	}
})

minetest.register_node( "eurokit:copper_fancy_frieze_inward", {
	description = "Copper Fancy Frieze Inward",
	groups = { cracky = 1, frieze = 1, inward = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_inward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_fancy_frieze_inward 10",
	recipe = {
		{ "eurokit:copper_sheet", "eurokit:copper_sheet", "eurokit:copper_sheet" },
		{ "eurokit:copper_sheet", "eurokit:copper_sheet", "" },
		{ "eurokit:copper_sheet", "eurokit:copper_sheet", "eurokit:copper_sheet" }
	}
})

minetest.register_node( "eurokit:copper_side_rail_oblique_corner_counterclockwise", {
	description = "Copper Side Rail Oblique Corner Counterclockwise",
	groups = { cracky = 1, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_counterclockwise,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:copper_side_rail_oblique_corner_counterclockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail_oblique_corner_counterclockwise 2",
	recipe = {
		{ "", "eurokit:copper_side_rail_oblique", "eurokit:copper_side_rail_oblique" },
		{ "", "", "eurokit:copper_side_rail_oblique" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail_oblique 2",
	recipe = {
		{ "eurokit:copper_side_rail_oblique_corner_counterclockwise", "eurokit:copper_side_rail_oblique_corner_counterclockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:copper_side_rail_oblique_corner_clockwise", {
	description = "Copper Side Rail Oblique Corner Clockwise",
	groups = { cracky = 1, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_clockwise,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:copper_side_rail_oblique_corner_clockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail_oblique_corner_clockwise 2",
	recipe = {
		{ "eurokit:copper_side_rail_oblique", "eurokit:copper_side_rail_oblique", "" },
		{ "eurokit:copper_side_rail_oblique", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail_oblique 2",
	recipe = {
		{ "eurokit:copper_side_rail_oblique_corner_clockwise", "eurokit:copper_side_rail_oblique_corner_clockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:copper_side_rail_top_corner", {
	description = "Copper Side Rail Top Corner",
	groups = { cracky = 1, railling = 1, corner = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top_corner,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:copper_side_rail_top_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail_top_corner 2",
	recipe = {
		{ "eurokit:copper_side_rail_top", "eurokit:copper_side_rail_top", "" },
		{ "eurokit:copper_side_rail_top", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail_top 2",
	recipe = {
		{ "eurokit:copper_side_rail_top_corner", "eurokit:copper_side_rail_top_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:copper_fancy_frieze", {
	description = "Copper Fancy Frieze",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_fancy_frieze 17",
	recipe = {
		{ "eurokit:copper_sheet", "eurokit:copper_sheet", "eurokit:copper_sheet" },
		{ "", "eurokit:copper_sheet", "" },
		{ "eurokit:copper_sheet", "eurokit:copper_sheet", "eurokit:copper_sheet" }
	}
})

minetest.register_node( "eurokit:copper_side_rail_corner", {
	description = "Copper Side Rail Corner",
	groups = { cracky = 1, railling = 1, corner = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_corner,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:copper_side_rail_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail_corner 3",
	recipe = {
		{ "eurokit:copper_side_rail", "eurokit:copper_side_rail", "" },
		{ "eurokit:copper_side_rail", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail 2",
	recipe = {
		{ "eurokit:copper_side_rail_corner", "eurokit:copper_side_rail_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:copper_side_rail_top", {
	description = "Copper Side Rail Top",
	groups = { cracky = 1, railling = 1, raillingtop = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:copper_side_rail_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail_top 11",
	recipe = {
		{ "eurokit:copper_sheet", "eurokit:copper_sheet", "eurokit:copper_sheet" },
		{ "eurokit:copper_sheet", "", "eurokit:copper_sheet" },
		{ "eurokit:copper_sheet", "", "eurokit:copper_sheet" }
	}
})

minetest.register_node( "eurokit:copper_side_rail", {
	description = "Copper Side Rail",
	groups = { cracky = 1, railling = 1 },
	tiles = { "default_copper_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:copper_side_rail")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:copper_side_rail 16",
	recipe = {
		{ "eurokit:copper_sheet", "", "eurokit:copper_sheet" },
		{ "eurokit:copper_sheet", "", "eurokit:copper_sheet" },
		{ "eurokit:copper_sheet", "", "eurokit:copper_sheet" }
	}
})

minetest.register_node( "eurokit:bronze_frieze_outward", {
	description = "Bronze Frieze Outward",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_outward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_frieze_outward 56",
	recipe = {
		{ "", "", "eurokit:bronze_sheet" },
		{ "", "", "" },
		{ "", "", "eurokit:bronze_sheet" }
	}
})

minetest.register_node( "eurokit:bronze_frieze", {
	description = "Bronze Frieze",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_frieze 12",
	recipe = {
		{ "", "eurokit:bronze_sheet", "eurokit:bronze_sheet" },
		{ "", "", "" },
		{ "", "eurokit:bronze_sheet", "eurokit:bronze_sheet" }
	}
})

minetest.register_node( "eurokit:bronze_fancy_frieze_outward", {
	description = "Bronze Fancy Frieze Outward",
	groups = { cracky = 1, frieze = 1, outward = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_outward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_fancy_frieze_outward 99",
	recipe = {
		{ "", "eurokit:bronze_sheet", "eurokit:bronze_sheet" },
		{ "", "", "eurokit:bronze_sheet" },
		{ "", "eurokit:bronze_sheet", "eurokit:bronze_sheet" }
	}
})

minetest.register_node( "eurokit:bronze_side_rail_oblique", {
	description = "Bronze Side Rail Oblique",
	groups = { cracky = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:bronze_side_rail_oblique")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail_oblique 11",
	recipe = {
		{ "eurokit:bronze_sheet", "", "" },
		{ "eurokit:bronze_sheet", "eurokit:bronze_sheet", "" },
		{ "eurokit:bronze_sheet", "", "eurokit:bronze_sheet" }
	}
})

minetest.register_node( "eurokit:bronze_frieze_inward", {
	description = "Bronze Frieze Inward",
	groups = { cracky = 1, frieze = 1, inward = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_inward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_frieze_inward 10",
	recipe = {
		{ "eurokit:bronze_sheet", "eurokit:bronze_sheet", "eurokit:bronze_sheet" },
		{ "", "", "" },
		{ "eurokit:bronze_sheet", "eurokit:bronze_sheet", "eurokit:bronze_sheet" }
	}
})

minetest.register_node( "eurokit:bronze_fancy_frieze_inward", {
	description = "Bronze Fancy Frieze Inward",
	groups = { cracky = 1, frieze = 1, inward = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_inward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_fancy_frieze_inward 10",
	recipe = {
		{ "eurokit:bronze_sheet", "eurokit:bronze_sheet", "eurokit:bronze_sheet" },
		{ "eurokit:bronze_sheet", "eurokit:bronze_sheet", "" },
		{ "eurokit:bronze_sheet", "eurokit:bronze_sheet", "eurokit:bronze_sheet" }
	}
})

minetest.register_node( "eurokit:bronze_side_rail_oblique_corner_counterclockwise", {
	description = "Bronze Side Rail Oblique Corner Counterclockwise",
	groups = { cracky = 1, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_counterclockwise,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:bronze_side_rail_oblique_corner_counterclockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail_oblique_corner_counterclockwise 2",
	recipe = {
		{ "", "eurokit:bronze_side_rail_oblique", "eurokit:bronze_side_rail_oblique" },
		{ "", "", "eurokit:bronze_side_rail_oblique" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail_oblique 2",
	recipe = {
		{ "eurokit:bronze_side_rail_oblique_corner_counterclockwise", "eurokit:bronze_side_rail_oblique_corner_counterclockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:bronze_side_rail_oblique_corner_clockwise", {
	description = "Bronze Side Rail Oblique Corner Clockwise",
	groups = { cracky = 1, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_clockwise,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:bronze_side_rail_oblique_corner_clockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail_oblique_corner_clockwise 2",
	recipe = {
		{ "eurokit:bronze_side_rail_oblique", "eurokit:bronze_side_rail_oblique", "" },
		{ "eurokit:bronze_side_rail_oblique", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail_oblique 2",
	recipe = {
		{ "eurokit:bronze_side_rail_oblique_corner_clockwise", "eurokit:bronze_side_rail_oblique_corner_clockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:bronze_side_rail_top_corner", {
	description = "Bronze Side Rail Top Corner",
	groups = { cracky = 1, railling = 1, corner = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top_corner,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:bronze_side_rail_top_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail_top_corner 2",
	recipe = {
		{ "eurokit:bronze_side_rail_top", "eurokit:bronze_side_rail_top", "" },
		{ "eurokit:bronze_side_rail_top", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail_top 2",
	recipe = {
		{ "eurokit:bronze_side_rail_top_corner", "eurokit:bronze_side_rail_top_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:bronze_fancy_frieze", {
	description = "Bronze Fancy Frieze",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_fancy_frieze 17",
	recipe = {
		{ "eurokit:bronze_sheet", "eurokit:bronze_sheet", "eurokit:bronze_sheet" },
		{ "", "eurokit:bronze_sheet", "" },
		{ "eurokit:bronze_sheet", "eurokit:bronze_sheet", "eurokit:bronze_sheet" }
	}
})

minetest.register_node( "eurokit:bronze_side_rail_corner", {
	description = "Bronze Side Rail Corner",
	groups = { cracky = 1, railling = 1, corner = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_corner,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:bronze_side_rail_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail_corner 3",
	recipe = {
		{ "eurokit:bronze_side_rail", "eurokit:bronze_side_rail", "" },
		{ "eurokit:bronze_side_rail", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail 2",
	recipe = {
		{ "eurokit:bronze_side_rail_corner", "eurokit:bronze_side_rail_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:bronze_side_rail_top", {
	description = "Bronze Side Rail Top",
	groups = { cracky = 1, railling = 1, raillingtop = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:bronze_side_rail_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail_top 11",
	recipe = {
		{ "eurokit:bronze_sheet", "eurokit:bronze_sheet", "eurokit:bronze_sheet" },
		{ "eurokit:bronze_sheet", "", "eurokit:bronze_sheet" },
		{ "eurokit:bronze_sheet", "", "eurokit:bronze_sheet" }
	}
})

minetest.register_node( "eurokit:bronze_side_rail", {
	description = "Bronze Side Rail",
	groups = { cracky = 1, railling = 1 },
	tiles = { "default_bronze_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:bronze_side_rail")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:bronze_side_rail 16",
	recipe = {
		{ "eurokit:bronze_sheet", "", "eurokit:bronze_sheet" },
		{ "eurokit:bronze_sheet", "", "eurokit:bronze_sheet" },
		{ "eurokit:bronze_sheet", "", "eurokit:bronze_sheet" }
	}
})

minetest.register_node( "eurokit:tin_frieze_outward", {
	description = "Tin Frieze Outward",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_outward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_frieze_outward 56",
	recipe = {
		{ "", "", "eurokit:tin_sheet" },
		{ "", "", "" },
		{ "", "", "eurokit:tin_sheet" }
	}
})

minetest.register_node( "eurokit:tin_frieze", {
	description = "Tin Frieze",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_frieze 12",
	recipe = {
		{ "", "eurokit:tin_sheet", "eurokit:tin_sheet" },
		{ "", "", "" },
		{ "", "eurokit:tin_sheet", "eurokit:tin_sheet" }
	}
})

minetest.register_node( "eurokit:tin_fancy_frieze_outward", {
	description = "Tin Fancy Frieze Outward",
	groups = { cracky = 1, frieze = 1, outward = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_outward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_fancy_frieze_outward 99",
	recipe = {
		{ "", "eurokit:tin_sheet", "eurokit:tin_sheet" },
		{ "", "", "eurokit:tin_sheet" },
		{ "", "eurokit:tin_sheet", "eurokit:tin_sheet" }
	}
})

minetest.register_node( "eurokit:tin_side_rail_oblique", {
	description = "Tin Side Rail Oblique",
	groups = { cracky = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:tin_side_rail_oblique")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail_oblique 11",
	recipe = {
		{ "eurokit:tin_sheet", "", "" },
		{ "eurokit:tin_sheet", "eurokit:tin_sheet", "" },
		{ "eurokit:tin_sheet", "", "eurokit:tin_sheet" }
	}
})

minetest.register_node( "eurokit:tin_frieze_inward", {
	description = "Tin Frieze Inward",
	groups = { cracky = 1, frieze = 1, inward = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_inward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_frieze_inward 10",
	recipe = {
		{ "eurokit:tin_sheet", "eurokit:tin_sheet", "eurokit:tin_sheet" },
		{ "", "", "" },
		{ "eurokit:tin_sheet", "eurokit:tin_sheet", "eurokit:tin_sheet" }
	}
})

minetest.register_node( "eurokit:tin_fancy_frieze_inward", {
	description = "Tin Fancy Frieze Inward",
	groups = { cracky = 1, frieze = 1, inward = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_inward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_fancy_frieze_inward 10",
	recipe = {
		{ "eurokit:tin_sheet", "eurokit:tin_sheet", "eurokit:tin_sheet" },
		{ "eurokit:tin_sheet", "eurokit:tin_sheet", "" },
		{ "eurokit:tin_sheet", "eurokit:tin_sheet", "eurokit:tin_sheet" }
	}
})

minetest.register_node( "eurokit:tin_side_rail_oblique_corner_counterclockwise", {
	description = "Tin Side Rail Oblique Corner Counterclockwise",
	groups = { cracky = 1, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_counterclockwise,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:tin_side_rail_oblique_corner_counterclockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail_oblique_corner_counterclockwise 2",
	recipe = {
		{ "", "eurokit:tin_side_rail_oblique", "eurokit:tin_side_rail_oblique" },
		{ "", "", "eurokit:tin_side_rail_oblique" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail_oblique 2",
	recipe = {
		{ "eurokit:tin_side_rail_oblique_corner_counterclockwise", "eurokit:tin_side_rail_oblique_corner_counterclockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:tin_side_rail_oblique_corner_clockwise", {
	description = "Tin Side Rail Oblique Corner Clockwise",
	groups = { cracky = 1, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_clockwise,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:tin_side_rail_oblique_corner_clockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail_oblique_corner_clockwise 2",
	recipe = {
		{ "eurokit:tin_side_rail_oblique", "eurokit:tin_side_rail_oblique", "" },
		{ "eurokit:tin_side_rail_oblique", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail_oblique 2",
	recipe = {
		{ "eurokit:tin_side_rail_oblique_corner_clockwise", "eurokit:tin_side_rail_oblique_corner_clockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:tin_side_rail_top_corner", {
	description = "Tin Side Rail Top Corner",
	groups = { cracky = 1, railling = 1, corner = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top_corner,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:tin_side_rail_top_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail_top_corner 2",
	recipe = {
		{ "eurokit:tin_side_rail_top", "eurokit:tin_side_rail_top", "" },
		{ "eurokit:tin_side_rail_top", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail_top 2",
	recipe = {
		{ "eurokit:tin_side_rail_top_corner", "eurokit:tin_side_rail_top_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:tin_fancy_frieze", {
	description = "Tin Fancy Frieze",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_fancy_frieze 17",
	recipe = {
		{ "eurokit:tin_sheet", "eurokit:tin_sheet", "eurokit:tin_sheet" },
		{ "", "eurokit:tin_sheet", "" },
		{ "eurokit:tin_sheet", "eurokit:tin_sheet", "eurokit:tin_sheet" }
	}
})

minetest.register_node( "eurokit:tin_side_rail_corner", {
	description = "Tin Side Rail Corner",
	groups = { cracky = 1, railling = 1, corner = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_corner,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:tin_side_rail_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail_corner 3",
	recipe = {
		{ "eurokit:tin_side_rail", "eurokit:tin_side_rail", "" },
		{ "eurokit:tin_side_rail", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail 2",
	recipe = {
		{ "eurokit:tin_side_rail_corner", "eurokit:tin_side_rail_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:tin_side_rail_top", {
	description = "Tin Side Rail Top",
	groups = { cracky = 1, railling = 1, raillingtop = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:tin_side_rail_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail_top 11",
	recipe = {
		{ "eurokit:tin_sheet", "eurokit:tin_sheet", "eurokit:tin_sheet" },
		{ "eurokit:tin_sheet", "", "eurokit:tin_sheet" },
		{ "eurokit:tin_sheet", "", "eurokit:tin_sheet" }
	}
})

minetest.register_node( "eurokit:tin_side_rail", {
	description = "Tin Side Rail",
	groups = { cracky = 1, railling = 1 },
	tiles = { "default_tin_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:tin_side_rail")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:tin_side_rail 16",
	recipe = {
		{ "eurokit:tin_sheet", "", "eurokit:tin_sheet" },
		{ "eurokit:tin_sheet", "", "eurokit:tin_sheet" },
		{ "eurokit:tin_sheet", "", "eurokit:tin_sheet" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_half_pillar_mid", {
	description = "Desert Stone Brick Half Pillar Mid",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_half_pillar_mid 1",
	recipe = {
		{ "eurokit:desert_stone_brick_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pillar_mid 2",
	recipe = {
		{ "eurokit:desert_stone_brick_half_pillar_mid", "eurokit:desert_stone_brick_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_pillar_top", {
	description = "Desert Stone Brick Pillar Top",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pillar_top 12",
	recipe = {
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "", "default:desert_stonebrick", "" },
		{ "", "default:desert_stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "eurokit:desert_stone_brick_pillar_top", "eurokit:desert_stone_brick_pillar_top", "eurokit:desert_stone_brick_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_counterarch", {
	description = "Desert Stone Brick Counterarch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_counterarch 7",
	recipe = {
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "", "", "default:desert_stonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 3",
	recipe = {
		{ "eurokit:desert_stone_brick_counterarch", "eurokit:desert_stone_brick_counterarch", "" },
		{ "eurokit:desert_stone_brick_counterarch", "eurokit:desert_stone_brick_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_vertical_arrowslit", {
	description = "Desert Stone Brick Vertical Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:desert_stone_brick_arrow_hole", "" },
		{ "", "eurokit:desert_stone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_wall_indentation_2_inward", {
	description = "Desert Stone Brick Wall Indentation 2 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:desert_stone_brick_wall_indentation_2", "" },
		{ "eurokit:desert_stone_brick_wall_indentation_2", "", "eurokit:desert_stone_brick_wall_indentation_2" },
		{ "eurokit:desert_stone_brick_wall_indentation_2", "eurokit:desert_stone_brick_wall_indentation_2", "eurokit:desert_stone_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_wall_indentation_2 4",
	recipe = {
		{ "eurokit:desert_stone_brick_wall_indentation_2_inward", "eurokit:desert_stone_brick_wall_indentation_2_inward", "eurokit:desert_stone_brick_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_half_pillar_base", {
	description = "Desert Stone Brick Half Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_half_pillar_base 1",
	recipe = {
		{ "eurokit:desert_stone_brick_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pillar_base 1",
	recipe = {
		{ "eurokit:desert_stone_brick_half_pillar_base", "eurokit:desert_stone_brick_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_small_pointed_arch", {
	description = "Desert Stone Brick Small Pointed Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_small_pointed_arch 9",
	recipe = {
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope" },
		{ "eurokit:desert_stone_brick_slope", "", "eurokit:desert_stone_brick_slope" },
		{ "eurokit:desert_stone_brick_slope", "", "eurokit:desert_stone_brick_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_pointed_arch_2", {
	description = "Desert Stone Brick Pointed Arch 2",
	groups = { cracky = 3, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "" },
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "" },
		{ "eurokit:desert_stone_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_slope 5",
	recipe = {
		{ "eurokit:desert_stone_brick_pointed_arch_2", "eurokit:desert_stone_brick_pointed_arch_2", "" },
		{ "eurokit:desert_stone_brick_pointed_arch_2", "eurokit:desert_stone_brick_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_machicolation", {
	description = "Desert Stone Brick Machicolation",
	groups = { cracky = 3, machicolation = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_machicolation 18",
	recipe = {
		{ "default:desert_stonebrick", "", "default:desert_stonebrick" },
		{ "default:desert_stonebrick", "", "default:desert_stonebrick" },
		{ "default:desert_stonebrick", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_pointed_arch_1_outward", {
	description = "Desert Stone Brick Pointed Arch 1 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_brick_pointed_arch_1", "" },
		{ "eurokit:desert_stone_brick_pointed_arch_1", "eurokit:desert_stone_brick_pointed_arch_1", "eurokit:desert_stone_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pointed_arch_1 1",
	recipe = {
		{ "eurokit:desert_stone_brick_pointed_arch_1_outward", "eurokit:desert_stone_brick_pointed_arch_1_outward", "eurokit:desert_stone_brick_pointed_arch_1_outward" },
		{ "eurokit:desert_stone_brick_pointed_arch_1_outward", "eurokit:desert_stone_brick_pointed_arch_1_outward", "eurokit:desert_stone_brick_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_arrowslit_end_top", {
	description = "Desert Stone Brick Arrowslit End Top",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:desert_stone_brick_arrow_hole", "eurokit:desert_stone_brick_arrow_hole", "eurokit:desert_stone_brick_arrow_hole" },
		{ "", "eurokit:desert_stone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_arrowslit_end_bottom", {
	description = "Desert Stone Brick Arrowslit End Bottom",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_brick_arrow_hole", "" },
		{ "eurokit:desert_stone_brick_arrow_hole", "eurokit:desert_stone_brick_arrow_hole", "eurokit:desert_stone_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_wall_indentation_2_outward", {
	description = "Desert Stone Brick Wall Indentation 2 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_brick_wall_indentation_2", "" },
		{ "eurokit:desert_stone_brick_wall_indentation_2", "eurokit:desert_stone_brick_wall_indentation_2", "eurokit:desert_stone_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_wall_indentation_2 3",
	recipe = {
		{ "eurokit:desert_stone_brick_wall_indentation_2_outward", "eurokit:desert_stone_brick_wall_indentation_2_outward", "" },
		{ "eurokit:desert_stone_brick_wall_indentation_2_outward", "eurokit:desert_stone_brick_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_pillar_mid", {
	description = "Desert Stone Brick Pillar Mid",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pillar_mid 14",
	recipe = {
		{ "", "default:desert_stonebrick", "" },
		{ "", "default:desert_stonebrick", "" },
		{ "", "default:desert_stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "eurokit:desert_stone_brick_pillar_mid", "eurokit:desert_stone_brick_pillar_mid", "eurokit:desert_stone_brick_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_arrowslit_end_left", {
	description = "Desert Stone Brick Arrowslit End Left",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:desert_stone_brick_arrow_hole", "", "" },
		{ "eurokit:desert_stone_brick_arrow_hole", "eurokit:desert_stone_brick_arrow_hole", "" },
		{ "eurokit:desert_stone_brick_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_wall_indentation_2", {
	description = "Desert Stone Brick Wall Indentation 2",
	groups = { cracky = 3, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_wall_indentation_2 2",
	recipe = {
		{ "eurokit:desert_stone_brick_slope", "", "" },
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_arch_inward", {
	description = "Desert Stone Brick Arch Inward",
	groups = { cracky = 3, inward = 1, arch = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_arch_inward 13",
	recipe = {
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "default:desert_stonebrick", "", "default:desert_stonebrick" },
		{ "", "default:desert_stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "eurokit:desert_stone_brick_arch_inward", "eurokit:desert_stone_brick_arch_inward", "eurokit:desert_stone_brick_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_small_arch", {
	description = "Desert Stone Brick Small Arch",
	groups = { cracky = 3, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:desert_stonebrick", "" },
		{ "default:desert_stonebrick", "", "default:desert_stonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 2",
	recipe = {
		{ "eurokit:desert_stone_brick_small_arch", "eurokit:desert_stone_brick_small_arch", "" },
		{ "eurokit:desert_stone_brick_small_arch", "eurokit:desert_stone_brick_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_thin_wall", {
	description = "Desert Stone Brick Thin Wall",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_thin_wall 24",
	recipe = {
		{ "default:desert_stonebrick", "default:desert_stonebrick", "" },
		{ "default:desert_stonebrick", "default:desert_stonebrick", "" },
		{ "default:desert_stonebrick", "default:desert_stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_stone_brick_thin_wall", "eurokit:desert_stone_brick_thin_wall", "eurokit:desert_stone_brick_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_counterarch_inward", {
	description = "Desert Stone Brick Counterarch Inward",
	groups = { cracky = 3, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_counterarch_inward 3",
	recipe = {
		{ "", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "", "", "default:desert_stonebrick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 2",
	recipe = {
		{ "eurokit:desert_stone_brick_counterarch_inward", "", "" },
		{ "eurokit:desert_stone_brick_counterarch_inward", "eurokit:desert_stone_brick_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_small_counterarch", {
	description = "Desert Stone Brick Small Counterarch",
	groups = { cracky = 3, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_small_counterarch 17",
	recipe = {
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "", "default:desert_stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "eurokit:desert_stone_brick_small_counterarch", "eurokit:desert_stone_brick_small_counterarch", "" },
		{ "eurokit:desert_stone_brick_small_counterarch", "eurokit:desert_stone_brick_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_horizontal_arrowslit", {
	description = "Desert Stone Brick Horizontal Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_stone_brick_arrow_hole", "eurokit:desert_stone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_arch_outward", {
	description = "Desert Stone Brick Arch Outward",
	groups = { cracky = 3, outward = 1, arch = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_arch_outward 22",
	recipe = {
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "", "default:desert_stonebrick", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "eurokit:desert_stone_brick_arch_outward", "", "" },
		{ "eurokit:desert_stone_brick_arch_outward", "eurokit:desert_stone_brick_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_arch", {
	description = "Desert Stone Brick Arch",
	groups = { cracky = 3, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_arch 18",
	recipe = {
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "default:desert_stonebrick", "default:desert_stonebrick", "" },
		{ "default:desert_stonebrick", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "eurokit:desert_stone_brick_arch", "eurokit:desert_stone_brick_arch", "" },
		{ "eurokit:desert_stone_brick_arch", "eurokit:desert_stone_brick_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_half_pillar_top", {
	description = "Desert Stone Brick Half Pillar Top",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_half_pillar_top 1",
	recipe = {
		{ "eurokit:desert_stone_brick_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pillar_top 1",
	recipe = {
		{ "eurokit:desert_stone_brick_half_pillar_top", "eurokit:desert_stone_brick_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_pointed_arch_2_inward", {
	description = "Desert Stone Brick Pointed Arch 2 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:desert_stone_brick_pointed_arch_2", "" },
		{ "eurokit:desert_stone_brick_pointed_arch_2", "", "eurokit:desert_stone_brick_pointed_arch_2" },
		{ "eurokit:desert_stone_brick_pointed_arch_2", "eurokit:desert_stone_brick_pointed_arch_2", "eurokit:desert_stone_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pointed_arch_2 6",
	recipe = {
		{ "eurokit:desert_stone_brick_pointed_arch_2_inward", "eurokit:desert_stone_brick_pointed_arch_2_inward", "" },
		{ "eurokit:desert_stone_brick_pointed_arch_2_inward", "eurokit:desert_stone_brick_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_pointed_arch_2_outward", {
	description = "Desert Stone Brick Pointed Arch 2 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_brick_pointed_arch_2", "" },
		{ "eurokit:desert_stone_brick_pointed_arch_2", "eurokit:desert_stone_brick_pointed_arch_2", "eurokit:desert_stone_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_stone_brick_pointed_arch_2_outward", "eurokit:desert_stone_brick_pointed_arch_2_outward", "eurokit:desert_stone_brick_pointed_arch_2_outward" },
		{ "eurokit:desert_stone_brick_pointed_arch_2_outward", "eurokit:desert_stone_brick_pointed_arch_2_outward", "eurokit:desert_stone_brick_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_wall_indentation_1_outward", {
	description = "Desert Stone Brick Wall Indentation 1 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_brick_wall_indentation_1", "" },
		{ "eurokit:desert_stone_brick_wall_indentation_1", "eurokit:desert_stone_brick_wall_indentation_1", "eurokit:desert_stone_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_wall_indentation_1 1",
	recipe = {
		{ "eurokit:desert_stone_brick_wall_indentation_1_outward", "eurokit:desert_stone_brick_wall_indentation_1_outward", "" },
		{ "eurokit:desert_stone_brick_wall_indentation_1_outward", "eurokit:desert_stone_brick_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_wall_indentation_1_inward", {
	description = "Desert Stone Brick Wall Indentation 1 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_stone_brick_wall_indentation_1", "" },
		{ "eurokit:desert_stone_brick_wall_indentation_1", "", "eurokit:desert_stone_brick_wall_indentation_1" },
		{ "eurokit:desert_stone_brick_wall_indentation_1", "eurokit:desert_stone_brick_wall_indentation_1", "eurokit:desert_stone_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_wall_indentation_1 5",
	recipe = {
		{ "eurokit:desert_stone_brick_wall_indentation_1_inward", "eurokit:desert_stone_brick_wall_indentation_1_inward", "eurokit:desert_stone_brick_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_pointed_arch_1", {
	description = "Desert Stone Brick Pointed Arch 1",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pointed_arch_1 11",
	recipe = {
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "" },
		{ "eurokit:desert_stone_brick_slope", "", "" },
		{ "eurokit:desert_stone_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_slope 2",
	recipe = {
		{ "eurokit:desert_stone_brick_pointed_arch_1", "eurokit:desert_stone_brick_pointed_arch_1", "eurokit:desert_stone_brick_pointed_arch_1" },
		{ "eurokit:desert_stone_brick_pointed_arch_1", "eurokit:desert_stone_brick_pointed_arch_1", "eurokit:desert_stone_brick_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_small_straight_arch", {
	description = "Desert Stone Brick Small Straight Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_small_straight_arch 8",
	recipe = {
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "default:desert_stonebrick", "", "default:desert_stonebrick" },
		{ "default:desert_stonebrick", "", "default:desert_stonebrick" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_arrow_hole", {
	description = "Desert Stone Brick Arrow Hole",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_arrow_hole 21",
	recipe = {
		{ "", "default:desert_stonebrick", "" },
		{ "default:desert_stonebrick", "", "default:desert_stonebrick" },
		{ "", "default:desert_stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "eurokit:desert_stone_brick_arrow_hole", "eurokit:desert_stone_brick_arrow_hole", "" },
		{ "eurokit:desert_stone_brick_arrow_hole", "eurokit:desert_stone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_pointed_arch_1_inward", {
	description = "Desert Stone Brick Pointed Arch 1 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_stone_brick_pointed_arch_1", "" },
		{ "eurokit:desert_stone_brick_pointed_arch_1", "", "eurokit:desert_stone_brick_pointed_arch_1" },
		{ "eurokit:desert_stone_brick_pointed_arch_1", "eurokit:desert_stone_brick_pointed_arch_1", "eurokit:desert_stone_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pointed_arch_1 7",
	recipe = {
		{ "eurokit:desert_stone_brick_pointed_arch_1_inward", "eurokit:desert_stone_brick_pointed_arch_1_inward", "" },
		{ "eurokit:desert_stone_brick_pointed_arch_1_inward", "eurokit:desert_stone_brick_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_wall_indentation_1", {
	description = "Desert Stone Brick Wall Indentation 1",
	groups = { cracky = 3, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_wall_indentation_1 7",
	recipe = {
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "" },
		{ "eurokit:desert_stone_brick_slope", "", "eurokit:desert_stone_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_counterarch_outward", {
	description = "Desert Stone Brick Counterarch Outward",
	groups = { cracky = 3, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_counterarch_outward 6",
	recipe = {
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "", "", "default:desert_stonebrick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "eurokit:desert_stone_brick_counterarch_outward", "eurokit:desert_stone_brick_counterarch_outward", "eurokit:desert_stone_brick_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_arrowslit_end_right", {
	description = "Desert Stone Brick Arrowslit End Right",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_brick_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:desert_stone_brick_arrow_hole" },
		{ "", "eurokit:desert_stone_brick_arrow_hole", "eurokit:desert_stone_brick_arrow_hole" },
		{ "", "", "eurokit:desert_stone_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_pillar_base", {
	description = "Desert Stone Brick Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_pillar_base 7",
	recipe = {
		{ "", "default:desert_stonebrick", "" },
		{ "", "default:desert_stonebrick", "" },
		{ "", "default:desert_stonebrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "eurokit:desert_stone_brick_pillar_base", "eurokit:desert_stone_brick_pillar_base", "eurokit:desert_stone_brick_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_long_slope_2_outward", {
	description = "Desert Stone Brick Long Slope 2 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_brick_long_slope_2", "" },
		{ "eurokit:desert_stone_brick_long_slope_2", "eurokit:desert_stone_brick_long_slope_2", "eurokit:desert_stone_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_slope_outward", {
	description = "Desert Stone Brick Slope Outward",
	groups = { cracky = 3, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:desert_stonebrick" },
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 1",
	recipe = {
		{ "eurokit:desert_stone_brick_slope_outward", "eurokit:desert_stone_brick_slope_outward", "eurokit:desert_stone_brick_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_long_slope_2", {
	description = "Desert Stone Brick Long Slope 2",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_brick_slope", "" },
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_long_slope_1_outward", {
	description = "Desert Stone Brick Long Slope 1 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_brick_long_slope_1", "" },
		{ "eurokit:desert_stone_brick_long_slope_1", "eurokit:desert_stone_brick_long_slope_1", "eurokit:desert_stone_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_long_slope_3_inward", {
	description = "Desert Stone Brick Long Slope 3 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:desert_stone_brick_long_slope_3", "" },
		{ "eurokit:desert_stone_brick_long_slope_3", "", "eurokit:desert_stone_brick_long_slope_3" },
		{ "eurokit:desert_stone_brick_long_slope_3", "eurokit:desert_stone_brick_long_slope_3", "eurokit:desert_stone_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_long_slope_1", {
	description = "Desert Stone Brick Long Slope 1",
	groups = { cracky = 3, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_stone_brick_slope", "", "" },
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_long_slope_3_outward", {
	description = "Desert Stone Brick Long Slope 3 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_brick_long_slope_3", "" },
		{ "eurokit:desert_stone_brick_long_slope_3", "eurokit:desert_stone_brick_long_slope_3", "eurokit:desert_stone_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_long_slope_3", {
	description = "Desert Stone Brick Long Slope 3",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:desert_stone_brick_slope" },
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_long_slope_2_inward", {
	description = "Desert Stone Brick Long Slope 2 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:desert_stone_brick_long_slope_2", "" },
		{ "eurokit:desert_stone_brick_long_slope_2", "", "eurokit:desert_stone_brick_long_slope_2" },
		{ "eurokit:desert_stone_brick_long_slope_2", "eurokit:desert_stone_brick_long_slope_2", "eurokit:desert_stone_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_slope_inward", {
	description = "Desert Stone Brick Slope Inward",
	groups = { cracky = 3, inward = 1, slope = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_slope_inward 7",
	recipe = {
		{ "", "", "default:desert_stonebrick" },
		{ "", "default:desert_stonebrick", "" },
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 2",
	recipe = {
		{ "eurokit:desert_stone_brick_slope_inward", "", "" },
		{ "eurokit:desert_stone_brick_slope_inward", "eurokit:desert_stone_brick_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_long_slope_1_inward", {
	description = "Desert Stone Brick Long Slope 1 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:desert_stone_brick_long_slope_1", "" },
		{ "eurokit:desert_stone_brick_long_slope_1", "", "eurokit:desert_stone_brick_long_slope_1" },
		{ "eurokit:desert_stone_brick_long_slope_1", "eurokit:desert_stone_brick_long_slope_1", "eurokit:desert_stone_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_stone_brick_slope", {
	description = "Desert Stone Brick Slope",
	groups = { cracky = 3, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_desert_stone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_brick_slope 11",
	recipe = {
		{ "", "", "default:desert_stonebrick" },
		{ "", "default:desert_stonebrick", "default:desert_stonebrick" },
		{ "default:desert_stonebrick", "default:desert_stonebrick", "default:desert_stonebrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stonebrick 2",
	recipe = {
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "" },
		{ "eurokit:desert_stone_brick_slope", "eurokit:desert_stone_brick_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_half_pillar_mid", {
	description = "Cobblestone Half Pillar Mid",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_half_pillar_mid 1",
	recipe = {
		{ "eurokit:cobblestone_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pillar_mid 2",
	recipe = {
		{ "eurokit:cobblestone_half_pillar_mid", "eurokit:cobblestone_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_pillar_top", {
	description = "Cobblestone Pillar Top",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pillar_top 12",
	recipe = {
		{ "default:cobble", "default:cobble", "default:cobble" },
		{ "", "default:cobble", "" },
		{ "", "default:cobble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "eurokit:cobblestone_pillar_top", "eurokit:cobblestone_pillar_top", "eurokit:cobblestone_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_counterarch", {
	description = "Cobblestone Counterarch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_counterarch 7",
	recipe = {
		{ "default:cobble", "default:cobble", "default:cobble" },
		{ "", "default:cobble", "default:cobble" },
		{ "", "", "default:cobble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 3",
	recipe = {
		{ "eurokit:cobblestone_counterarch", "eurokit:cobblestone_counterarch", "" },
		{ "eurokit:cobblestone_counterarch", "eurokit:cobblestone_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_vertical_arrowslit", {
	description = "Cobblestone Vertical Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:cobblestone_arrow_hole", "" },
		{ "", "eurokit:cobblestone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_wall_indentation_2_inward", {
	description = "Cobblestone Wall Indentation 2 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:cobblestone_wall_indentation_2", "" },
		{ "eurokit:cobblestone_wall_indentation_2", "", "eurokit:cobblestone_wall_indentation_2" },
		{ "eurokit:cobblestone_wall_indentation_2", "eurokit:cobblestone_wall_indentation_2", "eurokit:cobblestone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_wall_indentation_2 4",
	recipe = {
		{ "eurokit:cobblestone_wall_indentation_2_inward", "eurokit:cobblestone_wall_indentation_2_inward", "eurokit:cobblestone_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_half_pillar_base", {
	description = "Cobblestone Half Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_half_pillar_base 1",
	recipe = {
		{ "eurokit:cobblestone_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pillar_base 1",
	recipe = {
		{ "eurokit:cobblestone_half_pillar_base", "eurokit:cobblestone_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_small_pointed_arch", {
	description = "Cobblestone Small Pointed Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_small_pointed_arch 9",
	recipe = {
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "eurokit:cobblestone_slope" },
		{ "eurokit:cobblestone_slope", "", "eurokit:cobblestone_slope" },
		{ "eurokit:cobblestone_slope", "", "eurokit:cobblestone_slope" }
	}
})

minetest.register_node( "eurokit:cobblestone_pointed_arch_2", {
	description = "Cobblestone Pointed Arch 2",
	groups = { cracky = 3, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "" },
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "" },
		{ "eurokit:cobblestone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_slope 5",
	recipe = {
		{ "eurokit:cobblestone_pointed_arch_2", "eurokit:cobblestone_pointed_arch_2", "" },
		{ "eurokit:cobblestone_pointed_arch_2", "eurokit:cobblestone_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_machicolation", {
	description = "Cobblestone Machicolation",
	groups = { cracky = 3, machicolation = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_machicolation 18",
	recipe = {
		{ "default:cobble", "", "default:cobble" },
		{ "default:cobble", "", "default:cobble" },
		{ "default:cobble", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_pointed_arch_1_outward", {
	description = "Cobblestone Pointed Arch 1 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:cobblestone_pointed_arch_1", "" },
		{ "eurokit:cobblestone_pointed_arch_1", "eurokit:cobblestone_pointed_arch_1", "eurokit:cobblestone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pointed_arch_1 1",
	recipe = {
		{ "eurokit:cobblestone_pointed_arch_1_outward", "eurokit:cobblestone_pointed_arch_1_outward", "eurokit:cobblestone_pointed_arch_1_outward" },
		{ "eurokit:cobblestone_pointed_arch_1_outward", "eurokit:cobblestone_pointed_arch_1_outward", "eurokit:cobblestone_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_arrowslit_end_top", {
	description = "Cobblestone Arrowslit End Top",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:cobblestone_arrow_hole", "eurokit:cobblestone_arrow_hole", "eurokit:cobblestone_arrow_hole" },
		{ "", "eurokit:cobblestone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_arrowslit_end_bottom", {
	description = "Cobblestone Arrowslit End Bottom",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:cobblestone_arrow_hole", "" },
		{ "eurokit:cobblestone_arrow_hole", "eurokit:cobblestone_arrow_hole", "eurokit:cobblestone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:cobblestone_wall_indentation_2_outward", {
	description = "Cobblestone Wall Indentation 2 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:cobblestone_wall_indentation_2", "" },
		{ "eurokit:cobblestone_wall_indentation_2", "eurokit:cobblestone_wall_indentation_2", "eurokit:cobblestone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_wall_indentation_2 3",
	recipe = {
		{ "eurokit:cobblestone_wall_indentation_2_outward", "eurokit:cobblestone_wall_indentation_2_outward", "" },
		{ "eurokit:cobblestone_wall_indentation_2_outward", "eurokit:cobblestone_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_pillar_mid", {
	description = "Cobblestone Pillar Mid",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pillar_mid 14",
	recipe = {
		{ "", "default:cobble", "" },
		{ "", "default:cobble", "" },
		{ "", "default:cobble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "eurokit:cobblestone_pillar_mid", "eurokit:cobblestone_pillar_mid", "eurokit:cobblestone_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_arrowslit_end_left", {
	description = "Cobblestone Arrowslit End Left",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:cobblestone_arrow_hole", "", "" },
		{ "eurokit:cobblestone_arrow_hole", "eurokit:cobblestone_arrow_hole", "" },
		{ "eurokit:cobblestone_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_wall_indentation_2", {
	description = "Cobblestone Wall Indentation 2",
	groups = { cracky = 3, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_wall_indentation_2 2",
	recipe = {
		{ "eurokit:cobblestone_slope", "", "" },
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "eurokit:cobblestone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_arch_inward", {
	description = "Cobblestone Arch Inward",
	groups = { cracky = 3, inward = 1, arch = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_arch_inward 13",
	recipe = {
		{ "default:cobble", "default:cobble", "default:cobble" },
		{ "default:cobble", "", "default:cobble" },
		{ "", "default:cobble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "eurokit:cobblestone_arch_inward", "eurokit:cobblestone_arch_inward", "eurokit:cobblestone_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_small_arch", {
	description = "Cobblestone Small Arch",
	groups = { cracky = 3, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:cobble", "" },
		{ "default:cobble", "", "default:cobble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 2",
	recipe = {
		{ "eurokit:cobblestone_small_arch", "eurokit:cobblestone_small_arch", "" },
		{ "eurokit:cobblestone_small_arch", "eurokit:cobblestone_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_thin_wall", {
	description = "Cobblestone Thin Wall",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_thin_wall 24",
	recipe = {
		{ "default:cobble", "default:cobble", "" },
		{ "default:cobble", "default:cobble", "" },
		{ "default:cobble", "default:cobble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:cobblestone_thin_wall", "eurokit:cobblestone_thin_wall", "eurokit:cobblestone_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_counterarch_inward", {
	description = "Cobblestone Counterarch Inward",
	groups = { cracky = 3, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_counterarch_inward 3",
	recipe = {
		{ "", "default:cobble", "default:cobble" },
		{ "", "", "default:cobble" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 2",
	recipe = {
		{ "eurokit:cobblestone_counterarch_inward", "", "" },
		{ "eurokit:cobblestone_counterarch_inward", "eurokit:cobblestone_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_small_counterarch", {
	description = "Cobblestone Small Counterarch",
	groups = { cracky = 3, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_small_counterarch 17",
	recipe = {
		{ "default:cobble", "default:cobble", "default:cobble" },
		{ "default:cobble", "default:cobble", "default:cobble" },
		{ "", "default:cobble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "eurokit:cobblestone_small_counterarch", "eurokit:cobblestone_small_counterarch", "" },
		{ "eurokit:cobblestone_small_counterarch", "eurokit:cobblestone_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_horizontal_arrowslit", {
	description = "Cobblestone Horizontal Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:cobblestone_arrow_hole", "eurokit:cobblestone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_arch_outward", {
	description = "Cobblestone Arch Outward",
	groups = { cracky = 3, outward = 1, arch = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_arch_outward 22",
	recipe = {
		{ "default:cobble", "default:cobble", "default:cobble" },
		{ "", "default:cobble", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "eurokit:cobblestone_arch_outward", "", "" },
		{ "eurokit:cobblestone_arch_outward", "eurokit:cobblestone_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_arch", {
	description = "Cobblestone Arch",
	groups = { cracky = 3, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_arch 18",
	recipe = {
		{ "default:cobble", "default:cobble", "default:cobble" },
		{ "default:cobble", "default:cobble", "" },
		{ "default:cobble", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "eurokit:cobblestone_arch", "eurokit:cobblestone_arch", "" },
		{ "eurokit:cobblestone_arch", "eurokit:cobblestone_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_half_pillar_top", {
	description = "Cobblestone Half Pillar Top",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_half_pillar_top 1",
	recipe = {
		{ "eurokit:cobblestone_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pillar_top 1",
	recipe = {
		{ "eurokit:cobblestone_half_pillar_top", "eurokit:cobblestone_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_pointed_arch_2_inward", {
	description = "Cobblestone Pointed Arch 2 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:cobblestone_pointed_arch_2", "" },
		{ "eurokit:cobblestone_pointed_arch_2", "", "eurokit:cobblestone_pointed_arch_2" },
		{ "eurokit:cobblestone_pointed_arch_2", "eurokit:cobblestone_pointed_arch_2", "eurokit:cobblestone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pointed_arch_2 6",
	recipe = {
		{ "eurokit:cobblestone_pointed_arch_2_inward", "eurokit:cobblestone_pointed_arch_2_inward", "" },
		{ "eurokit:cobblestone_pointed_arch_2_inward", "eurokit:cobblestone_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_pointed_arch_2_outward", {
	description = "Cobblestone Pointed Arch 2 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:cobblestone_pointed_arch_2", "" },
		{ "eurokit:cobblestone_pointed_arch_2", "eurokit:cobblestone_pointed_arch_2", "eurokit:cobblestone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:cobblestone_pointed_arch_2_outward", "eurokit:cobblestone_pointed_arch_2_outward", "eurokit:cobblestone_pointed_arch_2_outward" },
		{ "eurokit:cobblestone_pointed_arch_2_outward", "eurokit:cobblestone_pointed_arch_2_outward", "eurokit:cobblestone_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_wall_indentation_1_outward", {
	description = "Cobblestone Wall Indentation 1 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:cobblestone_wall_indentation_1", "" },
		{ "eurokit:cobblestone_wall_indentation_1", "eurokit:cobblestone_wall_indentation_1", "eurokit:cobblestone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_wall_indentation_1 1",
	recipe = {
		{ "eurokit:cobblestone_wall_indentation_1_outward", "eurokit:cobblestone_wall_indentation_1_outward", "" },
		{ "eurokit:cobblestone_wall_indentation_1_outward", "eurokit:cobblestone_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_wall_indentation_1_inward", {
	description = "Cobblestone Wall Indentation 1 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:cobblestone_wall_indentation_1", "" },
		{ "eurokit:cobblestone_wall_indentation_1", "", "eurokit:cobblestone_wall_indentation_1" },
		{ "eurokit:cobblestone_wall_indentation_1", "eurokit:cobblestone_wall_indentation_1", "eurokit:cobblestone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_wall_indentation_1 5",
	recipe = {
		{ "eurokit:cobblestone_wall_indentation_1_inward", "eurokit:cobblestone_wall_indentation_1_inward", "eurokit:cobblestone_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_pointed_arch_1", {
	description = "Cobblestone Pointed Arch 1",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pointed_arch_1 11",
	recipe = {
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "" },
		{ "eurokit:cobblestone_slope", "", "" },
		{ "eurokit:cobblestone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_slope 2",
	recipe = {
		{ "eurokit:cobblestone_pointed_arch_1", "eurokit:cobblestone_pointed_arch_1", "eurokit:cobblestone_pointed_arch_1" },
		{ "eurokit:cobblestone_pointed_arch_1", "eurokit:cobblestone_pointed_arch_1", "eurokit:cobblestone_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_small_straight_arch", {
	description = "Cobblestone Small Straight Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_small_straight_arch 8",
	recipe = {
		{ "default:cobble", "default:cobble", "default:cobble" },
		{ "default:cobble", "", "default:cobble" },
		{ "default:cobble", "", "default:cobble" }
	}
})

minetest.register_node( "eurokit:cobblestone_arrow_hole", {
	description = "Cobblestone Arrow Hole",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_arrow_hole 21",
	recipe = {
		{ "", "default:cobble", "" },
		{ "default:cobble", "", "default:cobble" },
		{ "", "default:cobble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "eurokit:cobblestone_arrow_hole", "eurokit:cobblestone_arrow_hole", "" },
		{ "eurokit:cobblestone_arrow_hole", "eurokit:cobblestone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_pointed_arch_1_inward", {
	description = "Cobblestone Pointed Arch 1 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:cobblestone_pointed_arch_1", "" },
		{ "eurokit:cobblestone_pointed_arch_1", "", "eurokit:cobblestone_pointed_arch_1" },
		{ "eurokit:cobblestone_pointed_arch_1", "eurokit:cobblestone_pointed_arch_1", "eurokit:cobblestone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pointed_arch_1 7",
	recipe = {
		{ "eurokit:cobblestone_pointed_arch_1_inward", "eurokit:cobblestone_pointed_arch_1_inward", "" },
		{ "eurokit:cobblestone_pointed_arch_1_inward", "eurokit:cobblestone_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_wall_indentation_1", {
	description = "Cobblestone Wall Indentation 1",
	groups = { cracky = 3, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_wall_indentation_1 7",
	recipe = {
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "" },
		{ "eurokit:cobblestone_slope", "", "eurokit:cobblestone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_counterarch_outward", {
	description = "Cobblestone Counterarch Outward",
	groups = { cracky = 3, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_counterarch_outward 6",
	recipe = {
		{ "default:cobble", "default:cobble", "default:cobble" },
		{ "", "", "default:cobble" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "eurokit:cobblestone_counterarch_outward", "eurokit:cobblestone_counterarch_outward", "eurokit:cobblestone_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_arrowslit_end_right", {
	description = "Cobblestone Arrowslit End Right",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:cobblestone_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:cobblestone_arrow_hole" },
		{ "", "eurokit:cobblestone_arrow_hole", "eurokit:cobblestone_arrow_hole" },
		{ "", "", "eurokit:cobblestone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:cobblestone_pillar_base", {
	description = "Cobblestone Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_pillar_base 7",
	recipe = {
		{ "", "default:cobble", "" },
		{ "", "default:cobble", "" },
		{ "", "default:cobble", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "eurokit:cobblestone_pillar_base", "eurokit:cobblestone_pillar_base", "eurokit:cobblestone_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_long_slope_2_outward", {
	description = "Cobblestone Long Slope 2 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:cobblestone_long_slope_2", "" },
		{ "eurokit:cobblestone_long_slope_2", "eurokit:cobblestone_long_slope_2", "eurokit:cobblestone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:cobblestone_slope_outward", {
	description = "Cobblestone Slope Outward",
	groups = { cracky = 3, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:cobble" },
		{ "default:cobble", "default:cobble", "default:cobble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 1",
	recipe = {
		{ "eurokit:cobblestone_slope_outward", "eurokit:cobblestone_slope_outward", "eurokit:cobblestone_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_long_slope_2", {
	description = "Cobblestone Long Slope 2",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:cobblestone_slope", "" },
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "eurokit:cobblestone_slope" }
	}
})

minetest.register_node( "eurokit:cobblestone_long_slope_1_outward", {
	description = "Cobblestone Long Slope 1 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:cobblestone_long_slope_1", "" },
		{ "eurokit:cobblestone_long_slope_1", "eurokit:cobblestone_long_slope_1", "eurokit:cobblestone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:cobblestone_long_slope_3_inward", {
	description = "Cobblestone Long Slope 3 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:cobblestone_long_slope_3", "" },
		{ "eurokit:cobblestone_long_slope_3", "", "eurokit:cobblestone_long_slope_3" },
		{ "eurokit:cobblestone_long_slope_3", "eurokit:cobblestone_long_slope_3", "eurokit:cobblestone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:cobblestone_long_slope_1", {
	description = "Cobblestone Long Slope 1",
	groups = { cracky = 3, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:cobblestone_slope", "", "" },
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "eurokit:cobblestone_slope" }
	}
})

minetest.register_node( "eurokit:cobblestone_long_slope_3_outward", {
	description = "Cobblestone Long Slope 3 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:cobblestone_long_slope_3", "" },
		{ "eurokit:cobblestone_long_slope_3", "eurokit:cobblestone_long_slope_3", "eurokit:cobblestone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:cobblestone_long_slope_3", {
	description = "Cobblestone Long Slope 3",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:cobblestone_slope" },
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "eurokit:cobblestone_slope" }
	}
})

minetest.register_node( "eurokit:cobblestone_long_slope_2_inward", {
	description = "Cobblestone Long Slope 2 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:cobblestone_long_slope_2", "" },
		{ "eurokit:cobblestone_long_slope_2", "", "eurokit:cobblestone_long_slope_2" },
		{ "eurokit:cobblestone_long_slope_2", "eurokit:cobblestone_long_slope_2", "eurokit:cobblestone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:cobblestone_slope_inward", {
	description = "Cobblestone Slope Inward",
	groups = { cracky = 3, inward = 1, slope = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_slope_inward 7",
	recipe = {
		{ "", "", "default:cobble" },
		{ "", "default:cobble", "" },
		{ "default:cobble", "default:cobble", "default:cobble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 2",
	recipe = {
		{ "eurokit:cobblestone_slope_inward", "", "" },
		{ "eurokit:cobblestone_slope_inward", "eurokit:cobblestone_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:cobblestone_long_slope_1_inward", {
	description = "Cobblestone Long Slope 1 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:cobblestone_long_slope_1", "" },
		{ "eurokit:cobblestone_long_slope_1", "", "eurokit:cobblestone_long_slope_1" },
		{ "eurokit:cobblestone_long_slope_1", "eurokit:cobblestone_long_slope_1", "eurokit:cobblestone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:cobblestone_slope", {
	description = "Cobblestone Slope",
	groups = { cracky = 3, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_cobble.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:cobblestone_slope 11",
	recipe = {
		{ "", "", "default:cobble" },
		{ "", "default:cobble", "default:cobble" },
		{ "default:cobble", "default:cobble", "default:cobble" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:cobble 2",
	recipe = {
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "" },
		{ "eurokit:cobblestone_slope", "eurokit:cobblestone_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:steel_frieze_outward", {
	description = "Steel Frieze Outward",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_outward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_frieze_outward 56",
	recipe = {
		{ "", "", "eurokit:steel_sheet" },
		{ "", "", "" },
		{ "", "", "eurokit:steel_sheet" }
	}
})

minetest.register_node( "eurokit:steel_frieze", {
	description = "Steel Frieze",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_frieze 12",
	recipe = {
		{ "", "eurokit:steel_sheet", "eurokit:steel_sheet" },
		{ "", "", "" },
		{ "", "eurokit:steel_sheet", "eurokit:steel_sheet" }
	}
})

minetest.register_node( "eurokit:steel_fancy_frieze_outward", {
	description = "Steel Fancy Frieze Outward",
	groups = { cracky = 1, frieze = 1, outward = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_outward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_fancy_frieze_outward 99",
	recipe = {
		{ "", "eurokit:steel_sheet", "eurokit:steel_sheet" },
		{ "", "", "eurokit:steel_sheet" },
		{ "", "eurokit:steel_sheet", "eurokit:steel_sheet" }
	}
})

minetest.register_node( "eurokit:steel_side_rail_oblique", {
	description = "Steel Side Rail Oblique",
	groups = { cracky = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:steel_side_rail_oblique")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail_oblique 11",
	recipe = {
		{ "eurokit:steel_sheet", "", "" },
		{ "eurokit:steel_sheet", "eurokit:steel_sheet", "" },
		{ "eurokit:steel_sheet", "", "eurokit:steel_sheet" }
	}
})

minetest.register_node( "eurokit:steel_frieze_inward", {
	description = "Steel Frieze Inward",
	groups = { cracky = 1, frieze = 1, inward = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_inward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_frieze_inward 10",
	recipe = {
		{ "eurokit:steel_sheet", "eurokit:steel_sheet", "eurokit:steel_sheet" },
		{ "", "", "" },
		{ "eurokit:steel_sheet", "eurokit:steel_sheet", "eurokit:steel_sheet" }
	}
})

minetest.register_node( "eurokit:steel_fancy_frieze_inward", {
	description = "Steel Fancy Frieze Inward",
	groups = { cracky = 1, frieze = 1, inward = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_inward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_fancy_frieze_inward 10",
	recipe = {
		{ "eurokit:steel_sheet", "eurokit:steel_sheet", "eurokit:steel_sheet" },
		{ "eurokit:steel_sheet", "eurokit:steel_sheet", "" },
		{ "eurokit:steel_sheet", "eurokit:steel_sheet", "eurokit:steel_sheet" }
	}
})

minetest.register_node( "eurokit:steel_side_rail_oblique_corner_counterclockwise", {
	description = "Steel Side Rail Oblique Corner Counterclockwise",
	groups = { cracky = 1, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_counterclockwise,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:steel_side_rail_oblique_corner_counterclockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail_oblique_corner_counterclockwise 2",
	recipe = {
		{ "", "eurokit:steel_side_rail_oblique", "eurokit:steel_side_rail_oblique" },
		{ "", "", "eurokit:steel_side_rail_oblique" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail_oblique 2",
	recipe = {
		{ "eurokit:steel_side_rail_oblique_corner_counterclockwise", "eurokit:steel_side_rail_oblique_corner_counterclockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:steel_side_rail_oblique_corner_clockwise", {
	description = "Steel Side Rail Oblique Corner Clockwise",
	groups = { cracky = 1, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_clockwise,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:steel_side_rail_oblique_corner_clockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail_oblique_corner_clockwise 2",
	recipe = {
		{ "eurokit:steel_side_rail_oblique", "eurokit:steel_side_rail_oblique", "" },
		{ "eurokit:steel_side_rail_oblique", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail_oblique 2",
	recipe = {
		{ "eurokit:steel_side_rail_oblique_corner_clockwise", "eurokit:steel_side_rail_oblique_corner_clockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:steel_side_rail_top_corner", {
	description = "Steel Side Rail Top Corner",
	groups = { cracky = 1, railling = 1, corner = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top_corner,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:steel_side_rail_top_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail_top_corner 2",
	recipe = {
		{ "eurokit:steel_side_rail_top", "eurokit:steel_side_rail_top", "" },
		{ "eurokit:steel_side_rail_top", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail_top 2",
	recipe = {
		{ "eurokit:steel_side_rail_top_corner", "eurokit:steel_side_rail_top_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:steel_fancy_frieze", {
	description = "Steel Fancy Frieze",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_fancy_frieze 17",
	recipe = {
		{ "eurokit:steel_sheet", "eurokit:steel_sheet", "eurokit:steel_sheet" },
		{ "", "eurokit:steel_sheet", "" },
		{ "eurokit:steel_sheet", "eurokit:steel_sheet", "eurokit:steel_sheet" }
	}
})

minetest.register_node( "eurokit:steel_side_rail_corner", {
	description = "Steel Side Rail Corner",
	groups = { cracky = 1, railling = 1, corner = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_corner,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:steel_side_rail_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail_corner 3",
	recipe = {
		{ "eurokit:steel_side_rail", "eurokit:steel_side_rail", "" },
		{ "eurokit:steel_side_rail", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail 2",
	recipe = {
		{ "eurokit:steel_side_rail_corner", "eurokit:steel_side_rail_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:steel_side_rail_top", {
	description = "Steel Side Rail Top",
	groups = { cracky = 1, railling = 1, raillingtop = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:steel_side_rail_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail_top 11",
	recipe = {
		{ "eurokit:steel_sheet", "eurokit:steel_sheet", "eurokit:steel_sheet" },
		{ "eurokit:steel_sheet", "", "eurokit:steel_sheet" },
		{ "eurokit:steel_sheet", "", "eurokit:steel_sheet" }
	}
})

minetest.register_node( "eurokit:steel_side_rail", {
	description = "Steel Side Rail",
	groups = { cracky = 1, railling = 1 },
	tiles = { "default_steel_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:steel_side_rail")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:steel_side_rail 16",
	recipe = {
		{ "eurokit:steel_sheet", "", "eurokit:steel_sheet" },
		{ "eurokit:steel_sheet", "", "eurokit:steel_sheet" },
		{ "eurokit:steel_sheet", "", "eurokit:steel_sheet" }
	}
})

minetest.register_node( "eurokit:jungle_wood_half_pillar_mid", {
	description = "Jungle Wood Half Pillar Mid",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_half_pillar_mid 1",
	recipe = {
		{ "eurokit:jungle_wood_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pillar_mid 2",
	recipe = {
		{ "eurokit:jungle_wood_half_pillar_mid", "eurokit:jungle_wood_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_half_pillar_mid",
	burntime = 2.390625
})

minetest.register_node( "eurokit:jungle_wood_pillar_top", {
	description = "Jungle Wood Pillar Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pillar_top 12",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "", "default:junglewood", "" },
		{ "", "default:junglewood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 1",
	recipe = {
		{ "eurokit:jungle_wood_pillar_top", "eurokit:jungle_wood_pillar_top", "eurokit:jungle_wood_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_pillar_top",
	burntime = 3.55078125
})

minetest.register_node( "eurokit:jungle_wood_counterarch", {
	description = "Jungle Wood Counterarch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_counterarch 7",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "", "default:junglewood", "default:junglewood" },
		{ "", "", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 3",
	recipe = {
		{ "eurokit:jungle_wood_counterarch", "eurokit:jungle_wood_counterarch", "" },
		{ "eurokit:jungle_wood_counterarch", "eurokit:jungle_wood_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_counterarch",
	burntime = 7.03125
})

minetest.register_node( "eurokit:jungle_wood_vertical_arrowslit", {
	description = "Jungle Wood Vertical Arrowslit",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:jungle_wood_arrow_hole", "" },
		{ "", "eurokit:jungle_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_vertical_arrowslit",
	burntime = 1.546875
})

minetest.register_node( "eurokit:jungle_wood_wall_indentation_2_inward", {
	description = "Jungle Wood Wall Indentation 2 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:jungle_wood_wall_indentation_2", "" },
		{ "eurokit:jungle_wood_wall_indentation_2", "", "eurokit:jungle_wood_wall_indentation_2" },
		{ "eurokit:jungle_wood_wall_indentation_2", "eurokit:jungle_wood_wall_indentation_2", "eurokit:jungle_wood_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_wall_indentation_2 4",
	recipe = {
		{ "eurokit:jungle_wood_wall_indentation_2_inward", "eurokit:jungle_wood_wall_indentation_2_inward", "eurokit:jungle_wood_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_wall_indentation_2_inward",
	burntime = 10.142578125
})

minetest.register_node( "eurokit:jungle_wood_half_pillar_base", {
	description = "Jungle Wood Half Pillar Base",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_half_pillar_base 1",
	recipe = {
		{ "eurokit:jungle_wood_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pillar_base 1",
	recipe = {
		{ "eurokit:jungle_wood_half_pillar_base", "eurokit:jungle_wood_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_half_pillar_base",
	burntime = 2.443359375
})

minetest.register_node( "eurokit:jungle_wood_small_pointed_arch", {
	description = "Jungle Wood Small Pointed Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_small_pointed_arch 9",
	recipe = {
		{ "eurokit:jungle_wood_slope", "eurokit:jungle_wood_slope", "eurokit:jungle_wood_slope" },
		{ "eurokit:jungle_wood_slope", "", "eurokit:jungle_wood_slope" },
		{ "eurokit:jungle_wood_slope", "", "eurokit:jungle_wood_slope" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_small_pointed_arch",
	burntime = 3.515625
})

minetest.register_node( "eurokit:jungle_wood_pointed_arch_2", {
	description = "Jungle Wood Pointed Arch 2",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pointed_arch_2 3",
	recipe = {
		{ "eurokit:jungle_wood_slope", "eurokit:jungle_wood_slope", "" },
		{ "eurokit:jungle_wood_slope", "eurokit:jungle_wood_slope", "" },
		{ "eurokit:jungle_wood_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_slope 5",
	recipe = {
		{ "eurokit:jungle_wood_pointed_arch_2", "eurokit:jungle_wood_pointed_arch_2", "" },
		{ "eurokit:jungle_wood_pointed_arch_2", "eurokit:jungle_wood_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_pointed_arch_2",
	burntime = 6.08203125
})

minetest.register_node( "eurokit:jungle_wood_machicolation", {
	description = "Jungle Wood Machicolation",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, machicolation = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_machicolation 18",
	recipe = {
		{ "default:junglewood", "", "default:junglewood" },
		{ "default:junglewood", "", "default:junglewood" },
		{ "default:junglewood", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_machicolation",
	burntime = 2.408203125
})

minetest.register_node( "eurokit:jungle_wood_pointed_arch_1_outward", {
	description = "Jungle Wood Pointed Arch 1 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:jungle_wood_pointed_arch_1", "" },
		{ "eurokit:jungle_wood_pointed_arch_1", "eurokit:jungle_wood_pointed_arch_1", "eurokit:jungle_wood_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pointed_arch_1 1",
	recipe = {
		{ "eurokit:jungle_wood_pointed_arch_1_outward", "eurokit:jungle_wood_pointed_arch_1_outward", "eurokit:jungle_wood_pointed_arch_1_outward" },
		{ "eurokit:jungle_wood_pointed_arch_1_outward", "eurokit:jungle_wood_pointed_arch_1_outward", "eurokit:jungle_wood_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_pointed_arch_1_outward",
	burntime = 0.3515625
})

minetest.register_node( "eurokit:jungle_wood_arrowslit_end_top", {
	description = "Jungle Wood Arrowslit End Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:jungle_wood_arrow_hole", "eurokit:jungle_wood_arrow_hole", "eurokit:jungle_wood_arrow_hole" },
		{ "", "eurokit:jungle_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_arrowslit_end_top",
	burntime = 1.42822265625
})

minetest.register_node( "eurokit:jungle_wood_arrowslit_end_bottom", {
	description = "Jungle Wood Arrowslit End Bottom",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:jungle_wood_arrow_hole", "" },
		{ "eurokit:jungle_wood_arrow_hole", "eurokit:jungle_wood_arrow_hole", "eurokit:jungle_wood_arrow_hole" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_arrowslit_end_bottom",
	burntime = 1.42822265625
})

minetest.register_node( "eurokit:jungle_wood_wall_indentation_2_outward", {
	description = "Jungle Wood Wall Indentation 2 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:jungle_wood_wall_indentation_2", "" },
		{ "eurokit:jungle_wood_wall_indentation_2", "eurokit:jungle_wood_wall_indentation_2", "eurokit:jungle_wood_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_wall_indentation_2 3",
	recipe = {
		{ "eurokit:jungle_wood_wall_indentation_2_outward", "eurokit:jungle_wood_wall_indentation_2_outward", "" },
		{ "eurokit:jungle_wood_wall_indentation_2_outward", "eurokit:jungle_wood_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_wall_indentation_2_outward",
	burntime = 5.677734375
})

minetest.register_node( "eurokit:jungle_wood_pillar_mid", {
	description = "Jungle Wood Pillar Mid",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pillar_mid 14",
	recipe = {
		{ "", "default:junglewood", "" },
		{ "", "default:junglewood", "" },
		{ "", "default:junglewood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 1",
	recipe = {
		{ "eurokit:jungle_wood_pillar_mid", "eurokit:jungle_wood_pillar_mid", "eurokit:jungle_wood_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_pillar_mid",
	burntime = 1.828125
})

minetest.register_node( "eurokit:jungle_wood_arrowslit_end_left", {
	description = "Jungle Wood Arrowslit End Left",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:jungle_wood_arrow_hole", "", "" },
		{ "eurokit:jungle_wood_arrow_hole", "eurokit:jungle_wood_arrow_hole", "" },
		{ "eurokit:jungle_wood_arrow_hole", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_arrowslit_end_left",
	burntime = 1.39078125
})

minetest.register_node( "eurokit:jungle_wood_wall_indentation_2", {
	description = "Jungle Wood Wall Indentation 2",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_wall_indentation_2 2",
	recipe = {
		{ "eurokit:jungle_wood_slope", "", "" },
		{ "eurokit:jungle_wood_slope", "eurokit:jungle_wood_slope", "eurokit:jungle_wood_slope" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_wall_indentation_2",
	burntime = 7.03125
})

minetest.register_node( "eurokit:jungle_wood_arch_inward", {
	description = "Jungle Wood Arch Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, inward = 1, arch = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_arch_inward 13",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "default:junglewood", "", "default:junglewood" },
		{ "", "default:junglewood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 1",
	recipe = {
		{ "eurokit:jungle_wood_arch_inward", "eurokit:jungle_wood_arch_inward", "eurokit:jungle_wood_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_arch_inward",
	burntime = 4.111083984375
})

minetest.register_node( "eurokit:jungle_wood_small_arch", {
	description = "Jungle Wood Small Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:junglewood", "" },
		{ "default:junglewood", "", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 2",
	recipe = {
		{ "eurokit:jungle_wood_small_arch", "eurokit:jungle_wood_small_arch", "" },
		{ "eurokit:jungle_wood_small_arch", "eurokit:jungle_wood_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_small_arch",
	burntime = 6.046875
})

minetest.register_node( "eurokit:jungle_wood_thin_wall", {
	description = "Jungle Wood Thin Wall",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_thin_wall 24",
	recipe = {
		{ "default:junglewood", "default:junglewood", "" },
		{ "default:junglewood", "default:junglewood", "" },
		{ "default:junglewood", "default:junglewood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:jungle_wood_thin_wall", "eurokit:jungle_wood_thin_wall", "eurokit:jungle_wood_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_thin_wall",
	burntime = 2.25
})

minetest.register_node( "eurokit:jungle_wood_counterarch_inward", {
	description = "Jungle Wood Counterarch Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_counterarch_inward 3",
	recipe = {
		{ "", "default:junglewood", "default:junglewood" },
		{ "", "", "default:junglewood" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 2",
	recipe = {
		{ "eurokit:jungle_wood_counterarch_inward", "", "" },
		{ "eurokit:jungle_wood_counterarch_inward", "eurokit:jungle_wood_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_counterarch_inward",
	burntime = 8.138671875
})

minetest.register_node( "eurokit:jungle_wood_small_counterarch", {
	description = "Jungle Wood Small Counterarch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_small_counterarch 17",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "", "default:junglewood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 1",
	recipe = {
		{ "eurokit:jungle_wood_small_counterarch", "eurokit:jungle_wood_small_counterarch", "" },
		{ "eurokit:jungle_wood_small_counterarch", "eurokit:jungle_wood_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_small_counterarch",
	burntime = 3.65625
})

minetest.register_node( "eurokit:jungle_wood_horizontal_arrowslit", {
	description = "Jungle Wood Horizontal Arrowslit",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:jungle_wood_arrow_hole", "eurokit:jungle_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_horizontal_arrowslit",
	burntime = 1.546875
})

minetest.register_node( "eurokit:jungle_wood_arch_outward", {
	description = "Jungle Wood Arch Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, outward = 1, arch = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_arch_outward 22",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "", "default:junglewood", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 1",
	recipe = {
		{ "eurokit:jungle_wood_arch_outward", "", "" },
		{ "eurokit:jungle_wood_arch_outward", "eurokit:jungle_wood_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_arch_outward",
	burntime = 1.584228515625
})

minetest.register_node( "eurokit:jungle_wood_arch", {
	description = "Jungle Wood Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_arch 18",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "default:junglewood", "default:junglewood", "" },
		{ "default:junglewood", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 1",
	recipe = {
		{ "eurokit:jungle_wood_arch", "eurokit:jungle_wood_arch", "" },
		{ "eurokit:jungle_wood_arch", "eurokit:jungle_wood_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_arch",
	burntime = 2.84765625
})

minetest.register_node( "eurokit:jungle_wood_half_pillar_top", {
	description = "Jungle Wood Half Pillar Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_half_pillar_top 1",
	recipe = {
		{ "eurokit:jungle_wood_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pillar_top 1",
	recipe = {
		{ "eurokit:jungle_wood_half_pillar_top", "eurokit:jungle_wood_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_half_pillar_top",
	burntime = 2.443359375
})

minetest.register_node( "eurokit:jungle_wood_pointed_arch_2_inward", {
	description = "Jungle Wood Pointed Arch 2 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:jungle_wood_pointed_arch_2", "" },
		{ "eurokit:jungle_wood_pointed_arch_2", "", "eurokit:jungle_wood_pointed_arch_2" },
		{ "eurokit:jungle_wood_pointed_arch_2", "eurokit:jungle_wood_pointed_arch_2", "eurokit:jungle_wood_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pointed_arch_2 6",
	recipe = {
		{ "eurokit:jungle_wood_pointed_arch_2_inward", "eurokit:jungle_wood_pointed_arch_2_inward", "" },
		{ "eurokit:jungle_wood_pointed_arch_2_inward", "eurokit:jungle_wood_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_pointed_arch_2_inward",
	burntime = 10.540283203125
})

minetest.register_node( "eurokit:jungle_wood_pointed_arch_2_outward", {
	description = "Jungle Wood Pointed Arch 2 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:jungle_wood_pointed_arch_2", "" },
		{ "eurokit:jungle_wood_pointed_arch_2", "eurokit:jungle_wood_pointed_arch_2", "eurokit:jungle_wood_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pointed_arch_2 3",
	recipe = {
		{ "eurokit:jungle_wood_pointed_arch_2_outward", "eurokit:jungle_wood_pointed_arch_2_outward", "eurokit:jungle_wood_pointed_arch_2_outward" },
		{ "eurokit:jungle_wood_pointed_arch_2_outward", "eurokit:jungle_wood_pointed_arch_2_outward", "eurokit:jungle_wood_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_pointed_arch_2_outward",
	burntime = 3.812255859375
})

minetest.register_node( "eurokit:jungle_wood_wall_indentation_1_outward", {
	description = "Jungle Wood Wall Indentation 1 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:jungle_wood_wall_indentation_1", "" },
		{ "eurokit:jungle_wood_wall_indentation_1", "eurokit:jungle_wood_wall_indentation_1", "eurokit:jungle_wood_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_wall_indentation_1 1",
	recipe = {
		{ "eurokit:jungle_wood_wall_indentation_1_outward", "eurokit:jungle_wood_wall_indentation_1_outward", "" },
		{ "eurokit:jungle_wood_wall_indentation_1_outward", "eurokit:jungle_wood_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_wall_indentation_1_outward",
	burntime = 0.896484375
})

minetest.register_node( "eurokit:jungle_wood_wall_indentation_1_inward", {
	description = "Jungle Wood Wall Indentation 1 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:jungle_wood_wall_indentation_1", "" },
		{ "eurokit:jungle_wood_wall_indentation_1", "", "eurokit:jungle_wood_wall_indentation_1" },
		{ "eurokit:jungle_wood_wall_indentation_1", "eurokit:jungle_wood_wall_indentation_1", "eurokit:jungle_wood_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_wall_indentation_1 5",
	recipe = {
		{ "eurokit:jungle_wood_wall_indentation_1_inward", "eurokit:jungle_wood_wall_indentation_1_inward", "eurokit:jungle_wood_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_wall_indentation_1_inward",
	burntime = 4.447265625
})

minetest.register_node( "eurokit:jungle_wood_pointed_arch_1", {
	description = "Jungle Wood Pointed Arch 1",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pointed_arch_1 11",
	recipe = {
		{ "eurokit:jungle_wood_slope", "eurokit:jungle_wood_slope", "" },
		{ "eurokit:jungle_wood_slope", "", "" },
		{ "eurokit:jungle_wood_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_slope 2",
	recipe = {
		{ "eurokit:jungle_wood_pointed_arch_1", "eurokit:jungle_wood_pointed_arch_1", "eurokit:jungle_wood_pointed_arch_1" },
		{ "eurokit:jungle_wood_pointed_arch_1", "eurokit:jungle_wood_pointed_arch_1", "eurokit:jungle_wood_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_pointed_arch_1",
	burntime = 1.6171875
})

minetest.register_node( "eurokit:jungle_wood_small_straight_arch", {
	description = "Jungle Wood Small Straight Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_small_straight_arch 8",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "default:junglewood", "", "default:junglewood" },
		{ "default:junglewood", "", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_small_straight_arch",
	burntime = 7.03125
})

minetest.register_node( "eurokit:jungle_wood_arrow_hole", {
	description = "Jungle Wood Arrow Hole",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_arrow_hole 21",
	recipe = {
		{ "", "default:junglewood", "" },
		{ "default:junglewood", "", "default:junglewood" },
		{ "", "default:junglewood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 1",
	recipe = {
		{ "eurokit:jungle_wood_arrow_hole", "eurokit:jungle_wood_arrow_hole", "" },
		{ "eurokit:jungle_wood_arrow_hole", "eurokit:jungle_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_arrow_hole",
	burntime = 1.705078125
})

minetest.register_node( "eurokit:jungle_wood_pointed_arch_1_inward", {
	description = "Jungle Wood Pointed Arch 1 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:jungle_wood_pointed_arch_1", "" },
		{ "eurokit:jungle_wood_pointed_arch_1", "", "eurokit:jungle_wood_pointed_arch_1" },
		{ "eurokit:jungle_wood_pointed_arch_1", "eurokit:jungle_wood_pointed_arch_1", "eurokit:jungle_wood_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pointed_arch_1 7",
	recipe = {
		{ "eurokit:jungle_wood_pointed_arch_1_inward", "eurokit:jungle_wood_pointed_arch_1_inward", "" },
		{ "eurokit:jungle_wood_pointed_arch_1_inward", "eurokit:jungle_wood_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_pointed_arch_1_inward",
	burntime = 3.008056640625
})

minetest.register_node( "eurokit:jungle_wood_wall_indentation_1", {
	description = "Jungle Wood Wall Indentation 1",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_wall_indentation_1 7",
	recipe = {
		{ "eurokit:jungle_wood_slope", "eurokit:jungle_wood_slope", "" },
		{ "eurokit:jungle_wood_slope", "", "eurokit:jungle_wood_slope" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_wall_indentation_1",
	burntime = 2.53125
})

minetest.register_node( "eurokit:jungle_wood_counterarch_outward", {
	description = "Jungle Wood Counterarch Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_counterarch_outward 6",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "", "", "default:junglewood" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 1",
	recipe = {
		{ "eurokit:jungle_wood_counterarch_outward", "eurokit:jungle_wood_counterarch_outward", "eurokit:jungle_wood_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_counterarch_outward",
	burntime = 5.923828125
})

minetest.register_node( "eurokit:jungle_wood_arrowslit_end_right", {
	description = "Jungle Wood Arrowslit End Right",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:jungle_wood_arrow_hole" },
		{ "", "eurokit:jungle_wood_arrow_hole", "eurokit:jungle_wood_arrow_hole" },
		{ "", "", "eurokit:jungle_wood_arrow_hole" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_arrowslit_end_right",
	burntime = 1.40625
})

minetest.register_node( "eurokit:jungle_wood_pillar_base", {
	description = "Jungle Wood Pillar Base",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_pillar_base 7",
	recipe = {
		{ "", "default:junglewood", "" },
		{ "", "default:junglewood", "" },
		{ "", "default:junglewood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:junglewood 1",
	recipe = {
		{ "eurokit:jungle_wood_pillar_base", "eurokit:jungle_wood_pillar_base", "eurokit:jungle_wood_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_pillar_base",
	burntime = 3.55078125
})

minetest.register_node( "eurokit:jungle_wood_frieze_outward", {
	description = "Jungle Wood Frieze Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_frieze_outward 99",
	recipe = {
		{ "", "", "default:junglewood" },
		{ "", "", "" },
		{ "", "", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_frieze_outward",
	burntime = 0.03955078125
})

minetest.register_node( "eurokit:jungle_wood_frieze", {
	description = "Jungle Wood Frieze",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_frieze 99",
	recipe = {
		{ "", "default:junglewood", "default:junglewood" },
		{ "", "", "" },
		{ "", "default:junglewood", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_frieze",
	burntime = 0.3515625
})

minetest.register_node( "eurokit:jungle_wood_fancy_frieze_outward", {
	description = "Jungle Wood Fancy Frieze Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, outward = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_fancy_frieze_outward 99",
	recipe = {
		{ "", "default:junglewood", "default:junglewood" },
		{ "", "", "default:junglewood" },
		{ "", "default:junglewood", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_fancy_frieze_outward",
	burntime = 0.042099609375
})

minetest.register_node( "eurokit:jungle_wood_side_rail_oblique", {
	description = "Jungle Wood Side Rail Oblique",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_side_rail_oblique")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail_oblique 93",
	recipe = {
		{ "default:junglewood", "", "" },
		{ "default:junglewood", "default:junglewood", "" },
		{ "default:junglewood", "", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_side_rail_oblique",
	burntime = 0.4831171875
})

minetest.register_node( "eurokit:jungle_wood_frieze_inward", {
	description = "Jungle Wood Frieze Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, inward = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_frieze_inward 81",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "", "", "" },
		{ "default:junglewood", "default:junglewood", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_frieze_inward",
	burntime = 0.66357421875
})

minetest.register_node( "eurokit:jungle_wood_fancy_frieze_inward", {
	description = "Jungle Wood Fancy Frieze Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, inward = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_fancy_frieze_inward 82",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "default:junglewood", "default:junglewood", "" },
		{ "default:junglewood", "default:junglewood", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_fancy_frieze_inward",
	burntime = 0.87451171875
})

minetest.register_node( "eurokit:jungle_wood_side_rail_oblique_corner_counterclockwise", {
	description = "Jungle Wood Side Rail Oblique Corner Counterclockwise",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_counterclockwise,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_side_rail_oblique_corner_counterclockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail_oblique_corner_counterclockwise 2",
	recipe = {
		{ "", "eurokit:jungle_wood_side_rail_oblique", "eurokit:jungle_wood_side_rail_oblique" },
		{ "", "", "eurokit:jungle_wood_side_rail_oblique" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail_oblique 2",
	recipe = {
		{ "eurokit:jungle_wood_side_rail_oblique_corner_counterclockwise", "eurokit:jungle_wood_side_rail_oblique_corner_counterclockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_side_rail_oblique_corner_counterclockwise",
	burntime = 0.6416015625
})

minetest.register_node( "eurokit:jungle_wood_side_rail_oblique_corner_clockwise", {
	description = "Jungle Wood Side Rail Oblique Corner Clockwise",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_clockwise,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_side_rail_oblique_corner_clockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail_oblique_corner_clockwise 2",
	recipe = {
		{ "eurokit:jungle_wood_side_rail_oblique", "eurokit:jungle_wood_side_rail_oblique", "" },
		{ "eurokit:jungle_wood_side_rail_oblique", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail_oblique 2",
	recipe = {
		{ "eurokit:jungle_wood_side_rail_oblique_corner_clockwise", "eurokit:jungle_wood_side_rail_oblique_corner_clockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_side_rail_oblique_corner_clockwise",
	burntime = 0.6416015625
})

minetest.register_node( "eurokit:jungle_wood_side_rail_top_corner", {
	description = "Jungle Wood Side Rail Top Corner",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, corner = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top_corner,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_side_rail_top_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail_top_corner 2",
	recipe = {
		{ "eurokit:jungle_wood_side_rail_top", "eurokit:jungle_wood_side_rail_top", "" },
		{ "eurokit:jungle_wood_side_rail_top", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail_top 2",
	recipe = {
		{ "eurokit:jungle_wood_side_rail_top_corner", "eurokit:jungle_wood_side_rail_top_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_side_rail_top_corner",
	burntime = 0.755859375
})

minetest.register_node( "eurokit:jungle_wood_fancy_frieze", {
	description = "Jungle Wood Fancy Frieze",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_fancy_frieze 99",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "", "default:junglewood", "" },
		{ "default:junglewood", "default:junglewood", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_fancy_frieze",
	burntime = 0.45703125
})

minetest.register_node( "eurokit:jungle_wood_side_rail_corner", {
	description = "Jungle Wood Side Rail Corner",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, corner = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_corner,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_side_rail_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail_corner 3",
	recipe = {
		{ "eurokit:jungle_wood_side_rail", "eurokit:jungle_wood_side_rail", "" },
		{ "eurokit:jungle_wood_side_rail", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail 2",
	recipe = {
		{ "eurokit:jungle_wood_side_rail_corner", "eurokit:jungle_wood_side_rail_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_side_rail_corner",
	burntime = 0.421875
})

minetest.register_node( "eurokit:jungle_wood_side_rail_top", {
	description = "Jungle Wood Side Rail Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, raillingtop = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_side_rail_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail_top 89",
	recipe = {
		{ "default:junglewood", "default:junglewood", "default:junglewood" },
		{ "default:junglewood", "", "default:junglewood" },
		{ "default:junglewood", "", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_side_rail_top",
	burntime = 0.703125
})

minetest.register_node( "eurokit:jungle_wood_side_rail", {
	description = "Jungle Wood Side Rail",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1 },
	tiles = { "default_junglewood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:jungle_wood_side_rail")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:jungle_wood_side_rail 99",
	recipe = {
		{ "default:junglewood", "", "default:junglewood" },
		{ "default:junglewood", "", "default:junglewood" },
		{ "default:junglewood", "", "default:junglewood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:jungle_wood_side_rail",
	burntime = 0.421875
})

minetest.register_node( "eurokit:pine_wood_half_pillar_mid", {
	description = "Pine Wood Half Pillar Mid",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_half_pillar_mid 1",
	recipe = {
		{ "eurokit:pine_wood_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pillar_mid 2",
	recipe = {
		{ "eurokit:pine_wood_half_pillar_mid", "eurokit:pine_wood_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_half_pillar_mid",
	burntime = 1.59375
})

minetest.register_node( "eurokit:pine_wood_pillar_top", {
	description = "Pine Wood Pillar Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pillar_top 12",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "", "default:pine_wood", "" },
		{ "", "default:pine_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 1",
	recipe = {
		{ "eurokit:pine_wood_pillar_top", "eurokit:pine_wood_pillar_top", "eurokit:pine_wood_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_pillar_top",
	burntime = 2.3671875
})

minetest.register_node( "eurokit:pine_wood_counterarch", {
	description = "Pine Wood Counterarch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_counterarch 7",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "", "default:pine_wood", "default:pine_wood" },
		{ "", "", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 3",
	recipe = {
		{ "eurokit:pine_wood_counterarch", "eurokit:pine_wood_counterarch", "" },
		{ "eurokit:pine_wood_counterarch", "eurokit:pine_wood_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_counterarch",
	burntime = 4.6875
})

minetest.register_node( "eurokit:pine_wood_vertical_arrowslit", {
	description = "Pine Wood Vertical Arrowslit",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:pine_wood_arrow_hole", "" },
		{ "", "eurokit:pine_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_vertical_arrowslit",
	burntime = 1.03125
})

minetest.register_node( "eurokit:pine_wood_wall_indentation_2_inward", {
	description = "Pine Wood Wall Indentation 2 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:pine_wood_wall_indentation_2", "" },
		{ "eurokit:pine_wood_wall_indentation_2", "", "eurokit:pine_wood_wall_indentation_2" },
		{ "eurokit:pine_wood_wall_indentation_2", "eurokit:pine_wood_wall_indentation_2", "eurokit:pine_wood_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_wall_indentation_2 4",
	recipe = {
		{ "eurokit:pine_wood_wall_indentation_2_inward", "eurokit:pine_wood_wall_indentation_2_inward", "eurokit:pine_wood_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_wall_indentation_2_inward",
	burntime = 6.76171875
})

minetest.register_node( "eurokit:pine_wood_half_pillar_base", {
	description = "Pine Wood Half Pillar Base",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_half_pillar_base 1",
	recipe = {
		{ "eurokit:pine_wood_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pillar_base 1",
	recipe = {
		{ "eurokit:pine_wood_half_pillar_base", "eurokit:pine_wood_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_half_pillar_base",
	burntime = 1.62890625
})

minetest.register_node( "eurokit:pine_wood_small_pointed_arch", {
	description = "Pine Wood Small Pointed Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_small_pointed_arch 9",
	recipe = {
		{ "eurokit:pine_wood_slope", "eurokit:pine_wood_slope", "eurokit:pine_wood_slope" },
		{ "eurokit:pine_wood_slope", "", "eurokit:pine_wood_slope" },
		{ "eurokit:pine_wood_slope", "", "eurokit:pine_wood_slope" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_small_pointed_arch",
	burntime = 2.34375
})

minetest.register_node( "eurokit:pine_wood_pointed_arch_2", {
	description = "Pine Wood Pointed Arch 2",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pointed_arch_2 3",
	recipe = {
		{ "eurokit:pine_wood_slope", "eurokit:pine_wood_slope", "" },
		{ "eurokit:pine_wood_slope", "eurokit:pine_wood_slope", "" },
		{ "eurokit:pine_wood_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_slope 5",
	recipe = {
		{ "eurokit:pine_wood_pointed_arch_2", "eurokit:pine_wood_pointed_arch_2", "" },
		{ "eurokit:pine_wood_pointed_arch_2", "eurokit:pine_wood_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_pointed_arch_2",
	burntime = 4.0546875
})

minetest.register_node( "eurokit:pine_wood_machicolation", {
	description = "Pine Wood Machicolation",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, machicolation = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_machicolation 18",
	recipe = {
		{ "default:pine_wood", "", "default:pine_wood" },
		{ "default:pine_wood", "", "default:pine_wood" },
		{ "default:pine_wood", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_machicolation",
	burntime = 1.60546875
})

minetest.register_node( "eurokit:pine_wood_pointed_arch_1_outward", {
	description = "Pine Wood Pointed Arch 1 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:pine_wood_pointed_arch_1", "" },
		{ "eurokit:pine_wood_pointed_arch_1", "eurokit:pine_wood_pointed_arch_1", "eurokit:pine_wood_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pointed_arch_1 1",
	recipe = {
		{ "eurokit:pine_wood_pointed_arch_1_outward", "eurokit:pine_wood_pointed_arch_1_outward", "eurokit:pine_wood_pointed_arch_1_outward" },
		{ "eurokit:pine_wood_pointed_arch_1_outward", "eurokit:pine_wood_pointed_arch_1_outward", "eurokit:pine_wood_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_pointed_arch_1_outward",
	burntime = 0.234375
})

minetest.register_node( "eurokit:pine_wood_arrowslit_end_top", {
	description = "Pine Wood Arrowslit End Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:pine_wood_arrow_hole", "eurokit:pine_wood_arrow_hole", "eurokit:pine_wood_arrow_hole" },
		{ "", "eurokit:pine_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_arrowslit_end_top",
	burntime = 0.9521484375
})

minetest.register_node( "eurokit:pine_wood_arrowslit_end_bottom", {
	description = "Pine Wood Arrowslit End Bottom",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:pine_wood_arrow_hole", "" },
		{ "eurokit:pine_wood_arrow_hole", "eurokit:pine_wood_arrow_hole", "eurokit:pine_wood_arrow_hole" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_arrowslit_end_bottom",
	burntime = 0.9521484375
})

minetest.register_node( "eurokit:pine_wood_wall_indentation_2_outward", {
	description = "Pine Wood Wall Indentation 2 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:pine_wood_wall_indentation_2", "" },
		{ "eurokit:pine_wood_wall_indentation_2", "eurokit:pine_wood_wall_indentation_2", "eurokit:pine_wood_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_wall_indentation_2 3",
	recipe = {
		{ "eurokit:pine_wood_wall_indentation_2_outward", "eurokit:pine_wood_wall_indentation_2_outward", "" },
		{ "eurokit:pine_wood_wall_indentation_2_outward", "eurokit:pine_wood_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_wall_indentation_2_outward",
	burntime = 3.78515625
})

minetest.register_node( "eurokit:pine_wood_pillar_mid", {
	description = "Pine Wood Pillar Mid",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pillar_mid 14",
	recipe = {
		{ "", "default:pine_wood", "" },
		{ "", "default:pine_wood", "" },
		{ "", "default:pine_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 1",
	recipe = {
		{ "eurokit:pine_wood_pillar_mid", "eurokit:pine_wood_pillar_mid", "eurokit:pine_wood_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_pillar_mid",
	burntime = 1.21875
})

minetest.register_node( "eurokit:pine_wood_arrowslit_end_left", {
	description = "Pine Wood Arrowslit End Left",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:pine_wood_arrow_hole", "", "" },
		{ "eurokit:pine_wood_arrow_hole", "eurokit:pine_wood_arrow_hole", "" },
		{ "eurokit:pine_wood_arrow_hole", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_arrowslit_end_left",
	burntime = 0.9271875
})

minetest.register_node( "eurokit:pine_wood_wall_indentation_2", {
	description = "Pine Wood Wall Indentation 2",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_wall_indentation_2 2",
	recipe = {
		{ "eurokit:pine_wood_slope", "", "" },
		{ "eurokit:pine_wood_slope", "eurokit:pine_wood_slope", "eurokit:pine_wood_slope" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_wall_indentation_2",
	burntime = 4.6875
})

minetest.register_node( "eurokit:pine_wood_arch_inward", {
	description = "Pine Wood Arch Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, inward = 1, arch = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_arch_inward 13",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "default:pine_wood", "", "default:pine_wood" },
		{ "", "default:pine_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 1",
	recipe = {
		{ "eurokit:pine_wood_arch_inward", "eurokit:pine_wood_arch_inward", "eurokit:pine_wood_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_arch_inward",
	burntime = 2.74072265625
})

minetest.register_node( "eurokit:pine_wood_small_arch", {
	description = "Pine Wood Small Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:pine_wood", "" },
		{ "default:pine_wood", "", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 2",
	recipe = {
		{ "eurokit:pine_wood_small_arch", "eurokit:pine_wood_small_arch", "" },
		{ "eurokit:pine_wood_small_arch", "eurokit:pine_wood_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_small_arch",
	burntime = 4.03125
})

minetest.register_node( "eurokit:pine_wood_thin_wall", {
	description = "Pine Wood Thin Wall",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_thin_wall 24",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "" },
		{ "default:pine_wood", "default:pine_wood", "" },
		{ "default:pine_wood", "default:pine_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:pine_wood_thin_wall", "eurokit:pine_wood_thin_wall", "eurokit:pine_wood_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_thin_wall",
	burntime = 1.5
})

minetest.register_node( "eurokit:pine_wood_counterarch_inward", {
	description = "Pine Wood Counterarch Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_counterarch_inward 3",
	recipe = {
		{ "", "default:pine_wood", "default:pine_wood" },
		{ "", "", "default:pine_wood" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 2",
	recipe = {
		{ "eurokit:pine_wood_counterarch_inward", "", "" },
		{ "eurokit:pine_wood_counterarch_inward", "eurokit:pine_wood_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_counterarch_inward",
	burntime = 5.42578125
})

minetest.register_node( "eurokit:pine_wood_small_counterarch", {
	description = "Pine Wood Small Counterarch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_small_counterarch 17",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "", "default:pine_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 1",
	recipe = {
		{ "eurokit:pine_wood_small_counterarch", "eurokit:pine_wood_small_counterarch", "" },
		{ "eurokit:pine_wood_small_counterarch", "eurokit:pine_wood_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_small_counterarch",
	burntime = 2.4375
})

minetest.register_node( "eurokit:pine_wood_horizontal_arrowslit", {
	description = "Pine Wood Horizontal Arrowslit",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:pine_wood_arrow_hole", "eurokit:pine_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_horizontal_arrowslit",
	burntime = 1.03125
})

minetest.register_node( "eurokit:pine_wood_arch_outward", {
	description = "Pine Wood Arch Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, outward = 1, arch = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_arch_outward 22",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "", "default:pine_wood", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 1",
	recipe = {
		{ "eurokit:pine_wood_arch_outward", "", "" },
		{ "eurokit:pine_wood_arch_outward", "eurokit:pine_wood_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_arch_outward",
	burntime = 1.05615234375
})

minetest.register_node( "eurokit:pine_wood_arch", {
	description = "Pine Wood Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_arch 18",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "default:pine_wood", "default:pine_wood", "" },
		{ "default:pine_wood", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 1",
	recipe = {
		{ "eurokit:pine_wood_arch", "eurokit:pine_wood_arch", "" },
		{ "eurokit:pine_wood_arch", "eurokit:pine_wood_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_arch",
	burntime = 1.8984375
})

minetest.register_node( "eurokit:pine_wood_half_pillar_top", {
	description = "Pine Wood Half Pillar Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_half_pillar_top 1",
	recipe = {
		{ "eurokit:pine_wood_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pillar_top 1",
	recipe = {
		{ "eurokit:pine_wood_half_pillar_top", "eurokit:pine_wood_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_half_pillar_top",
	burntime = 1.62890625
})

minetest.register_node( "eurokit:pine_wood_pointed_arch_2_inward", {
	description = "Pine Wood Pointed Arch 2 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:pine_wood_pointed_arch_2", "" },
		{ "eurokit:pine_wood_pointed_arch_2", "", "eurokit:pine_wood_pointed_arch_2" },
		{ "eurokit:pine_wood_pointed_arch_2", "eurokit:pine_wood_pointed_arch_2", "eurokit:pine_wood_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pointed_arch_2 6",
	recipe = {
		{ "eurokit:pine_wood_pointed_arch_2_inward", "eurokit:pine_wood_pointed_arch_2_inward", "" },
		{ "eurokit:pine_wood_pointed_arch_2_inward", "eurokit:pine_wood_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_pointed_arch_2_inward",
	burntime = 7.02685546875
})

minetest.register_node( "eurokit:pine_wood_pointed_arch_2_outward", {
	description = "Pine Wood Pointed Arch 2 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:pine_wood_pointed_arch_2", "" },
		{ "eurokit:pine_wood_pointed_arch_2", "eurokit:pine_wood_pointed_arch_2", "eurokit:pine_wood_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pointed_arch_2 3",
	recipe = {
		{ "eurokit:pine_wood_pointed_arch_2_outward", "eurokit:pine_wood_pointed_arch_2_outward", "eurokit:pine_wood_pointed_arch_2_outward" },
		{ "eurokit:pine_wood_pointed_arch_2_outward", "eurokit:pine_wood_pointed_arch_2_outward", "eurokit:pine_wood_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_pointed_arch_2_outward",
	burntime = 2.54150390625
})

minetest.register_node( "eurokit:pine_wood_wall_indentation_1_outward", {
	description = "Pine Wood Wall Indentation 1 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:pine_wood_wall_indentation_1", "" },
		{ "eurokit:pine_wood_wall_indentation_1", "eurokit:pine_wood_wall_indentation_1", "eurokit:pine_wood_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_wall_indentation_1 1",
	recipe = {
		{ "eurokit:pine_wood_wall_indentation_1_outward", "eurokit:pine_wood_wall_indentation_1_outward", "" },
		{ "eurokit:pine_wood_wall_indentation_1_outward", "eurokit:pine_wood_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_wall_indentation_1_outward",
	burntime = 0.59765625
})

minetest.register_node( "eurokit:pine_wood_wall_indentation_1_inward", {
	description = "Pine Wood Wall Indentation 1 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:pine_wood_wall_indentation_1", "" },
		{ "eurokit:pine_wood_wall_indentation_1", "", "eurokit:pine_wood_wall_indentation_1" },
		{ "eurokit:pine_wood_wall_indentation_1", "eurokit:pine_wood_wall_indentation_1", "eurokit:pine_wood_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_wall_indentation_1 5",
	recipe = {
		{ "eurokit:pine_wood_wall_indentation_1_inward", "eurokit:pine_wood_wall_indentation_1_inward", "eurokit:pine_wood_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_wall_indentation_1_inward",
	burntime = 2.96484375
})

minetest.register_node( "eurokit:pine_wood_pointed_arch_1", {
	description = "Pine Wood Pointed Arch 1",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pointed_arch_1 11",
	recipe = {
		{ "eurokit:pine_wood_slope", "eurokit:pine_wood_slope", "" },
		{ "eurokit:pine_wood_slope", "", "" },
		{ "eurokit:pine_wood_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_slope 2",
	recipe = {
		{ "eurokit:pine_wood_pointed_arch_1", "eurokit:pine_wood_pointed_arch_1", "eurokit:pine_wood_pointed_arch_1" },
		{ "eurokit:pine_wood_pointed_arch_1", "eurokit:pine_wood_pointed_arch_1", "eurokit:pine_wood_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_pointed_arch_1",
	burntime = 1.078125
})

minetest.register_node( "eurokit:pine_wood_small_straight_arch", {
	description = "Pine Wood Small Straight Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_small_straight_arch 8",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "default:pine_wood", "", "default:pine_wood" },
		{ "default:pine_wood", "", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_small_straight_arch",
	burntime = 4.6875
})

minetest.register_node( "eurokit:pine_wood_arrow_hole", {
	description = "Pine Wood Arrow Hole",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_arrow_hole 21",
	recipe = {
		{ "", "default:pine_wood", "" },
		{ "default:pine_wood", "", "default:pine_wood" },
		{ "", "default:pine_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 1",
	recipe = {
		{ "eurokit:pine_wood_arrow_hole", "eurokit:pine_wood_arrow_hole", "" },
		{ "eurokit:pine_wood_arrow_hole", "eurokit:pine_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_arrow_hole",
	burntime = 1.13671875
})

minetest.register_node( "eurokit:pine_wood_pointed_arch_1_inward", {
	description = "Pine Wood Pointed Arch 1 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:pine_wood_pointed_arch_1", "" },
		{ "eurokit:pine_wood_pointed_arch_1", "", "eurokit:pine_wood_pointed_arch_1" },
		{ "eurokit:pine_wood_pointed_arch_1", "eurokit:pine_wood_pointed_arch_1", "eurokit:pine_wood_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pointed_arch_1 7",
	recipe = {
		{ "eurokit:pine_wood_pointed_arch_1_inward", "eurokit:pine_wood_pointed_arch_1_inward", "" },
		{ "eurokit:pine_wood_pointed_arch_1_inward", "eurokit:pine_wood_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_pointed_arch_1_inward",
	burntime = 2.00537109375
})

minetest.register_node( "eurokit:pine_wood_wall_indentation_1", {
	description = "Pine Wood Wall Indentation 1",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_wall_indentation_1 7",
	recipe = {
		{ "eurokit:pine_wood_slope", "eurokit:pine_wood_slope", "" },
		{ "eurokit:pine_wood_slope", "", "eurokit:pine_wood_slope" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_wall_indentation_1",
	burntime = 1.6875
})

minetest.register_node( "eurokit:pine_wood_counterarch_outward", {
	description = "Pine Wood Counterarch Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_counterarch_outward 6",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "", "", "default:pine_wood" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 1",
	recipe = {
		{ "eurokit:pine_wood_counterarch_outward", "eurokit:pine_wood_counterarch_outward", "eurokit:pine_wood_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_counterarch_outward",
	burntime = 3.94921875
})

minetest.register_node( "eurokit:pine_wood_arrowslit_end_right", {
	description = "Pine Wood Arrowslit End Right",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:pine_wood_arrow_hole" },
		{ "", "eurokit:pine_wood_arrow_hole", "eurokit:pine_wood_arrow_hole" },
		{ "", "", "eurokit:pine_wood_arrow_hole" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_arrowslit_end_right",
	burntime = 0.9375
})

minetest.register_node( "eurokit:pine_wood_pillar_base", {
	description = "Pine Wood Pillar Base",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_pillar_base 7",
	recipe = {
		{ "", "default:pine_wood", "" },
		{ "", "default:pine_wood", "" },
		{ "", "default:pine_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:pine_wood 1",
	recipe = {
		{ "eurokit:pine_wood_pillar_base", "eurokit:pine_wood_pillar_base", "eurokit:pine_wood_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_pillar_base",
	burntime = 2.3671875
})

minetest.register_node( "eurokit:pine_wood_frieze_outward", {
	description = "Pine Wood Frieze Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_frieze_outward 99",
	recipe = {
		{ "", "", "default:pine_wood" },
		{ "", "", "" },
		{ "", "", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_frieze_outward",
	burntime = 0.0263671875
})

minetest.register_node( "eurokit:pine_wood_frieze", {
	description = "Pine Wood Frieze",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_frieze 99",
	recipe = {
		{ "", "default:pine_wood", "default:pine_wood" },
		{ "", "", "" },
		{ "", "default:pine_wood", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_frieze",
	burntime = 0.234375
})

minetest.register_node( "eurokit:pine_wood_fancy_frieze_outward", {
	description = "Pine Wood Fancy Frieze Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, outward = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_fancy_frieze_outward 99",
	recipe = {
		{ "", "default:pine_wood", "default:pine_wood" },
		{ "", "", "default:pine_wood" },
		{ "", "default:pine_wood", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_fancy_frieze_outward",
	burntime = 0.02806640625
})

minetest.register_node( "eurokit:pine_wood_side_rail_oblique", {
	description = "Pine Wood Side Rail Oblique",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_side_rail_oblique")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail_oblique 93",
	recipe = {
		{ "default:pine_wood", "", "" },
		{ "default:pine_wood", "default:pine_wood", "" },
		{ "default:pine_wood", "", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_side_rail_oblique",
	burntime = 0.322078125
})

minetest.register_node( "eurokit:pine_wood_frieze_inward", {
	description = "Pine Wood Frieze Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, inward = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_frieze_inward 81",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "", "", "" },
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_frieze_inward",
	burntime = 0.4423828125
})

minetest.register_node( "eurokit:pine_wood_fancy_frieze_inward", {
	description = "Pine Wood Fancy Frieze Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, inward = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_fancy_frieze_inward 82",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "default:pine_wood", "default:pine_wood", "" },
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_fancy_frieze_inward",
	burntime = 0.5830078125
})

minetest.register_node( "eurokit:pine_wood_side_rail_oblique_corner_counterclockwise", {
	description = "Pine Wood Side Rail Oblique Corner Counterclockwise",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_counterclockwise,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_side_rail_oblique_corner_counterclockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail_oblique_corner_counterclockwise 2",
	recipe = {
		{ "", "eurokit:pine_wood_side_rail_oblique", "eurokit:pine_wood_side_rail_oblique" },
		{ "", "", "eurokit:pine_wood_side_rail_oblique" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail_oblique 2",
	recipe = {
		{ "eurokit:pine_wood_side_rail_oblique_corner_counterclockwise", "eurokit:pine_wood_side_rail_oblique_corner_counterclockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_side_rail_oblique_corner_counterclockwise",
	burntime = 0.427734375
})

minetest.register_node( "eurokit:pine_wood_side_rail_oblique_corner_clockwise", {
	description = "Pine Wood Side Rail Oblique Corner Clockwise",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_clockwise,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_side_rail_oblique_corner_clockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail_oblique_corner_clockwise 2",
	recipe = {
		{ "eurokit:pine_wood_side_rail_oblique", "eurokit:pine_wood_side_rail_oblique", "" },
		{ "eurokit:pine_wood_side_rail_oblique", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail_oblique 2",
	recipe = {
		{ "eurokit:pine_wood_side_rail_oblique_corner_clockwise", "eurokit:pine_wood_side_rail_oblique_corner_clockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_side_rail_oblique_corner_clockwise",
	burntime = 0.427734375
})

minetest.register_node( "eurokit:pine_wood_side_rail_top_corner", {
	description = "Pine Wood Side Rail Top Corner",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, corner = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top_corner,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_side_rail_top_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail_top_corner 2",
	recipe = {
		{ "eurokit:pine_wood_side_rail_top", "eurokit:pine_wood_side_rail_top", "" },
		{ "eurokit:pine_wood_side_rail_top", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail_top 2",
	recipe = {
		{ "eurokit:pine_wood_side_rail_top_corner", "eurokit:pine_wood_side_rail_top_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_side_rail_top_corner",
	burntime = 0.50390625
})

minetest.register_node( "eurokit:pine_wood_fancy_frieze", {
	description = "Pine Wood Fancy Frieze",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_fancy_frieze 99",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "", "default:pine_wood", "" },
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_fancy_frieze",
	burntime = 0.3046875
})

minetest.register_node( "eurokit:pine_wood_side_rail_corner", {
	description = "Pine Wood Side Rail Corner",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, corner = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_corner,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_side_rail_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail_corner 3",
	recipe = {
		{ "eurokit:pine_wood_side_rail", "eurokit:pine_wood_side_rail", "" },
		{ "eurokit:pine_wood_side_rail", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail 2",
	recipe = {
		{ "eurokit:pine_wood_side_rail_corner", "eurokit:pine_wood_side_rail_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_side_rail_corner",
	burntime = 0.28125
})

minetest.register_node( "eurokit:pine_wood_side_rail_top", {
	description = "Pine Wood Side Rail Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, raillingtop = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_side_rail_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail_top 89",
	recipe = {
		{ "default:pine_wood", "default:pine_wood", "default:pine_wood" },
		{ "default:pine_wood", "", "default:pine_wood" },
		{ "default:pine_wood", "", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_side_rail_top",
	burntime = 0.46875
})

minetest.register_node( "eurokit:pine_wood_side_rail", {
	description = "Pine Wood Side Rail",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1 },
	tiles = { "default_pine_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:pine_wood_side_rail")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:pine_wood_side_rail 99",
	recipe = {
		{ "default:pine_wood", "", "default:pine_wood" },
		{ "default:pine_wood", "", "default:pine_wood" },
		{ "default:pine_wood", "", "default:pine_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:pine_wood_side_rail",
	burntime = 0.28125
})

minetest.register_node( "eurokit:obsidian_block_half_pillar_mid", {
	description = "Obsidian Block Half Pillar Mid",
	groups = { cracky = 1, pillar = 1, half_pillar = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_half_pillar_mid 1",
	recipe = {
		{ "eurokit:obsidian_block_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pillar_mid 2",
	recipe = {
		{ "eurokit:obsidian_block_half_pillar_mid", "eurokit:obsidian_block_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_pillar_top", {
	description = "Obsidian Block Pillar Top",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pillar_top 12",
	recipe = {
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" },
		{ "", "default:obsidian_block", "" },
		{ "", "default:obsidian_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "eurokit:obsidian_block_pillar_top", "eurokit:obsidian_block_pillar_top", "eurokit:obsidian_block_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_counterarch", {
	description = "Obsidian Block Counterarch",
	groups = { cracky = 1, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_counterarch 7",
	recipe = {
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" },
		{ "", "default:obsidian_block", "default:obsidian_block" },
		{ "", "", "default:obsidian_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 3",
	recipe = {
		{ "eurokit:obsidian_block_counterarch", "eurokit:obsidian_block_counterarch", "" },
		{ "eurokit:obsidian_block_counterarch", "eurokit:obsidian_block_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_vertical_arrowslit", {
	description = "Obsidian Block Vertical Arrowslit",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:obsidian_block_arrow_hole", "" },
		{ "", "eurokit:obsidian_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_wall_indentation_2_inward", {
	description = "Obsidian Block Wall Indentation 2 Inward",
	groups = { cracky = 1, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:obsidian_block_wall_indentation_2", "" },
		{ "eurokit:obsidian_block_wall_indentation_2", "", "eurokit:obsidian_block_wall_indentation_2" },
		{ "eurokit:obsidian_block_wall_indentation_2", "eurokit:obsidian_block_wall_indentation_2", "eurokit:obsidian_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_wall_indentation_2 4",
	recipe = {
		{ "eurokit:obsidian_block_wall_indentation_2_inward", "eurokit:obsidian_block_wall_indentation_2_inward", "eurokit:obsidian_block_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_half_pillar_base", {
	description = "Obsidian Block Half Pillar Base",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_half_pillar_base 1",
	recipe = {
		{ "eurokit:obsidian_block_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pillar_base 1",
	recipe = {
		{ "eurokit:obsidian_block_half_pillar_base", "eurokit:obsidian_block_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_small_pointed_arch", {
	description = "Obsidian Block Small Pointed Arch",
	groups = { cracky = 1, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_small_pointed_arch 9",
	recipe = {
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope" },
		{ "eurokit:obsidian_block_slope", "", "eurokit:obsidian_block_slope" },
		{ "eurokit:obsidian_block_slope", "", "eurokit:obsidian_block_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_block_pointed_arch_2", {
	description = "Obsidian Block Pointed Arch 2",
	groups = { cracky = 1, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "" },
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "" },
		{ "eurokit:obsidian_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_slope 5",
	recipe = {
		{ "eurokit:obsidian_block_pointed_arch_2", "eurokit:obsidian_block_pointed_arch_2", "" },
		{ "eurokit:obsidian_block_pointed_arch_2", "eurokit:obsidian_block_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_machicolation", {
	description = "Obsidian Block Machicolation",
	groups = { cracky = 1, machicolation = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_machicolation 18",
	recipe = {
		{ "default:obsidian_block", "", "default:obsidian_block" },
		{ "default:obsidian_block", "", "default:obsidian_block" },
		{ "default:obsidian_block", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_pointed_arch_1_outward", {
	description = "Obsidian Block Pointed Arch 1 Outward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_block_pointed_arch_1", "" },
		{ "eurokit:obsidian_block_pointed_arch_1", "eurokit:obsidian_block_pointed_arch_1", "eurokit:obsidian_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pointed_arch_1 1",
	recipe = {
		{ "eurokit:obsidian_block_pointed_arch_1_outward", "eurokit:obsidian_block_pointed_arch_1_outward", "eurokit:obsidian_block_pointed_arch_1_outward" },
		{ "eurokit:obsidian_block_pointed_arch_1_outward", "eurokit:obsidian_block_pointed_arch_1_outward", "eurokit:obsidian_block_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_arrowslit_end_top", {
	description = "Obsidian Block Arrowslit End Top",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:obsidian_block_arrow_hole", "eurokit:obsidian_block_arrow_hole", "eurokit:obsidian_block_arrow_hole" },
		{ "", "eurokit:obsidian_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_arrowslit_end_bottom", {
	description = "Obsidian Block Arrowslit End Bottom",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_block_arrow_hole", "" },
		{ "eurokit:obsidian_block_arrow_hole", "eurokit:obsidian_block_arrow_hole", "eurokit:obsidian_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:obsidian_block_wall_indentation_2_outward", {
	description = "Obsidian Block Wall Indentation 2 Outward",
	groups = { cracky = 1, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_block_wall_indentation_2", "" },
		{ "eurokit:obsidian_block_wall_indentation_2", "eurokit:obsidian_block_wall_indentation_2", "eurokit:obsidian_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_wall_indentation_2 3",
	recipe = {
		{ "eurokit:obsidian_block_wall_indentation_2_outward", "eurokit:obsidian_block_wall_indentation_2_outward", "" },
		{ "eurokit:obsidian_block_wall_indentation_2_outward", "eurokit:obsidian_block_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_pillar_mid", {
	description = "Obsidian Block Pillar Mid",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pillar_mid 14",
	recipe = {
		{ "", "default:obsidian_block", "" },
		{ "", "default:obsidian_block", "" },
		{ "", "default:obsidian_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "eurokit:obsidian_block_pillar_mid", "eurokit:obsidian_block_pillar_mid", "eurokit:obsidian_block_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_arrowslit_end_left", {
	description = "Obsidian Block Arrowslit End Left",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:obsidian_block_arrow_hole", "", "" },
		{ "eurokit:obsidian_block_arrow_hole", "eurokit:obsidian_block_arrow_hole", "" },
		{ "eurokit:obsidian_block_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_wall_indentation_2", {
	description = "Obsidian Block Wall Indentation 2",
	groups = { cracky = 1, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_wall_indentation_2 2",
	recipe = {
		{ "eurokit:obsidian_block_slope", "", "" },
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_arch_inward", {
	description = "Obsidian Block Arch Inward",
	groups = { cracky = 1, inward = 1, arch = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_arch_inward 13",
	recipe = {
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" },
		{ "default:obsidian_block", "", "default:obsidian_block" },
		{ "", "default:obsidian_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "eurokit:obsidian_block_arch_inward", "eurokit:obsidian_block_arch_inward", "eurokit:obsidian_block_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_small_arch", {
	description = "Obsidian Block Small Arch",
	groups = { cracky = 1, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:obsidian_block", "" },
		{ "default:obsidian_block", "", "default:obsidian_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 2",
	recipe = {
		{ "eurokit:obsidian_block_small_arch", "eurokit:obsidian_block_small_arch", "" },
		{ "eurokit:obsidian_block_small_arch", "eurokit:obsidian_block_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_thin_wall", {
	description = "Obsidian Block Thin Wall",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_thin_wall 24",
	recipe = {
		{ "default:obsidian_block", "default:obsidian_block", "" },
		{ "default:obsidian_block", "default:obsidian_block", "" },
		{ "default:obsidian_block", "default:obsidian_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:obsidian_block_thin_wall", "eurokit:obsidian_block_thin_wall", "eurokit:obsidian_block_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_counterarch_inward", {
	description = "Obsidian Block Counterarch Inward",
	groups = { cracky = 1, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_counterarch_inward 3",
	recipe = {
		{ "", "default:obsidian_block", "default:obsidian_block" },
		{ "", "", "default:obsidian_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 2",
	recipe = {
		{ "eurokit:obsidian_block_counterarch_inward", "", "" },
		{ "eurokit:obsidian_block_counterarch_inward", "eurokit:obsidian_block_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_small_counterarch", {
	description = "Obsidian Block Small Counterarch",
	groups = { cracky = 1, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_small_counterarch 17",
	recipe = {
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" },
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" },
		{ "", "default:obsidian_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "eurokit:obsidian_block_small_counterarch", "eurokit:obsidian_block_small_counterarch", "" },
		{ "eurokit:obsidian_block_small_counterarch", "eurokit:obsidian_block_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_horizontal_arrowslit", {
	description = "Obsidian Block Horizontal Arrowslit",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:obsidian_block_arrow_hole", "eurokit:obsidian_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_arch_outward", {
	description = "Obsidian Block Arch Outward",
	groups = { cracky = 1, outward = 1, arch = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_arch_outward 22",
	recipe = {
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" },
		{ "", "default:obsidian_block", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "eurokit:obsidian_block_arch_outward", "", "" },
		{ "eurokit:obsidian_block_arch_outward", "eurokit:obsidian_block_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_arch", {
	description = "Obsidian Block Arch",
	groups = { cracky = 1, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_arch 18",
	recipe = {
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" },
		{ "default:obsidian_block", "default:obsidian_block", "" },
		{ "default:obsidian_block", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "eurokit:obsidian_block_arch", "eurokit:obsidian_block_arch", "" },
		{ "eurokit:obsidian_block_arch", "eurokit:obsidian_block_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_half_pillar_top", {
	description = "Obsidian Block Half Pillar Top",
	groups = { cracky = 1, pillar = 1, half_pillar = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_half_pillar_top 1",
	recipe = {
		{ "eurokit:obsidian_block_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pillar_top 1",
	recipe = {
		{ "eurokit:obsidian_block_half_pillar_top", "eurokit:obsidian_block_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_pointed_arch_2_inward", {
	description = "Obsidian Block Pointed Arch 2 Inward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:obsidian_block_pointed_arch_2", "" },
		{ "eurokit:obsidian_block_pointed_arch_2", "", "eurokit:obsidian_block_pointed_arch_2" },
		{ "eurokit:obsidian_block_pointed_arch_2", "eurokit:obsidian_block_pointed_arch_2", "eurokit:obsidian_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pointed_arch_2 6",
	recipe = {
		{ "eurokit:obsidian_block_pointed_arch_2_inward", "eurokit:obsidian_block_pointed_arch_2_inward", "" },
		{ "eurokit:obsidian_block_pointed_arch_2_inward", "eurokit:obsidian_block_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_pointed_arch_2_outward", {
	description = "Obsidian Block Pointed Arch 2 Outward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_block_pointed_arch_2", "" },
		{ "eurokit:obsidian_block_pointed_arch_2", "eurokit:obsidian_block_pointed_arch_2", "eurokit:obsidian_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:obsidian_block_pointed_arch_2_outward", "eurokit:obsidian_block_pointed_arch_2_outward", "eurokit:obsidian_block_pointed_arch_2_outward" },
		{ "eurokit:obsidian_block_pointed_arch_2_outward", "eurokit:obsidian_block_pointed_arch_2_outward", "eurokit:obsidian_block_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_wall_indentation_1_outward", {
	description = "Obsidian Block Wall Indentation 1 Outward",
	groups = { cracky = 1, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_block_wall_indentation_1", "" },
		{ "eurokit:obsidian_block_wall_indentation_1", "eurokit:obsidian_block_wall_indentation_1", "eurokit:obsidian_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_wall_indentation_1 1",
	recipe = {
		{ "eurokit:obsidian_block_wall_indentation_1_outward", "eurokit:obsidian_block_wall_indentation_1_outward", "" },
		{ "eurokit:obsidian_block_wall_indentation_1_outward", "eurokit:obsidian_block_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_wall_indentation_1_inward", {
	description = "Obsidian Block Wall Indentation 1 Inward",
	groups = { cracky = 1, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:obsidian_block_wall_indentation_1", "" },
		{ "eurokit:obsidian_block_wall_indentation_1", "", "eurokit:obsidian_block_wall_indentation_1" },
		{ "eurokit:obsidian_block_wall_indentation_1", "eurokit:obsidian_block_wall_indentation_1", "eurokit:obsidian_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_wall_indentation_1 5",
	recipe = {
		{ "eurokit:obsidian_block_wall_indentation_1_inward", "eurokit:obsidian_block_wall_indentation_1_inward", "eurokit:obsidian_block_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_pointed_arch_1", {
	description = "Obsidian Block Pointed Arch 1",
	groups = { cracky = 1, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pointed_arch_1 11",
	recipe = {
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "" },
		{ "eurokit:obsidian_block_slope", "", "" },
		{ "eurokit:obsidian_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_slope 2",
	recipe = {
		{ "eurokit:obsidian_block_pointed_arch_1", "eurokit:obsidian_block_pointed_arch_1", "eurokit:obsidian_block_pointed_arch_1" },
		{ "eurokit:obsidian_block_pointed_arch_1", "eurokit:obsidian_block_pointed_arch_1", "eurokit:obsidian_block_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_small_straight_arch", {
	description = "Obsidian Block Small Straight Arch",
	groups = { cracky = 1, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_small_straight_arch 8",
	recipe = {
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" },
		{ "default:obsidian_block", "", "default:obsidian_block" },
		{ "default:obsidian_block", "", "default:obsidian_block" }
	}
})

minetest.register_node( "eurokit:obsidian_block_arrow_hole", {
	description = "Obsidian Block Arrow Hole",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_arrow_hole 21",
	recipe = {
		{ "", "default:obsidian_block", "" },
		{ "default:obsidian_block", "", "default:obsidian_block" },
		{ "", "default:obsidian_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "eurokit:obsidian_block_arrow_hole", "eurokit:obsidian_block_arrow_hole", "" },
		{ "eurokit:obsidian_block_arrow_hole", "eurokit:obsidian_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_pointed_arch_1_inward", {
	description = "Obsidian Block Pointed Arch 1 Inward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:obsidian_block_pointed_arch_1", "" },
		{ "eurokit:obsidian_block_pointed_arch_1", "", "eurokit:obsidian_block_pointed_arch_1" },
		{ "eurokit:obsidian_block_pointed_arch_1", "eurokit:obsidian_block_pointed_arch_1", "eurokit:obsidian_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pointed_arch_1 7",
	recipe = {
		{ "eurokit:obsidian_block_pointed_arch_1_inward", "eurokit:obsidian_block_pointed_arch_1_inward", "" },
		{ "eurokit:obsidian_block_pointed_arch_1_inward", "eurokit:obsidian_block_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_wall_indentation_1", {
	description = "Obsidian Block Wall Indentation 1",
	groups = { cracky = 1, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_wall_indentation_1 7",
	recipe = {
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "" },
		{ "eurokit:obsidian_block_slope", "", "eurokit:obsidian_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_counterarch_outward", {
	description = "Obsidian Block Counterarch Outward",
	groups = { cracky = 1, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_counterarch_outward 6",
	recipe = {
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" },
		{ "", "", "default:obsidian_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "eurokit:obsidian_block_counterarch_outward", "eurokit:obsidian_block_counterarch_outward", "eurokit:obsidian_block_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_arrowslit_end_right", {
	description = "Obsidian Block Arrowslit End Right",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_block_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:obsidian_block_arrow_hole" },
		{ "", "eurokit:obsidian_block_arrow_hole", "eurokit:obsidian_block_arrow_hole" },
		{ "", "", "eurokit:obsidian_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:obsidian_block_pillar_base", {
	description = "Obsidian Block Pillar Base",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_pillar_base 7",
	recipe = {
		{ "", "default:obsidian_block", "" },
		{ "", "default:obsidian_block", "" },
		{ "", "default:obsidian_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "eurokit:obsidian_block_pillar_base", "eurokit:obsidian_block_pillar_base", "eurokit:obsidian_block_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_long_slope_2_outward", {
	description = "Obsidian Block Long Slope 2 Outward",
	groups = { cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_block_long_slope_2", "" },
		{ "eurokit:obsidian_block_long_slope_2", "eurokit:obsidian_block_long_slope_2", "eurokit:obsidian_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:obsidian_block_slope_outward", {
	description = "Obsidian Block Slope Outward",
	groups = { cracky = 1, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:obsidian_block" },
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 1",
	recipe = {
		{ "eurokit:obsidian_block_slope_outward", "eurokit:obsidian_block_slope_outward", "eurokit:obsidian_block_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_long_slope_2", {
	description = "Obsidian Block Long Slope 2",
	groups = { cracky = 1, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_block_slope", "" },
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_block_long_slope_1_outward", {
	description = "Obsidian Block Long Slope 1 Outward",
	groups = { cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_block_long_slope_1", "" },
		{ "eurokit:obsidian_block_long_slope_1", "eurokit:obsidian_block_long_slope_1", "eurokit:obsidian_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:obsidian_block_long_slope_3_inward", {
	description = "Obsidian Block Long Slope 3 Inward",
	groups = { cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:obsidian_block_long_slope_3", "" },
		{ "eurokit:obsidian_block_long_slope_3", "", "eurokit:obsidian_block_long_slope_3" },
		{ "eurokit:obsidian_block_long_slope_3", "eurokit:obsidian_block_long_slope_3", "eurokit:obsidian_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:obsidian_block_long_slope_1", {
	description = "Obsidian Block Long Slope 1",
	groups = { cracky = 1, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:obsidian_block_slope", "", "" },
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_block_long_slope_3_outward", {
	description = "Obsidian Block Long Slope 3 Outward",
	groups = { cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_block_long_slope_3", "" },
		{ "eurokit:obsidian_block_long_slope_3", "eurokit:obsidian_block_long_slope_3", "eurokit:obsidian_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:obsidian_block_long_slope_3", {
	description = "Obsidian Block Long Slope 3",
	groups = { cracky = 1, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:obsidian_block_slope" },
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_block_long_slope_2_inward", {
	description = "Obsidian Block Long Slope 2 Inward",
	groups = { cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:obsidian_block_long_slope_2", "" },
		{ "eurokit:obsidian_block_long_slope_2", "", "eurokit:obsidian_block_long_slope_2" },
		{ "eurokit:obsidian_block_long_slope_2", "eurokit:obsidian_block_long_slope_2", "eurokit:obsidian_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:obsidian_block_slope_inward", {
	description = "Obsidian Block Slope Inward",
	groups = { cracky = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_slope_inward 7",
	recipe = {
		{ "", "", "default:obsidian_block" },
		{ "", "default:obsidian_block", "" },
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 2",
	recipe = {
		{ "eurokit:obsidian_block_slope_inward", "", "" },
		{ "eurokit:obsidian_block_slope_inward", "eurokit:obsidian_block_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_block_long_slope_1_inward", {
	description = "Obsidian Block Long Slope 1 Inward",
	groups = { cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:obsidian_block_long_slope_1", "" },
		{ "eurokit:obsidian_block_long_slope_1", "", "eurokit:obsidian_block_long_slope_1" },
		{ "eurokit:obsidian_block_long_slope_1", "eurokit:obsidian_block_long_slope_1", "eurokit:obsidian_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:obsidian_block_slope", {
	description = "Obsidian Block Slope",
	groups = { cracky = 1, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_obsidian_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_block_slope 11",
	recipe = {
		{ "", "", "default:obsidian_block" },
		{ "", "default:obsidian_block", "default:obsidian_block" },
		{ "default:obsidian_block", "default:obsidian_block", "default:obsidian_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidian_block 2",
	recipe = {
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "" },
		{ "eurokit:obsidian_block_slope", "eurokit:obsidian_block_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_half_pillar_mid", {
	description = "Obsidian Brick Half Pillar Mid",
	groups = { cracky = 1, pillar = 1, half_pillar = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_half_pillar_mid 1",
	recipe = {
		{ "eurokit:obsidian_brick_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pillar_mid 2",
	recipe = {
		{ "eurokit:obsidian_brick_half_pillar_mid", "eurokit:obsidian_brick_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_pillar_top", {
	description = "Obsidian Brick Pillar Top",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pillar_top 12",
	recipe = {
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" },
		{ "", "default:obsidianbrick", "" },
		{ "", "default:obsidianbrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "eurokit:obsidian_brick_pillar_top", "eurokit:obsidian_brick_pillar_top", "eurokit:obsidian_brick_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_counterarch", {
	description = "Obsidian Brick Counterarch",
	groups = { cracky = 1, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_counterarch 7",
	recipe = {
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" },
		{ "", "default:obsidianbrick", "default:obsidianbrick" },
		{ "", "", "default:obsidianbrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 3",
	recipe = {
		{ "eurokit:obsidian_brick_counterarch", "eurokit:obsidian_brick_counterarch", "" },
		{ "eurokit:obsidian_brick_counterarch", "eurokit:obsidian_brick_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_vertical_arrowslit", {
	description = "Obsidian Brick Vertical Arrowslit",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:obsidian_brick_arrow_hole", "" },
		{ "", "eurokit:obsidian_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_wall_indentation_2_inward", {
	description = "Obsidian Brick Wall Indentation 2 Inward",
	groups = { cracky = 1, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:obsidian_brick_wall_indentation_2", "" },
		{ "eurokit:obsidian_brick_wall_indentation_2", "", "eurokit:obsidian_brick_wall_indentation_2" },
		{ "eurokit:obsidian_brick_wall_indentation_2", "eurokit:obsidian_brick_wall_indentation_2", "eurokit:obsidian_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_wall_indentation_2 4",
	recipe = {
		{ "eurokit:obsidian_brick_wall_indentation_2_inward", "eurokit:obsidian_brick_wall_indentation_2_inward", "eurokit:obsidian_brick_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_half_pillar_base", {
	description = "Obsidian Brick Half Pillar Base",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_half_pillar_base 1",
	recipe = {
		{ "eurokit:obsidian_brick_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pillar_base 1",
	recipe = {
		{ "eurokit:obsidian_brick_half_pillar_base", "eurokit:obsidian_brick_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_small_pointed_arch", {
	description = "Obsidian Brick Small Pointed Arch",
	groups = { cracky = 1, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_small_pointed_arch 9",
	recipe = {
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope" },
		{ "eurokit:obsidian_brick_slope", "", "eurokit:obsidian_brick_slope" },
		{ "eurokit:obsidian_brick_slope", "", "eurokit:obsidian_brick_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_pointed_arch_2", {
	description = "Obsidian Brick Pointed Arch 2",
	groups = { cracky = 1, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "" },
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "" },
		{ "eurokit:obsidian_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_slope 5",
	recipe = {
		{ "eurokit:obsidian_brick_pointed_arch_2", "eurokit:obsidian_brick_pointed_arch_2", "" },
		{ "eurokit:obsidian_brick_pointed_arch_2", "eurokit:obsidian_brick_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_machicolation", {
	description = "Obsidian Brick Machicolation",
	groups = { cracky = 1, machicolation = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_machicolation 18",
	recipe = {
		{ "default:obsidianbrick", "", "default:obsidianbrick" },
		{ "default:obsidianbrick", "", "default:obsidianbrick" },
		{ "default:obsidianbrick", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_pointed_arch_1_outward", {
	description = "Obsidian Brick Pointed Arch 1 Outward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_brick_pointed_arch_1", "" },
		{ "eurokit:obsidian_brick_pointed_arch_1", "eurokit:obsidian_brick_pointed_arch_1", "eurokit:obsidian_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pointed_arch_1 1",
	recipe = {
		{ "eurokit:obsidian_brick_pointed_arch_1_outward", "eurokit:obsidian_brick_pointed_arch_1_outward", "eurokit:obsidian_brick_pointed_arch_1_outward" },
		{ "eurokit:obsidian_brick_pointed_arch_1_outward", "eurokit:obsidian_brick_pointed_arch_1_outward", "eurokit:obsidian_brick_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_arrowslit_end_top", {
	description = "Obsidian Brick Arrowslit End Top",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:obsidian_brick_arrow_hole", "eurokit:obsidian_brick_arrow_hole", "eurokit:obsidian_brick_arrow_hole" },
		{ "", "eurokit:obsidian_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_arrowslit_end_bottom", {
	description = "Obsidian Brick Arrowslit End Bottom",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_brick_arrow_hole", "" },
		{ "eurokit:obsidian_brick_arrow_hole", "eurokit:obsidian_brick_arrow_hole", "eurokit:obsidian_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_wall_indentation_2_outward", {
	description = "Obsidian Brick Wall Indentation 2 Outward",
	groups = { cracky = 1, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_brick_wall_indentation_2", "" },
		{ "eurokit:obsidian_brick_wall_indentation_2", "eurokit:obsidian_brick_wall_indentation_2", "eurokit:obsidian_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_wall_indentation_2 3",
	recipe = {
		{ "eurokit:obsidian_brick_wall_indentation_2_outward", "eurokit:obsidian_brick_wall_indentation_2_outward", "" },
		{ "eurokit:obsidian_brick_wall_indentation_2_outward", "eurokit:obsidian_brick_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_pillar_mid", {
	description = "Obsidian Brick Pillar Mid",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pillar_mid 14",
	recipe = {
		{ "", "default:obsidianbrick", "" },
		{ "", "default:obsidianbrick", "" },
		{ "", "default:obsidianbrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "eurokit:obsidian_brick_pillar_mid", "eurokit:obsidian_brick_pillar_mid", "eurokit:obsidian_brick_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_arrowslit_end_left", {
	description = "Obsidian Brick Arrowslit End Left",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:obsidian_brick_arrow_hole", "", "" },
		{ "eurokit:obsidian_brick_arrow_hole", "eurokit:obsidian_brick_arrow_hole", "" },
		{ "eurokit:obsidian_brick_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_wall_indentation_2", {
	description = "Obsidian Brick Wall Indentation 2",
	groups = { cracky = 1, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_wall_indentation_2 2",
	recipe = {
		{ "eurokit:obsidian_brick_slope", "", "" },
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_arch_inward", {
	description = "Obsidian Brick Arch Inward",
	groups = { cracky = 1, inward = 1, arch = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_arch_inward 13",
	recipe = {
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" },
		{ "default:obsidianbrick", "", "default:obsidianbrick" },
		{ "", "default:obsidianbrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "eurokit:obsidian_brick_arch_inward", "eurokit:obsidian_brick_arch_inward", "eurokit:obsidian_brick_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_small_arch", {
	description = "Obsidian Brick Small Arch",
	groups = { cracky = 1, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:obsidianbrick", "" },
		{ "default:obsidianbrick", "", "default:obsidianbrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 2",
	recipe = {
		{ "eurokit:obsidian_brick_small_arch", "eurokit:obsidian_brick_small_arch", "" },
		{ "eurokit:obsidian_brick_small_arch", "eurokit:obsidian_brick_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_thin_wall", {
	description = "Obsidian Brick Thin Wall",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_thin_wall 24",
	recipe = {
		{ "default:obsidianbrick", "default:obsidianbrick", "" },
		{ "default:obsidianbrick", "default:obsidianbrick", "" },
		{ "default:obsidianbrick", "default:obsidianbrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:obsidian_brick_thin_wall", "eurokit:obsidian_brick_thin_wall", "eurokit:obsidian_brick_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_counterarch_inward", {
	description = "Obsidian Brick Counterarch Inward",
	groups = { cracky = 1, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_counterarch_inward 3",
	recipe = {
		{ "", "default:obsidianbrick", "default:obsidianbrick" },
		{ "", "", "default:obsidianbrick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 2",
	recipe = {
		{ "eurokit:obsidian_brick_counterarch_inward", "", "" },
		{ "eurokit:obsidian_brick_counterarch_inward", "eurokit:obsidian_brick_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_small_counterarch", {
	description = "Obsidian Brick Small Counterarch",
	groups = { cracky = 1, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_small_counterarch 17",
	recipe = {
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" },
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" },
		{ "", "default:obsidianbrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "eurokit:obsidian_brick_small_counterarch", "eurokit:obsidian_brick_small_counterarch", "" },
		{ "eurokit:obsidian_brick_small_counterarch", "eurokit:obsidian_brick_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_horizontal_arrowslit", {
	description = "Obsidian Brick Horizontal Arrowslit",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:obsidian_brick_arrow_hole", "eurokit:obsidian_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_arch_outward", {
	description = "Obsidian Brick Arch Outward",
	groups = { cracky = 1, outward = 1, arch = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_arch_outward 22",
	recipe = {
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" },
		{ "", "default:obsidianbrick", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "eurokit:obsidian_brick_arch_outward", "", "" },
		{ "eurokit:obsidian_brick_arch_outward", "eurokit:obsidian_brick_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_arch", {
	description = "Obsidian Brick Arch",
	groups = { cracky = 1, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_arch 18",
	recipe = {
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" },
		{ "default:obsidianbrick", "default:obsidianbrick", "" },
		{ "default:obsidianbrick", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "eurokit:obsidian_brick_arch", "eurokit:obsidian_brick_arch", "" },
		{ "eurokit:obsidian_brick_arch", "eurokit:obsidian_brick_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_half_pillar_top", {
	description = "Obsidian Brick Half Pillar Top",
	groups = { cracky = 1, pillar = 1, half_pillar = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_half_pillar_top 1",
	recipe = {
		{ "eurokit:obsidian_brick_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pillar_top 1",
	recipe = {
		{ "eurokit:obsidian_brick_half_pillar_top", "eurokit:obsidian_brick_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_pointed_arch_2_inward", {
	description = "Obsidian Brick Pointed Arch 2 Inward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:obsidian_brick_pointed_arch_2", "" },
		{ "eurokit:obsidian_brick_pointed_arch_2", "", "eurokit:obsidian_brick_pointed_arch_2" },
		{ "eurokit:obsidian_brick_pointed_arch_2", "eurokit:obsidian_brick_pointed_arch_2", "eurokit:obsidian_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pointed_arch_2 6",
	recipe = {
		{ "eurokit:obsidian_brick_pointed_arch_2_inward", "eurokit:obsidian_brick_pointed_arch_2_inward", "" },
		{ "eurokit:obsidian_brick_pointed_arch_2_inward", "eurokit:obsidian_brick_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_pointed_arch_2_outward", {
	description = "Obsidian Brick Pointed Arch 2 Outward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_brick_pointed_arch_2", "" },
		{ "eurokit:obsidian_brick_pointed_arch_2", "eurokit:obsidian_brick_pointed_arch_2", "eurokit:obsidian_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:obsidian_brick_pointed_arch_2_outward", "eurokit:obsidian_brick_pointed_arch_2_outward", "eurokit:obsidian_brick_pointed_arch_2_outward" },
		{ "eurokit:obsidian_brick_pointed_arch_2_outward", "eurokit:obsidian_brick_pointed_arch_2_outward", "eurokit:obsidian_brick_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_wall_indentation_1_outward", {
	description = "Obsidian Brick Wall Indentation 1 Outward",
	groups = { cracky = 1, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_brick_wall_indentation_1", "" },
		{ "eurokit:obsidian_brick_wall_indentation_1", "eurokit:obsidian_brick_wall_indentation_1", "eurokit:obsidian_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_wall_indentation_1 1",
	recipe = {
		{ "eurokit:obsidian_brick_wall_indentation_1_outward", "eurokit:obsidian_brick_wall_indentation_1_outward", "" },
		{ "eurokit:obsidian_brick_wall_indentation_1_outward", "eurokit:obsidian_brick_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_wall_indentation_1_inward", {
	description = "Obsidian Brick Wall Indentation 1 Inward",
	groups = { cracky = 1, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:obsidian_brick_wall_indentation_1", "" },
		{ "eurokit:obsidian_brick_wall_indentation_1", "", "eurokit:obsidian_brick_wall_indentation_1" },
		{ "eurokit:obsidian_brick_wall_indentation_1", "eurokit:obsidian_brick_wall_indentation_1", "eurokit:obsidian_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_wall_indentation_1 5",
	recipe = {
		{ "eurokit:obsidian_brick_wall_indentation_1_inward", "eurokit:obsidian_brick_wall_indentation_1_inward", "eurokit:obsidian_brick_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_pointed_arch_1", {
	description = "Obsidian Brick Pointed Arch 1",
	groups = { cracky = 1, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pointed_arch_1 11",
	recipe = {
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "" },
		{ "eurokit:obsidian_brick_slope", "", "" },
		{ "eurokit:obsidian_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_slope 2",
	recipe = {
		{ "eurokit:obsidian_brick_pointed_arch_1", "eurokit:obsidian_brick_pointed_arch_1", "eurokit:obsidian_brick_pointed_arch_1" },
		{ "eurokit:obsidian_brick_pointed_arch_1", "eurokit:obsidian_brick_pointed_arch_1", "eurokit:obsidian_brick_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_small_straight_arch", {
	description = "Obsidian Brick Small Straight Arch",
	groups = { cracky = 1, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_small_straight_arch 8",
	recipe = {
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" },
		{ "default:obsidianbrick", "", "default:obsidianbrick" },
		{ "default:obsidianbrick", "", "default:obsidianbrick" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_arrow_hole", {
	description = "Obsidian Brick Arrow Hole",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_arrow_hole 21",
	recipe = {
		{ "", "default:obsidianbrick", "" },
		{ "default:obsidianbrick", "", "default:obsidianbrick" },
		{ "", "default:obsidianbrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "eurokit:obsidian_brick_arrow_hole", "eurokit:obsidian_brick_arrow_hole", "" },
		{ "eurokit:obsidian_brick_arrow_hole", "eurokit:obsidian_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_pointed_arch_1_inward", {
	description = "Obsidian Brick Pointed Arch 1 Inward",
	groups = { cracky = 1, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:obsidian_brick_pointed_arch_1", "" },
		{ "eurokit:obsidian_brick_pointed_arch_1", "", "eurokit:obsidian_brick_pointed_arch_1" },
		{ "eurokit:obsidian_brick_pointed_arch_1", "eurokit:obsidian_brick_pointed_arch_1", "eurokit:obsidian_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pointed_arch_1 7",
	recipe = {
		{ "eurokit:obsidian_brick_pointed_arch_1_inward", "eurokit:obsidian_brick_pointed_arch_1_inward", "" },
		{ "eurokit:obsidian_brick_pointed_arch_1_inward", "eurokit:obsidian_brick_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_wall_indentation_1", {
	description = "Obsidian Brick Wall Indentation 1",
	groups = { cracky = 1, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_wall_indentation_1 7",
	recipe = {
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "" },
		{ "eurokit:obsidian_brick_slope", "", "eurokit:obsidian_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_counterarch_outward", {
	description = "Obsidian Brick Counterarch Outward",
	groups = { cracky = 1, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_counterarch_outward 6",
	recipe = {
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" },
		{ "", "", "default:obsidianbrick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "eurokit:obsidian_brick_counterarch_outward", "eurokit:obsidian_brick_counterarch_outward", "eurokit:obsidian_brick_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_arrowslit_end_right", {
	description = "Obsidian Brick Arrowslit End Right",
	groups = { cracky = 1, arrowslit = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:obsidian_brick_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:obsidian_brick_arrow_hole" },
		{ "", "eurokit:obsidian_brick_arrow_hole", "eurokit:obsidian_brick_arrow_hole" },
		{ "", "", "eurokit:obsidian_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_pillar_base", {
	description = "Obsidian Brick Pillar Base",
	groups = { cracky = 1, pillar = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_pillar_base 7",
	recipe = {
		{ "", "default:obsidianbrick", "" },
		{ "", "default:obsidianbrick", "" },
		{ "", "default:obsidianbrick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "eurokit:obsidian_brick_pillar_base", "eurokit:obsidian_brick_pillar_base", "eurokit:obsidian_brick_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_long_slope_2_outward", {
	description = "Obsidian Brick Long Slope 2 Outward",
	groups = { cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_brick_long_slope_2", "" },
		{ "eurokit:obsidian_brick_long_slope_2", "eurokit:obsidian_brick_long_slope_2", "eurokit:obsidian_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_slope_outward", {
	description = "Obsidian Brick Slope Outward",
	groups = { cracky = 1, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:obsidianbrick" },
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 1",
	recipe = {
		{ "eurokit:obsidian_brick_slope_outward", "eurokit:obsidian_brick_slope_outward", "eurokit:obsidian_brick_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_long_slope_2", {
	description = "Obsidian Brick Long Slope 2",
	groups = { cracky = 1, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_brick_slope", "" },
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_long_slope_1_outward", {
	description = "Obsidian Brick Long Slope 1 Outward",
	groups = { cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_brick_long_slope_1", "" },
		{ "eurokit:obsidian_brick_long_slope_1", "eurokit:obsidian_brick_long_slope_1", "eurokit:obsidian_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_long_slope_3_inward", {
	description = "Obsidian Brick Long Slope 3 Inward",
	groups = { cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:obsidian_brick_long_slope_3", "" },
		{ "eurokit:obsidian_brick_long_slope_3", "", "eurokit:obsidian_brick_long_slope_3" },
		{ "eurokit:obsidian_brick_long_slope_3", "eurokit:obsidian_brick_long_slope_3", "eurokit:obsidian_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_long_slope_1", {
	description = "Obsidian Brick Long Slope 1",
	groups = { cracky = 1, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:obsidian_brick_slope", "", "" },
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_long_slope_3_outward", {
	description = "Obsidian Brick Long Slope 3 Outward",
	groups = { cracky = 1, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:obsidian_brick_long_slope_3", "" },
		{ "eurokit:obsidian_brick_long_slope_3", "eurokit:obsidian_brick_long_slope_3", "eurokit:obsidian_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_long_slope_3", {
	description = "Obsidian Brick Long Slope 3",
	groups = { cracky = 1, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:obsidian_brick_slope" },
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_long_slope_2_inward", {
	description = "Obsidian Brick Long Slope 2 Inward",
	groups = { cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:obsidian_brick_long_slope_2", "" },
		{ "eurokit:obsidian_brick_long_slope_2", "", "eurokit:obsidian_brick_long_slope_2" },
		{ "eurokit:obsidian_brick_long_slope_2", "eurokit:obsidian_brick_long_slope_2", "eurokit:obsidian_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_slope_inward", {
	description = "Obsidian Brick Slope Inward",
	groups = { cracky = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_slope_inward 7",
	recipe = {
		{ "", "", "default:obsidianbrick" },
		{ "", "default:obsidianbrick", "" },
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 2",
	recipe = {
		{ "eurokit:obsidian_brick_slope_inward", "", "" },
		{ "eurokit:obsidian_brick_slope_inward", "eurokit:obsidian_brick_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_long_slope_1_inward", {
	description = "Obsidian Brick Long Slope 1 Inward",
	groups = { cracky = 1, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:obsidian_brick_long_slope_1", "" },
		{ "eurokit:obsidian_brick_long_slope_1", "", "eurokit:obsidian_brick_long_slope_1" },
		{ "eurokit:obsidian_brick_long_slope_1", "eurokit:obsidian_brick_long_slope_1", "eurokit:obsidian_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:obsidian_brick_slope", {
	description = "Obsidian Brick Slope",
	groups = { cracky = 1, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_obsidian_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:obsidian_brick_slope 11",
	recipe = {
		{ "", "", "default:obsidianbrick" },
		{ "", "default:obsidianbrick", "default:obsidianbrick" },
		{ "default:obsidianbrick", "default:obsidianbrick", "default:obsidianbrick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:obsidianbrick 2",
	recipe = {
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "" },
		{ "eurokit:obsidian_brick_slope", "eurokit:obsidian_brick_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:acacia_wood_half_pillar_mid", {
	description = "Acacia Wood Half Pillar Mid",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_half_pillar_mid 1",
	recipe = {
		{ "eurokit:acacia_wood_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pillar_mid 2",
	recipe = {
		{ "eurokit:acacia_wood_half_pillar_mid", "eurokit:acacia_wood_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_half_pillar_mid",
	burntime = 2.125
})

minetest.register_node( "eurokit:acacia_wood_pillar_top", {
	description = "Acacia Wood Pillar Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pillar_top 12",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "", "default:acacia_wood", "" },
		{ "", "default:acacia_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 1",
	recipe = {
		{ "eurokit:acacia_wood_pillar_top", "eurokit:acacia_wood_pillar_top", "eurokit:acacia_wood_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_pillar_top",
	burntime = 3.15625
})

minetest.register_node( "eurokit:acacia_wood_counterarch", {
	description = "Acacia Wood Counterarch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_counterarch 7",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "", "default:acacia_wood", "default:acacia_wood" },
		{ "", "", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 3",
	recipe = {
		{ "eurokit:acacia_wood_counterarch", "eurokit:acacia_wood_counterarch", "" },
		{ "eurokit:acacia_wood_counterarch", "eurokit:acacia_wood_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_counterarch",
	burntime = 6.25
})

minetest.register_node( "eurokit:acacia_wood_vertical_arrowslit", {
	description = "Acacia Wood Vertical Arrowslit",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:acacia_wood_arrow_hole", "" },
		{ "", "eurokit:acacia_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_vertical_arrowslit",
	burntime = 1.375
})

minetest.register_node( "eurokit:acacia_wood_wall_indentation_2_inward", {
	description = "Acacia Wood Wall Indentation 2 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:acacia_wood_wall_indentation_2", "" },
		{ "eurokit:acacia_wood_wall_indentation_2", "", "eurokit:acacia_wood_wall_indentation_2" },
		{ "eurokit:acacia_wood_wall_indentation_2", "eurokit:acacia_wood_wall_indentation_2", "eurokit:acacia_wood_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_wall_indentation_2 4",
	recipe = {
		{ "eurokit:acacia_wood_wall_indentation_2_inward", "eurokit:acacia_wood_wall_indentation_2_inward", "eurokit:acacia_wood_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_wall_indentation_2_inward",
	burntime = 9.015625
})

minetest.register_node( "eurokit:acacia_wood_half_pillar_base", {
	description = "Acacia Wood Half Pillar Base",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_half_pillar_base 1",
	recipe = {
		{ "eurokit:acacia_wood_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pillar_base 1",
	recipe = {
		{ "eurokit:acacia_wood_half_pillar_base", "eurokit:acacia_wood_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_half_pillar_base",
	burntime = 2.171875
})

minetest.register_node( "eurokit:acacia_wood_small_pointed_arch", {
	description = "Acacia Wood Small Pointed Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_small_pointed_arch 9",
	recipe = {
		{ "eurokit:acacia_wood_slope", "eurokit:acacia_wood_slope", "eurokit:acacia_wood_slope" },
		{ "eurokit:acacia_wood_slope", "", "eurokit:acacia_wood_slope" },
		{ "eurokit:acacia_wood_slope", "", "eurokit:acacia_wood_slope" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_small_pointed_arch",
	burntime = 3.125
})

minetest.register_node( "eurokit:acacia_wood_pointed_arch_2", {
	description = "Acacia Wood Pointed Arch 2",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pointed_arch_2 3",
	recipe = {
		{ "eurokit:acacia_wood_slope", "eurokit:acacia_wood_slope", "" },
		{ "eurokit:acacia_wood_slope", "eurokit:acacia_wood_slope", "" },
		{ "eurokit:acacia_wood_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_slope 5",
	recipe = {
		{ "eurokit:acacia_wood_pointed_arch_2", "eurokit:acacia_wood_pointed_arch_2", "" },
		{ "eurokit:acacia_wood_pointed_arch_2", "eurokit:acacia_wood_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_pointed_arch_2",
	burntime = 5.40625
})

minetest.register_node( "eurokit:acacia_wood_machicolation", {
	description = "Acacia Wood Machicolation",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, machicolation = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_machicolation 18",
	recipe = {
		{ "default:acacia_wood", "", "default:acacia_wood" },
		{ "default:acacia_wood", "", "default:acacia_wood" },
		{ "default:acacia_wood", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_machicolation",
	burntime = 2.140625
})

minetest.register_node( "eurokit:acacia_wood_pointed_arch_1_outward", {
	description = "Acacia Wood Pointed Arch 1 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:acacia_wood_pointed_arch_1", "" },
		{ "eurokit:acacia_wood_pointed_arch_1", "eurokit:acacia_wood_pointed_arch_1", "eurokit:acacia_wood_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pointed_arch_1 1",
	recipe = {
		{ "eurokit:acacia_wood_pointed_arch_1_outward", "eurokit:acacia_wood_pointed_arch_1_outward", "eurokit:acacia_wood_pointed_arch_1_outward" },
		{ "eurokit:acacia_wood_pointed_arch_1_outward", "eurokit:acacia_wood_pointed_arch_1_outward", "eurokit:acacia_wood_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_pointed_arch_1_outward",
	burntime = 0.3125
})

minetest.register_node( "eurokit:acacia_wood_arrowslit_end_top", {
	description = "Acacia Wood Arrowslit End Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:acacia_wood_arrow_hole", "eurokit:acacia_wood_arrow_hole", "eurokit:acacia_wood_arrow_hole" },
		{ "", "eurokit:acacia_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_arrowslit_end_top",
	burntime = 1.26953125
})

minetest.register_node( "eurokit:acacia_wood_arrowslit_end_bottom", {
	description = "Acacia Wood Arrowslit End Bottom",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:acacia_wood_arrow_hole", "" },
		{ "eurokit:acacia_wood_arrow_hole", "eurokit:acacia_wood_arrow_hole", "eurokit:acacia_wood_arrow_hole" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_arrowslit_end_bottom",
	burntime = 1.26953125
})

minetest.register_node( "eurokit:acacia_wood_wall_indentation_2_outward", {
	description = "Acacia Wood Wall Indentation 2 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:acacia_wood_wall_indentation_2", "" },
		{ "eurokit:acacia_wood_wall_indentation_2", "eurokit:acacia_wood_wall_indentation_2", "eurokit:acacia_wood_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_wall_indentation_2 3",
	recipe = {
		{ "eurokit:acacia_wood_wall_indentation_2_outward", "eurokit:acacia_wood_wall_indentation_2_outward", "" },
		{ "eurokit:acacia_wood_wall_indentation_2_outward", "eurokit:acacia_wood_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_wall_indentation_2_outward",
	burntime = 5.046875
})

minetest.register_node( "eurokit:acacia_wood_pillar_mid", {
	description = "Acacia Wood Pillar Mid",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pillar_mid 14",
	recipe = {
		{ "", "default:acacia_wood", "" },
		{ "", "default:acacia_wood", "" },
		{ "", "default:acacia_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 1",
	recipe = {
		{ "eurokit:acacia_wood_pillar_mid", "eurokit:acacia_wood_pillar_mid", "eurokit:acacia_wood_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_pillar_mid",
	burntime = 1.625
})

minetest.register_node( "eurokit:acacia_wood_arrowslit_end_left", {
	description = "Acacia Wood Arrowslit End Left",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:acacia_wood_arrow_hole", "", "" },
		{ "eurokit:acacia_wood_arrow_hole", "eurokit:acacia_wood_arrow_hole", "" },
		{ "eurokit:acacia_wood_arrow_hole", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_arrowslit_end_left",
	burntime = 1.23625
})

minetest.register_node( "eurokit:acacia_wood_wall_indentation_2", {
	description = "Acacia Wood Wall Indentation 2",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_wall_indentation_2 2",
	recipe = {
		{ "eurokit:acacia_wood_slope", "", "" },
		{ "eurokit:acacia_wood_slope", "eurokit:acacia_wood_slope", "eurokit:acacia_wood_slope" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_wall_indentation_2",
	burntime = 6.25
})

minetest.register_node( "eurokit:acacia_wood_arch_inward", {
	description = "Acacia Wood Arch Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, inward = 1, arch = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_arch_inward 13",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "default:acacia_wood", "", "default:acacia_wood" },
		{ "", "default:acacia_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 1",
	recipe = {
		{ "eurokit:acacia_wood_arch_inward", "eurokit:acacia_wood_arch_inward", "eurokit:acacia_wood_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_arch_inward",
	burntime = 3.654296875
})

minetest.register_node( "eurokit:acacia_wood_small_arch", {
	description = "Acacia Wood Small Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:acacia_wood", "" },
		{ "default:acacia_wood", "", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 2",
	recipe = {
		{ "eurokit:acacia_wood_small_arch", "eurokit:acacia_wood_small_arch", "" },
		{ "eurokit:acacia_wood_small_arch", "eurokit:acacia_wood_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_small_arch",
	burntime = 5.375
})

minetest.register_node( "eurokit:acacia_wood_thin_wall", {
	description = "Acacia Wood Thin Wall",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_thin_wall 24",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "" },
		{ "default:acacia_wood", "default:acacia_wood", "" },
		{ "default:acacia_wood", "default:acacia_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:acacia_wood_thin_wall", "eurokit:acacia_wood_thin_wall", "eurokit:acacia_wood_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_thin_wall",
	burntime = 2
})

minetest.register_node( "eurokit:acacia_wood_counterarch_inward", {
	description = "Acacia Wood Counterarch Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_counterarch_inward 3",
	recipe = {
		{ "", "default:acacia_wood", "default:acacia_wood" },
		{ "", "", "default:acacia_wood" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 2",
	recipe = {
		{ "eurokit:acacia_wood_counterarch_inward", "", "" },
		{ "eurokit:acacia_wood_counterarch_inward", "eurokit:acacia_wood_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_counterarch_inward",
	burntime = 7.234375
})

minetest.register_node( "eurokit:acacia_wood_small_counterarch", {
	description = "Acacia Wood Small Counterarch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_small_counterarch 17",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "", "default:acacia_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 1",
	recipe = {
		{ "eurokit:acacia_wood_small_counterarch", "eurokit:acacia_wood_small_counterarch", "" },
		{ "eurokit:acacia_wood_small_counterarch", "eurokit:acacia_wood_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_small_counterarch",
	burntime = 3.25
})

minetest.register_node( "eurokit:acacia_wood_horizontal_arrowslit", {
	description = "Acacia Wood Horizontal Arrowslit",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:acacia_wood_arrow_hole", "eurokit:acacia_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_horizontal_arrowslit",
	burntime = 1.375
})

minetest.register_node( "eurokit:acacia_wood_arch_outward", {
	description = "Acacia Wood Arch Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, outward = 1, arch = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_arch_outward 22",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "", "default:acacia_wood", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 1",
	recipe = {
		{ "eurokit:acacia_wood_arch_outward", "", "" },
		{ "eurokit:acacia_wood_arch_outward", "eurokit:acacia_wood_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_arch_outward",
	burntime = 1.408203125
})

minetest.register_node( "eurokit:acacia_wood_arch", {
	description = "Acacia Wood Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_arch 18",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "default:acacia_wood", "default:acacia_wood", "" },
		{ "default:acacia_wood", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 1",
	recipe = {
		{ "eurokit:acacia_wood_arch", "eurokit:acacia_wood_arch", "" },
		{ "eurokit:acacia_wood_arch", "eurokit:acacia_wood_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_arch",
	burntime = 2.53125
})

minetest.register_node( "eurokit:acacia_wood_half_pillar_top", {
	description = "Acacia Wood Half Pillar Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_half_pillar_top 1",
	recipe = {
		{ "eurokit:acacia_wood_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pillar_top 1",
	recipe = {
		{ "eurokit:acacia_wood_half_pillar_top", "eurokit:acacia_wood_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_half_pillar_top",
	burntime = 2.171875
})

minetest.register_node( "eurokit:acacia_wood_pointed_arch_2_inward", {
	description = "Acacia Wood Pointed Arch 2 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:acacia_wood_pointed_arch_2", "" },
		{ "eurokit:acacia_wood_pointed_arch_2", "", "eurokit:acacia_wood_pointed_arch_2" },
		{ "eurokit:acacia_wood_pointed_arch_2", "eurokit:acacia_wood_pointed_arch_2", "eurokit:acacia_wood_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pointed_arch_2 6",
	recipe = {
		{ "eurokit:acacia_wood_pointed_arch_2_inward", "eurokit:acacia_wood_pointed_arch_2_inward", "" },
		{ "eurokit:acacia_wood_pointed_arch_2_inward", "eurokit:acacia_wood_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_pointed_arch_2_inward",
	burntime = 9.369140625
})

minetest.register_node( "eurokit:acacia_wood_pointed_arch_2_outward", {
	description = "Acacia Wood Pointed Arch 2 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:acacia_wood_pointed_arch_2", "" },
		{ "eurokit:acacia_wood_pointed_arch_2", "eurokit:acacia_wood_pointed_arch_2", "eurokit:acacia_wood_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pointed_arch_2 3",
	recipe = {
		{ "eurokit:acacia_wood_pointed_arch_2_outward", "eurokit:acacia_wood_pointed_arch_2_outward", "eurokit:acacia_wood_pointed_arch_2_outward" },
		{ "eurokit:acacia_wood_pointed_arch_2_outward", "eurokit:acacia_wood_pointed_arch_2_outward", "eurokit:acacia_wood_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_pointed_arch_2_outward",
	burntime = 3.388671875
})

minetest.register_node( "eurokit:acacia_wood_wall_indentation_1_outward", {
	description = "Acacia Wood Wall Indentation 1 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:acacia_wood_wall_indentation_1", "" },
		{ "eurokit:acacia_wood_wall_indentation_1", "eurokit:acacia_wood_wall_indentation_1", "eurokit:acacia_wood_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_wall_indentation_1 1",
	recipe = {
		{ "eurokit:acacia_wood_wall_indentation_1_outward", "eurokit:acacia_wood_wall_indentation_1_outward", "" },
		{ "eurokit:acacia_wood_wall_indentation_1_outward", "eurokit:acacia_wood_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_wall_indentation_1_outward",
	burntime = 0.796875
})

minetest.register_node( "eurokit:acacia_wood_wall_indentation_1_inward", {
	description = "Acacia Wood Wall Indentation 1 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:acacia_wood_wall_indentation_1", "" },
		{ "eurokit:acacia_wood_wall_indentation_1", "", "eurokit:acacia_wood_wall_indentation_1" },
		{ "eurokit:acacia_wood_wall_indentation_1", "eurokit:acacia_wood_wall_indentation_1", "eurokit:acacia_wood_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_wall_indentation_1 5",
	recipe = {
		{ "eurokit:acacia_wood_wall_indentation_1_inward", "eurokit:acacia_wood_wall_indentation_1_inward", "eurokit:acacia_wood_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_wall_indentation_1_inward",
	burntime = 3.953125
})

minetest.register_node( "eurokit:acacia_wood_pointed_arch_1", {
	description = "Acacia Wood Pointed Arch 1",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pointed_arch_1 11",
	recipe = {
		{ "eurokit:acacia_wood_slope", "eurokit:acacia_wood_slope", "" },
		{ "eurokit:acacia_wood_slope", "", "" },
		{ "eurokit:acacia_wood_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_slope 2",
	recipe = {
		{ "eurokit:acacia_wood_pointed_arch_1", "eurokit:acacia_wood_pointed_arch_1", "eurokit:acacia_wood_pointed_arch_1" },
		{ "eurokit:acacia_wood_pointed_arch_1", "eurokit:acacia_wood_pointed_arch_1", "eurokit:acacia_wood_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_pointed_arch_1",
	burntime = 1.4375
})

minetest.register_node( "eurokit:acacia_wood_small_straight_arch", {
	description = "Acacia Wood Small Straight Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_small_straight_arch 8",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "default:acacia_wood", "", "default:acacia_wood" },
		{ "default:acacia_wood", "", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_small_straight_arch",
	burntime = 6.25
})

minetest.register_node( "eurokit:acacia_wood_arrow_hole", {
	description = "Acacia Wood Arrow Hole",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_arrow_hole 21",
	recipe = {
		{ "", "default:acacia_wood", "" },
		{ "default:acacia_wood", "", "default:acacia_wood" },
		{ "", "default:acacia_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 1",
	recipe = {
		{ "eurokit:acacia_wood_arrow_hole", "eurokit:acacia_wood_arrow_hole", "" },
		{ "eurokit:acacia_wood_arrow_hole", "eurokit:acacia_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_arrow_hole",
	burntime = 1.515625
})

minetest.register_node( "eurokit:acacia_wood_pointed_arch_1_inward", {
	description = "Acacia Wood Pointed Arch 1 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:acacia_wood_pointed_arch_1", "" },
		{ "eurokit:acacia_wood_pointed_arch_1", "", "eurokit:acacia_wood_pointed_arch_1" },
		{ "eurokit:acacia_wood_pointed_arch_1", "eurokit:acacia_wood_pointed_arch_1", "eurokit:acacia_wood_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pointed_arch_1 7",
	recipe = {
		{ "eurokit:acacia_wood_pointed_arch_1_inward", "eurokit:acacia_wood_pointed_arch_1_inward", "" },
		{ "eurokit:acacia_wood_pointed_arch_1_inward", "eurokit:acacia_wood_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_pointed_arch_1_inward",
	burntime = 2.673828125
})

minetest.register_node( "eurokit:acacia_wood_wall_indentation_1", {
	description = "Acacia Wood Wall Indentation 1",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_wall_indentation_1 7",
	recipe = {
		{ "eurokit:acacia_wood_slope", "eurokit:acacia_wood_slope", "" },
		{ "eurokit:acacia_wood_slope", "", "eurokit:acacia_wood_slope" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_wall_indentation_1",
	burntime = 2.25
})

minetest.register_node( "eurokit:acacia_wood_counterarch_outward", {
	description = "Acacia Wood Counterarch Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_counterarch_outward 6",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "", "", "default:acacia_wood" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 1",
	recipe = {
		{ "eurokit:acacia_wood_counterarch_outward", "eurokit:acacia_wood_counterarch_outward", "eurokit:acacia_wood_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_counterarch_outward",
	burntime = 5.265625
})

minetest.register_node( "eurokit:acacia_wood_arrowslit_end_right", {
	description = "Acacia Wood Arrowslit End Right",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:acacia_wood_arrow_hole" },
		{ "", "eurokit:acacia_wood_arrow_hole", "eurokit:acacia_wood_arrow_hole" },
		{ "", "", "eurokit:acacia_wood_arrow_hole" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_arrowslit_end_right",
	burntime = 1.25
})

minetest.register_node( "eurokit:acacia_wood_pillar_base", {
	description = "Acacia Wood Pillar Base",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_pillar_base 7",
	recipe = {
		{ "", "default:acacia_wood", "" },
		{ "", "default:acacia_wood", "" },
		{ "", "default:acacia_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:acacia_wood 1",
	recipe = {
		{ "eurokit:acacia_wood_pillar_base", "eurokit:acacia_wood_pillar_base", "eurokit:acacia_wood_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_pillar_base",
	burntime = 3.15625
})

minetest.register_node( "eurokit:acacia_wood_frieze_outward", {
	description = "Acacia Wood Frieze Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_frieze_outward 99",
	recipe = {
		{ "", "", "default:acacia_wood" },
		{ "", "", "" },
		{ "", "", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_frieze_outward",
	burntime = 0.03515625
})

minetest.register_node( "eurokit:acacia_wood_frieze", {
	description = "Acacia Wood Frieze",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_frieze 99",
	recipe = {
		{ "", "default:acacia_wood", "default:acacia_wood" },
		{ "", "", "" },
		{ "", "default:acacia_wood", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_frieze",
	burntime = 0.3125
})

minetest.register_node( "eurokit:acacia_wood_fancy_frieze_outward", {
	description = "Acacia Wood Fancy Frieze Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, outward = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_fancy_frieze_outward 99",
	recipe = {
		{ "", "default:acacia_wood", "default:acacia_wood" },
		{ "", "", "default:acacia_wood" },
		{ "", "default:acacia_wood", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_fancy_frieze_outward",
	burntime = 0.037421875
})

minetest.register_node( "eurokit:acacia_wood_side_rail_oblique", {
	description = "Acacia Wood Side Rail Oblique",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_side_rail_oblique")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail_oblique 93",
	recipe = {
		{ "default:acacia_wood", "", "" },
		{ "default:acacia_wood", "default:acacia_wood", "" },
		{ "default:acacia_wood", "", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_side_rail_oblique",
	burntime = 0.4294375
})

minetest.register_node( "eurokit:acacia_wood_frieze_inward", {
	description = "Acacia Wood Frieze Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, inward = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_frieze_inward 81",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "", "", "" },
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_frieze_inward",
	burntime = 0.58984375
})

minetest.register_node( "eurokit:acacia_wood_fancy_frieze_inward", {
	description = "Acacia Wood Fancy Frieze Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, inward = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_fancy_frieze_inward 82",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "default:acacia_wood", "default:acacia_wood", "" },
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_fancy_frieze_inward",
	burntime = 0.77734375
})

minetest.register_node( "eurokit:acacia_wood_side_rail_oblique_corner_counterclockwise", {
	description = "Acacia Wood Side Rail Oblique Corner Counterclockwise",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_counterclockwise,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_side_rail_oblique_corner_counterclockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail_oblique_corner_counterclockwise 2",
	recipe = {
		{ "", "eurokit:acacia_wood_side_rail_oblique", "eurokit:acacia_wood_side_rail_oblique" },
		{ "", "", "eurokit:acacia_wood_side_rail_oblique" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail_oblique 2",
	recipe = {
		{ "eurokit:acacia_wood_side_rail_oblique_corner_counterclockwise", "eurokit:acacia_wood_side_rail_oblique_corner_counterclockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_side_rail_oblique_corner_counterclockwise",
	burntime = 0.5703125
})

minetest.register_node( "eurokit:acacia_wood_side_rail_oblique_corner_clockwise", {
	description = "Acacia Wood Side Rail Oblique Corner Clockwise",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_clockwise,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_side_rail_oblique_corner_clockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail_oblique_corner_clockwise 2",
	recipe = {
		{ "eurokit:acacia_wood_side_rail_oblique", "eurokit:acacia_wood_side_rail_oblique", "" },
		{ "eurokit:acacia_wood_side_rail_oblique", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail_oblique 2",
	recipe = {
		{ "eurokit:acacia_wood_side_rail_oblique_corner_clockwise", "eurokit:acacia_wood_side_rail_oblique_corner_clockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_side_rail_oblique_corner_clockwise",
	burntime = 0.5703125
})

minetest.register_node( "eurokit:acacia_wood_side_rail_top_corner", {
	description = "Acacia Wood Side Rail Top Corner",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, corner = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top_corner,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_side_rail_top_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail_top_corner 2",
	recipe = {
		{ "eurokit:acacia_wood_side_rail_top", "eurokit:acacia_wood_side_rail_top", "" },
		{ "eurokit:acacia_wood_side_rail_top", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail_top 2",
	recipe = {
		{ "eurokit:acacia_wood_side_rail_top_corner", "eurokit:acacia_wood_side_rail_top_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_side_rail_top_corner",
	burntime = 0.671875
})

minetest.register_node( "eurokit:acacia_wood_fancy_frieze", {
	description = "Acacia Wood Fancy Frieze",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_fancy_frieze 99",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "", "default:acacia_wood", "" },
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_fancy_frieze",
	burntime = 0.40625
})

minetest.register_node( "eurokit:acacia_wood_side_rail_corner", {
	description = "Acacia Wood Side Rail Corner",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, corner = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_corner,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_side_rail_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail_corner 3",
	recipe = {
		{ "eurokit:acacia_wood_side_rail", "eurokit:acacia_wood_side_rail", "" },
		{ "eurokit:acacia_wood_side_rail", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail 2",
	recipe = {
		{ "eurokit:acacia_wood_side_rail_corner", "eurokit:acacia_wood_side_rail_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_side_rail_corner",
	burntime = 0.375
})

minetest.register_node( "eurokit:acacia_wood_side_rail_top", {
	description = "Acacia Wood Side Rail Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, raillingtop = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_side_rail_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail_top 89",
	recipe = {
		{ "default:acacia_wood", "default:acacia_wood", "default:acacia_wood" },
		{ "default:acacia_wood", "", "default:acacia_wood" },
		{ "default:acacia_wood", "", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_side_rail_top",
	burntime = 0.625
})

minetest.register_node( "eurokit:acacia_wood_side_rail", {
	description = "Acacia Wood Side Rail",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1 },
	tiles = { "default_acacia_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:acacia_wood_side_rail")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:acacia_wood_side_rail 99",
	recipe = {
		{ "default:acacia_wood", "", "default:acacia_wood" },
		{ "default:acacia_wood", "", "default:acacia_wood" },
		{ "default:acacia_wood", "", "default:acacia_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:acacia_wood_side_rail",
	burntime = 0.375
})

minetest.register_node( "eurokit:aspen_wood_half_pillar_mid", {
	description = "Aspen Wood Half Pillar Mid",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_half_pillar_mid 1",
	recipe = {
		{ "eurokit:aspen_wood_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pillar_mid 2",
	recipe = {
		{ "eurokit:aspen_wood_half_pillar_mid", "eurokit:aspen_wood_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_half_pillar_mid",
	burntime = 1.328125
})

minetest.register_node( "eurokit:aspen_wood_pillar_top", {
	description = "Aspen Wood Pillar Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pillar_top 12",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "", "default:aspen_wood", "" },
		{ "", "default:aspen_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 1",
	recipe = {
		{ "eurokit:aspen_wood_pillar_top", "eurokit:aspen_wood_pillar_top", "eurokit:aspen_wood_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_pillar_top",
	burntime = 1.97265625
})

minetest.register_node( "eurokit:aspen_wood_counterarch", {
	description = "Aspen Wood Counterarch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_counterarch 7",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "", "default:aspen_wood", "default:aspen_wood" },
		{ "", "", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 3",
	recipe = {
		{ "eurokit:aspen_wood_counterarch", "eurokit:aspen_wood_counterarch", "" },
		{ "eurokit:aspen_wood_counterarch", "eurokit:aspen_wood_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_counterarch",
	burntime = 3.90625
})

minetest.register_node( "eurokit:aspen_wood_vertical_arrowslit", {
	description = "Aspen Wood Vertical Arrowslit",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:aspen_wood_arrow_hole", "" },
		{ "", "eurokit:aspen_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_vertical_arrowslit",
	burntime = 0.859375
})

minetest.register_node( "eurokit:aspen_wood_wall_indentation_2_inward", {
	description = "Aspen Wood Wall Indentation 2 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:aspen_wood_wall_indentation_2", "" },
		{ "eurokit:aspen_wood_wall_indentation_2", "", "eurokit:aspen_wood_wall_indentation_2" },
		{ "eurokit:aspen_wood_wall_indentation_2", "eurokit:aspen_wood_wall_indentation_2", "eurokit:aspen_wood_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_wall_indentation_2 4",
	recipe = {
		{ "eurokit:aspen_wood_wall_indentation_2_inward", "eurokit:aspen_wood_wall_indentation_2_inward", "eurokit:aspen_wood_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_wall_indentation_2_inward",
	burntime = 5.634765625
})

minetest.register_node( "eurokit:aspen_wood_half_pillar_base", {
	description = "Aspen Wood Half Pillar Base",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_half_pillar_base 1",
	recipe = {
		{ "eurokit:aspen_wood_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pillar_base 1",
	recipe = {
		{ "eurokit:aspen_wood_half_pillar_base", "eurokit:aspen_wood_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_half_pillar_base",
	burntime = 1.357421875
})

minetest.register_node( "eurokit:aspen_wood_small_pointed_arch", {
	description = "Aspen Wood Small Pointed Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_small_pointed_arch 9",
	recipe = {
		{ "eurokit:aspen_wood_slope", "eurokit:aspen_wood_slope", "eurokit:aspen_wood_slope" },
		{ "eurokit:aspen_wood_slope", "", "eurokit:aspen_wood_slope" },
		{ "eurokit:aspen_wood_slope", "", "eurokit:aspen_wood_slope" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_small_pointed_arch",
	burntime = 1.953125
})

minetest.register_node( "eurokit:aspen_wood_pointed_arch_2", {
	description = "Aspen Wood Pointed Arch 2",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pointed_arch_2 3",
	recipe = {
		{ "eurokit:aspen_wood_slope", "eurokit:aspen_wood_slope", "" },
		{ "eurokit:aspen_wood_slope", "eurokit:aspen_wood_slope", "" },
		{ "eurokit:aspen_wood_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_slope 5",
	recipe = {
		{ "eurokit:aspen_wood_pointed_arch_2", "eurokit:aspen_wood_pointed_arch_2", "" },
		{ "eurokit:aspen_wood_pointed_arch_2", "eurokit:aspen_wood_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_pointed_arch_2",
	burntime = 3.37890625
})

minetest.register_node( "eurokit:aspen_wood_machicolation", {
	description = "Aspen Wood Machicolation",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, machicolation = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_machicolation 18",
	recipe = {
		{ "default:aspen_wood", "", "default:aspen_wood" },
		{ "default:aspen_wood", "", "default:aspen_wood" },
		{ "default:aspen_wood", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_machicolation",
	burntime = 1.337890625
})

minetest.register_node( "eurokit:aspen_wood_pointed_arch_1_outward", {
	description = "Aspen Wood Pointed Arch 1 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:aspen_wood_pointed_arch_1", "" },
		{ "eurokit:aspen_wood_pointed_arch_1", "eurokit:aspen_wood_pointed_arch_1", "eurokit:aspen_wood_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pointed_arch_1 1",
	recipe = {
		{ "eurokit:aspen_wood_pointed_arch_1_outward", "eurokit:aspen_wood_pointed_arch_1_outward", "eurokit:aspen_wood_pointed_arch_1_outward" },
		{ "eurokit:aspen_wood_pointed_arch_1_outward", "eurokit:aspen_wood_pointed_arch_1_outward", "eurokit:aspen_wood_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_pointed_arch_1_outward",
	burntime = 0.1953125
})

minetest.register_node( "eurokit:aspen_wood_arrowslit_end_top", {
	description = "Aspen Wood Arrowslit End Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:aspen_wood_arrow_hole", "eurokit:aspen_wood_arrow_hole", "eurokit:aspen_wood_arrow_hole" },
		{ "", "eurokit:aspen_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_arrowslit_end_top",
	burntime = 0.79345703125
})

minetest.register_node( "eurokit:aspen_wood_arrowslit_end_bottom", {
	description = "Aspen Wood Arrowslit End Bottom",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:aspen_wood_arrow_hole", "" },
		{ "eurokit:aspen_wood_arrow_hole", "eurokit:aspen_wood_arrow_hole", "eurokit:aspen_wood_arrow_hole" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_arrowslit_end_bottom",
	burntime = 0.79345703125
})

minetest.register_node( "eurokit:aspen_wood_wall_indentation_2_outward", {
	description = "Aspen Wood Wall Indentation 2 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:aspen_wood_wall_indentation_2", "" },
		{ "eurokit:aspen_wood_wall_indentation_2", "eurokit:aspen_wood_wall_indentation_2", "eurokit:aspen_wood_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_wall_indentation_2 3",
	recipe = {
		{ "eurokit:aspen_wood_wall_indentation_2_outward", "eurokit:aspen_wood_wall_indentation_2_outward", "" },
		{ "eurokit:aspen_wood_wall_indentation_2_outward", "eurokit:aspen_wood_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_wall_indentation_2_outward",
	burntime = 3.154296875
})

minetest.register_node( "eurokit:aspen_wood_pillar_mid", {
	description = "Aspen Wood Pillar Mid",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pillar_mid 14",
	recipe = {
		{ "", "default:aspen_wood", "" },
		{ "", "default:aspen_wood", "" },
		{ "", "default:aspen_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 1",
	recipe = {
		{ "eurokit:aspen_wood_pillar_mid", "eurokit:aspen_wood_pillar_mid", "eurokit:aspen_wood_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_pillar_mid",
	burntime = 1.015625
})

minetest.register_node( "eurokit:aspen_wood_arrowslit_end_left", {
	description = "Aspen Wood Arrowslit End Left",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:aspen_wood_arrow_hole", "", "" },
		{ "eurokit:aspen_wood_arrow_hole", "eurokit:aspen_wood_arrow_hole", "" },
		{ "eurokit:aspen_wood_arrow_hole", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_arrowslit_end_left",
	burntime = 0.77265625
})

minetest.register_node( "eurokit:aspen_wood_wall_indentation_2", {
	description = "Aspen Wood Wall Indentation 2",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_wall_indentation_2 2",
	recipe = {
		{ "eurokit:aspen_wood_slope", "", "" },
		{ "eurokit:aspen_wood_slope", "eurokit:aspen_wood_slope", "eurokit:aspen_wood_slope" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_wall_indentation_2",
	burntime = 3.90625
})

minetest.register_node( "eurokit:aspen_wood_arch_inward", {
	description = "Aspen Wood Arch Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, inward = 1, arch = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_arch_inward 13",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "default:aspen_wood", "", "default:aspen_wood" },
		{ "", "default:aspen_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 1",
	recipe = {
		{ "eurokit:aspen_wood_arch_inward", "eurokit:aspen_wood_arch_inward", "eurokit:aspen_wood_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_arch_inward",
	burntime = 2.283935546875
})

minetest.register_node( "eurokit:aspen_wood_small_arch", {
	description = "Aspen Wood Small Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:aspen_wood", "" },
		{ "default:aspen_wood", "", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 2",
	recipe = {
		{ "eurokit:aspen_wood_small_arch", "eurokit:aspen_wood_small_arch", "" },
		{ "eurokit:aspen_wood_small_arch", "eurokit:aspen_wood_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_small_arch",
	burntime = 3.359375
})

minetest.register_node( "eurokit:aspen_wood_thin_wall", {
	description = "Aspen Wood Thin Wall",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_thin_wall 24",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "" },
		{ "default:aspen_wood", "default:aspen_wood", "" },
		{ "default:aspen_wood", "default:aspen_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:aspen_wood_thin_wall", "eurokit:aspen_wood_thin_wall", "eurokit:aspen_wood_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_thin_wall",
	burntime = 1.25
})

minetest.register_node( "eurokit:aspen_wood_counterarch_inward", {
	description = "Aspen Wood Counterarch Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_counterarch_inward 3",
	recipe = {
		{ "", "default:aspen_wood", "default:aspen_wood" },
		{ "", "", "default:aspen_wood" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 2",
	recipe = {
		{ "eurokit:aspen_wood_counterarch_inward", "", "" },
		{ "eurokit:aspen_wood_counterarch_inward", "eurokit:aspen_wood_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_counterarch_inward",
	burntime = 4.521484375
})

minetest.register_node( "eurokit:aspen_wood_small_counterarch", {
	description = "Aspen Wood Small Counterarch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_small_counterarch 17",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "", "default:aspen_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 1",
	recipe = {
		{ "eurokit:aspen_wood_small_counterarch", "eurokit:aspen_wood_small_counterarch", "" },
		{ "eurokit:aspen_wood_small_counterarch", "eurokit:aspen_wood_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_small_counterarch",
	burntime = 2.03125
})

minetest.register_node( "eurokit:aspen_wood_horizontal_arrowslit", {
	description = "Aspen Wood Horizontal Arrowslit",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:aspen_wood_arrow_hole", "eurokit:aspen_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_horizontal_arrowslit",
	burntime = 0.859375
})

minetest.register_node( "eurokit:aspen_wood_arch_outward", {
	description = "Aspen Wood Arch Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, outward = 1, arch = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_arch_outward 22",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "", "default:aspen_wood", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 1",
	recipe = {
		{ "eurokit:aspen_wood_arch_outward", "", "" },
		{ "eurokit:aspen_wood_arch_outward", "eurokit:aspen_wood_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_arch_outward",
	burntime = 0.880126953125
})

minetest.register_node( "eurokit:aspen_wood_arch", {
	description = "Aspen Wood Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_arch 18",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "default:aspen_wood", "default:aspen_wood", "" },
		{ "default:aspen_wood", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 1",
	recipe = {
		{ "eurokit:aspen_wood_arch", "eurokit:aspen_wood_arch", "" },
		{ "eurokit:aspen_wood_arch", "eurokit:aspen_wood_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_arch",
	burntime = 1.58203125
})

minetest.register_node( "eurokit:aspen_wood_half_pillar_top", {
	description = "Aspen Wood Half Pillar Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_half_pillar_top 1",
	recipe = {
		{ "eurokit:aspen_wood_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pillar_top 1",
	recipe = {
		{ "eurokit:aspen_wood_half_pillar_top", "eurokit:aspen_wood_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_half_pillar_top",
	burntime = 1.357421875
})

minetest.register_node( "eurokit:aspen_wood_pointed_arch_2_inward", {
	description = "Aspen Wood Pointed Arch 2 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:aspen_wood_pointed_arch_2", "" },
		{ "eurokit:aspen_wood_pointed_arch_2", "", "eurokit:aspen_wood_pointed_arch_2" },
		{ "eurokit:aspen_wood_pointed_arch_2", "eurokit:aspen_wood_pointed_arch_2", "eurokit:aspen_wood_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pointed_arch_2 6",
	recipe = {
		{ "eurokit:aspen_wood_pointed_arch_2_inward", "eurokit:aspen_wood_pointed_arch_2_inward", "" },
		{ "eurokit:aspen_wood_pointed_arch_2_inward", "eurokit:aspen_wood_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_pointed_arch_2_inward",
	burntime = 5.855712890625
})

minetest.register_node( "eurokit:aspen_wood_pointed_arch_2_outward", {
	description = "Aspen Wood Pointed Arch 2 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:aspen_wood_pointed_arch_2", "" },
		{ "eurokit:aspen_wood_pointed_arch_2", "eurokit:aspen_wood_pointed_arch_2", "eurokit:aspen_wood_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pointed_arch_2 3",
	recipe = {
		{ "eurokit:aspen_wood_pointed_arch_2_outward", "eurokit:aspen_wood_pointed_arch_2_outward", "eurokit:aspen_wood_pointed_arch_2_outward" },
		{ "eurokit:aspen_wood_pointed_arch_2_outward", "eurokit:aspen_wood_pointed_arch_2_outward", "eurokit:aspen_wood_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_pointed_arch_2_outward",
	burntime = 2.117919921875
})

minetest.register_node( "eurokit:aspen_wood_wall_indentation_1_outward", {
	description = "Aspen Wood Wall Indentation 1 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:aspen_wood_wall_indentation_1", "" },
		{ "eurokit:aspen_wood_wall_indentation_1", "eurokit:aspen_wood_wall_indentation_1", "eurokit:aspen_wood_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_wall_indentation_1 1",
	recipe = {
		{ "eurokit:aspen_wood_wall_indentation_1_outward", "eurokit:aspen_wood_wall_indentation_1_outward", "" },
		{ "eurokit:aspen_wood_wall_indentation_1_outward", "eurokit:aspen_wood_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_wall_indentation_1_outward",
	burntime = 0.498046875
})

minetest.register_node( "eurokit:aspen_wood_wall_indentation_1_inward", {
	description = "Aspen Wood Wall Indentation 1 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:aspen_wood_wall_indentation_1", "" },
		{ "eurokit:aspen_wood_wall_indentation_1", "", "eurokit:aspen_wood_wall_indentation_1" },
		{ "eurokit:aspen_wood_wall_indentation_1", "eurokit:aspen_wood_wall_indentation_1", "eurokit:aspen_wood_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_wall_indentation_1 5",
	recipe = {
		{ "eurokit:aspen_wood_wall_indentation_1_inward", "eurokit:aspen_wood_wall_indentation_1_inward", "eurokit:aspen_wood_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_wall_indentation_1_inward",
	burntime = 2.470703125
})

minetest.register_node( "eurokit:aspen_wood_pointed_arch_1", {
	description = "Aspen Wood Pointed Arch 1",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pointed_arch_1 11",
	recipe = {
		{ "eurokit:aspen_wood_slope", "eurokit:aspen_wood_slope", "" },
		{ "eurokit:aspen_wood_slope", "", "" },
		{ "eurokit:aspen_wood_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_slope 2",
	recipe = {
		{ "eurokit:aspen_wood_pointed_arch_1", "eurokit:aspen_wood_pointed_arch_1", "eurokit:aspen_wood_pointed_arch_1" },
		{ "eurokit:aspen_wood_pointed_arch_1", "eurokit:aspen_wood_pointed_arch_1", "eurokit:aspen_wood_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_pointed_arch_1",
	burntime = 0.8984375
})

minetest.register_node( "eurokit:aspen_wood_small_straight_arch", {
	description = "Aspen Wood Small Straight Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_small_straight_arch 8",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "default:aspen_wood", "", "default:aspen_wood" },
		{ "default:aspen_wood", "", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_small_straight_arch",
	burntime = 3.90625
})

minetest.register_node( "eurokit:aspen_wood_arrow_hole", {
	description = "Aspen Wood Arrow Hole",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_arrow_hole 21",
	recipe = {
		{ "", "default:aspen_wood", "" },
		{ "default:aspen_wood", "", "default:aspen_wood" },
		{ "", "default:aspen_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 1",
	recipe = {
		{ "eurokit:aspen_wood_arrow_hole", "eurokit:aspen_wood_arrow_hole", "" },
		{ "eurokit:aspen_wood_arrow_hole", "eurokit:aspen_wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_arrow_hole",
	burntime = 0.947265625
})

minetest.register_node( "eurokit:aspen_wood_pointed_arch_1_inward", {
	description = "Aspen Wood Pointed Arch 1 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:aspen_wood_pointed_arch_1", "" },
		{ "eurokit:aspen_wood_pointed_arch_1", "", "eurokit:aspen_wood_pointed_arch_1" },
		{ "eurokit:aspen_wood_pointed_arch_1", "eurokit:aspen_wood_pointed_arch_1", "eurokit:aspen_wood_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pointed_arch_1 7",
	recipe = {
		{ "eurokit:aspen_wood_pointed_arch_1_inward", "eurokit:aspen_wood_pointed_arch_1_inward", "" },
		{ "eurokit:aspen_wood_pointed_arch_1_inward", "eurokit:aspen_wood_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_pointed_arch_1_inward",
	burntime = 1.671142578125
})

minetest.register_node( "eurokit:aspen_wood_wall_indentation_1", {
	description = "Aspen Wood Wall Indentation 1",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_wall_indentation_1 7",
	recipe = {
		{ "eurokit:aspen_wood_slope", "eurokit:aspen_wood_slope", "" },
		{ "eurokit:aspen_wood_slope", "", "eurokit:aspen_wood_slope" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_wall_indentation_1",
	burntime = 1.40625
})

minetest.register_node( "eurokit:aspen_wood_counterarch_outward", {
	description = "Aspen Wood Counterarch Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_counterarch_outward 6",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "", "", "default:aspen_wood" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 1",
	recipe = {
		{ "eurokit:aspen_wood_counterarch_outward", "eurokit:aspen_wood_counterarch_outward", "eurokit:aspen_wood_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_counterarch_outward",
	burntime = 3.291015625
})

minetest.register_node( "eurokit:aspen_wood_arrowslit_end_right", {
	description = "Aspen Wood Arrowslit End Right",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:aspen_wood_arrow_hole" },
		{ "", "eurokit:aspen_wood_arrow_hole", "eurokit:aspen_wood_arrow_hole" },
		{ "", "", "eurokit:aspen_wood_arrow_hole" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_arrowslit_end_right",
	burntime = 0.78125
})

minetest.register_node( "eurokit:aspen_wood_pillar_base", {
	description = "Aspen Wood Pillar Base",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_pillar_base 7",
	recipe = {
		{ "", "default:aspen_wood", "" },
		{ "", "default:aspen_wood", "" },
		{ "", "default:aspen_wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:aspen_wood 1",
	recipe = {
		{ "eurokit:aspen_wood_pillar_base", "eurokit:aspen_wood_pillar_base", "eurokit:aspen_wood_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_pillar_base",
	burntime = 1.97265625
})

minetest.register_node( "eurokit:aspen_wood_frieze_outward", {
	description = "Aspen Wood Frieze Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_frieze_outward 99",
	recipe = {
		{ "", "", "default:aspen_wood" },
		{ "", "", "" },
		{ "", "", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_frieze_outward",
	burntime = 0.02197265625
})

minetest.register_node( "eurokit:aspen_wood_frieze", {
	description = "Aspen Wood Frieze",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_frieze 99",
	recipe = {
		{ "", "default:aspen_wood", "default:aspen_wood" },
		{ "", "", "" },
		{ "", "default:aspen_wood", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_frieze",
	burntime = 0.1953125
})

minetest.register_node( "eurokit:aspen_wood_fancy_frieze_outward", {
	description = "Aspen Wood Fancy Frieze Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, outward = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_fancy_frieze_outward 99",
	recipe = {
		{ "", "default:aspen_wood", "default:aspen_wood" },
		{ "", "", "default:aspen_wood" },
		{ "", "default:aspen_wood", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_fancy_frieze_outward",
	burntime = 0.023388671875
})

minetest.register_node( "eurokit:aspen_wood_side_rail_oblique", {
	description = "Aspen Wood Side Rail Oblique",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_side_rail_oblique")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail_oblique 93",
	recipe = {
		{ "default:aspen_wood", "", "" },
		{ "default:aspen_wood", "default:aspen_wood", "" },
		{ "default:aspen_wood", "", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_side_rail_oblique",
	burntime = 0.2683984375
})

minetest.register_node( "eurokit:aspen_wood_frieze_inward", {
	description = "Aspen Wood Frieze Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, inward = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_frieze_inward 81",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "", "", "" },
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_frieze_inward",
	burntime = 0.36865234375
})

minetest.register_node( "eurokit:aspen_wood_fancy_frieze_inward", {
	description = "Aspen Wood Fancy Frieze Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, inward = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_fancy_frieze_inward 82",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "default:aspen_wood", "default:aspen_wood", "" },
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_fancy_frieze_inward",
	burntime = 0.48583984375
})

minetest.register_node( "eurokit:aspen_wood_side_rail_oblique_corner_counterclockwise", {
	description = "Aspen Wood Side Rail Oblique Corner Counterclockwise",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_counterclockwise,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_side_rail_oblique_corner_counterclockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail_oblique_corner_counterclockwise 2",
	recipe = {
		{ "", "eurokit:aspen_wood_side_rail_oblique", "eurokit:aspen_wood_side_rail_oblique" },
		{ "", "", "eurokit:aspen_wood_side_rail_oblique" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail_oblique 2",
	recipe = {
		{ "eurokit:aspen_wood_side_rail_oblique_corner_counterclockwise", "eurokit:aspen_wood_side_rail_oblique_corner_counterclockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_side_rail_oblique_corner_counterclockwise",
	burntime = 0.3564453125
})

minetest.register_node( "eurokit:aspen_wood_side_rail_oblique_corner_clockwise", {
	description = "Aspen Wood Side Rail Oblique Corner Clockwise",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_clockwise,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_side_rail_oblique_corner_clockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail_oblique_corner_clockwise 2",
	recipe = {
		{ "eurokit:aspen_wood_side_rail_oblique", "eurokit:aspen_wood_side_rail_oblique", "" },
		{ "eurokit:aspen_wood_side_rail_oblique", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail_oblique 2",
	recipe = {
		{ "eurokit:aspen_wood_side_rail_oblique_corner_clockwise", "eurokit:aspen_wood_side_rail_oblique_corner_clockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_side_rail_oblique_corner_clockwise",
	burntime = 0.3564453125
})

minetest.register_node( "eurokit:aspen_wood_side_rail_top_corner", {
	description = "Aspen Wood Side Rail Top Corner",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, corner = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top_corner,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_side_rail_top_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail_top_corner 2",
	recipe = {
		{ "eurokit:aspen_wood_side_rail_top", "eurokit:aspen_wood_side_rail_top", "" },
		{ "eurokit:aspen_wood_side_rail_top", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail_top 2",
	recipe = {
		{ "eurokit:aspen_wood_side_rail_top_corner", "eurokit:aspen_wood_side_rail_top_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_side_rail_top_corner",
	burntime = 0.419921875
})

minetest.register_node( "eurokit:aspen_wood_fancy_frieze", {
	description = "Aspen Wood Fancy Frieze",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_fancy_frieze 99",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "", "default:aspen_wood", "" },
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_fancy_frieze",
	burntime = 0.25390625
})

minetest.register_node( "eurokit:aspen_wood_side_rail_corner", {
	description = "Aspen Wood Side Rail Corner",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, corner = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_corner,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_side_rail_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail_corner 3",
	recipe = {
		{ "eurokit:aspen_wood_side_rail", "eurokit:aspen_wood_side_rail", "" },
		{ "eurokit:aspen_wood_side_rail", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail 2",
	recipe = {
		{ "eurokit:aspen_wood_side_rail_corner", "eurokit:aspen_wood_side_rail_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_side_rail_corner",
	burntime = 0.234375
})

minetest.register_node( "eurokit:aspen_wood_side_rail_top", {
	description = "Aspen Wood Side Rail Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, raillingtop = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_side_rail_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail_top 89",
	recipe = {
		{ "default:aspen_wood", "default:aspen_wood", "default:aspen_wood" },
		{ "default:aspen_wood", "", "default:aspen_wood" },
		{ "default:aspen_wood", "", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_side_rail_top",
	burntime = 0.390625
})

minetest.register_node( "eurokit:aspen_wood_side_rail", {
	description = "Aspen Wood Side Rail",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1 },
	tiles = { "default_aspen_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:aspen_wood_side_rail")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:aspen_wood_side_rail 99",
	recipe = {
		{ "default:aspen_wood", "", "default:aspen_wood" },
		{ "default:aspen_wood", "", "default:aspen_wood" },
		{ "default:aspen_wood", "", "default:aspen_wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:aspen_wood_side_rail",
	burntime = 0.234375
})

minetest.register_node( "eurokit:desert_stone_block_half_pillar_mid", {
	description = "Desert Stone Block Half Pillar Mid",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_half_pillar_mid 1",
	recipe = {
		{ "eurokit:desert_stone_block_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pillar_mid 2",
	recipe = {
		{ "eurokit:desert_stone_block_half_pillar_mid", "eurokit:desert_stone_block_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_pillar_top", {
	description = "Desert Stone Block Pillar Top",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pillar_top 12",
	recipe = {
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" },
		{ "", "default:desert_stone_block", "" },
		{ "", "default:desert_stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "eurokit:desert_stone_block_pillar_top", "eurokit:desert_stone_block_pillar_top", "eurokit:desert_stone_block_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_counterarch", {
	description = "Desert Stone Block Counterarch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_counterarch 7",
	recipe = {
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" },
		{ "", "default:desert_stone_block", "default:desert_stone_block" },
		{ "", "", "default:desert_stone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 3",
	recipe = {
		{ "eurokit:desert_stone_block_counterarch", "eurokit:desert_stone_block_counterarch", "" },
		{ "eurokit:desert_stone_block_counterarch", "eurokit:desert_stone_block_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_vertical_arrowslit", {
	description = "Desert Stone Block Vertical Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:desert_stone_block_arrow_hole", "" },
		{ "", "eurokit:desert_stone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_wall_indentation_2_inward", {
	description = "Desert Stone Block Wall Indentation 2 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:desert_stone_block_wall_indentation_2", "" },
		{ "eurokit:desert_stone_block_wall_indentation_2", "", "eurokit:desert_stone_block_wall_indentation_2" },
		{ "eurokit:desert_stone_block_wall_indentation_2", "eurokit:desert_stone_block_wall_indentation_2", "eurokit:desert_stone_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_wall_indentation_2 4",
	recipe = {
		{ "eurokit:desert_stone_block_wall_indentation_2_inward", "eurokit:desert_stone_block_wall_indentation_2_inward", "eurokit:desert_stone_block_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_half_pillar_base", {
	description = "Desert Stone Block Half Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_half_pillar_base 1",
	recipe = {
		{ "eurokit:desert_stone_block_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pillar_base 1",
	recipe = {
		{ "eurokit:desert_stone_block_half_pillar_base", "eurokit:desert_stone_block_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_small_pointed_arch", {
	description = "Desert Stone Block Small Pointed Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_small_pointed_arch 9",
	recipe = {
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope" },
		{ "eurokit:desert_stone_block_slope", "", "eurokit:desert_stone_block_slope" },
		{ "eurokit:desert_stone_block_slope", "", "eurokit:desert_stone_block_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_pointed_arch_2", {
	description = "Desert Stone Block Pointed Arch 2",
	groups = { cracky = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "" },
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "" },
		{ "eurokit:desert_stone_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_slope 5",
	recipe = {
		{ "eurokit:desert_stone_block_pointed_arch_2", "eurokit:desert_stone_block_pointed_arch_2", "" },
		{ "eurokit:desert_stone_block_pointed_arch_2", "eurokit:desert_stone_block_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_machicolation", {
	description = "Desert Stone Block Machicolation",
	groups = { cracky = 2, machicolation = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_machicolation 18",
	recipe = {
		{ "default:desert_stone_block", "", "default:desert_stone_block" },
		{ "default:desert_stone_block", "", "default:desert_stone_block" },
		{ "default:desert_stone_block", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_pointed_arch_1_outward", {
	description = "Desert Stone Block Pointed Arch 1 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_block_pointed_arch_1", "" },
		{ "eurokit:desert_stone_block_pointed_arch_1", "eurokit:desert_stone_block_pointed_arch_1", "eurokit:desert_stone_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pointed_arch_1 1",
	recipe = {
		{ "eurokit:desert_stone_block_pointed_arch_1_outward", "eurokit:desert_stone_block_pointed_arch_1_outward", "eurokit:desert_stone_block_pointed_arch_1_outward" },
		{ "eurokit:desert_stone_block_pointed_arch_1_outward", "eurokit:desert_stone_block_pointed_arch_1_outward", "eurokit:desert_stone_block_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_arrowslit_end_top", {
	description = "Desert Stone Block Arrowslit End Top",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:desert_stone_block_arrow_hole", "eurokit:desert_stone_block_arrow_hole", "eurokit:desert_stone_block_arrow_hole" },
		{ "", "eurokit:desert_stone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_arrowslit_end_bottom", {
	description = "Desert Stone Block Arrowslit End Bottom",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_block_arrow_hole", "" },
		{ "eurokit:desert_stone_block_arrow_hole", "eurokit:desert_stone_block_arrow_hole", "eurokit:desert_stone_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_wall_indentation_2_outward", {
	description = "Desert Stone Block Wall Indentation 2 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_block_wall_indentation_2", "" },
		{ "eurokit:desert_stone_block_wall_indentation_2", "eurokit:desert_stone_block_wall_indentation_2", "eurokit:desert_stone_block_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_wall_indentation_2 3",
	recipe = {
		{ "eurokit:desert_stone_block_wall_indentation_2_outward", "eurokit:desert_stone_block_wall_indentation_2_outward", "" },
		{ "eurokit:desert_stone_block_wall_indentation_2_outward", "eurokit:desert_stone_block_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_pillar_mid", {
	description = "Desert Stone Block Pillar Mid",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pillar_mid 14",
	recipe = {
		{ "", "default:desert_stone_block", "" },
		{ "", "default:desert_stone_block", "" },
		{ "", "default:desert_stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "eurokit:desert_stone_block_pillar_mid", "eurokit:desert_stone_block_pillar_mid", "eurokit:desert_stone_block_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_arrowslit_end_left", {
	description = "Desert Stone Block Arrowslit End Left",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:desert_stone_block_arrow_hole", "", "" },
		{ "eurokit:desert_stone_block_arrow_hole", "eurokit:desert_stone_block_arrow_hole", "" },
		{ "eurokit:desert_stone_block_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_wall_indentation_2", {
	description = "Desert Stone Block Wall Indentation 2",
	groups = { cracky = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_wall_indentation_2 2",
	recipe = {
		{ "eurokit:desert_stone_block_slope", "", "" },
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_arch_inward", {
	description = "Desert Stone Block Arch Inward",
	groups = { cracky = 2, inward = 1, arch = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_arch_inward 13",
	recipe = {
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" },
		{ "default:desert_stone_block", "", "default:desert_stone_block" },
		{ "", "default:desert_stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "eurokit:desert_stone_block_arch_inward", "eurokit:desert_stone_block_arch_inward", "eurokit:desert_stone_block_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_small_arch", {
	description = "Desert Stone Block Small Arch",
	groups = { cracky = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:desert_stone_block", "" },
		{ "default:desert_stone_block", "", "default:desert_stone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 2",
	recipe = {
		{ "eurokit:desert_stone_block_small_arch", "eurokit:desert_stone_block_small_arch", "" },
		{ "eurokit:desert_stone_block_small_arch", "eurokit:desert_stone_block_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_thin_wall", {
	description = "Desert Stone Block Thin Wall",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_thin_wall 24",
	recipe = {
		{ "default:desert_stone_block", "default:desert_stone_block", "" },
		{ "default:desert_stone_block", "default:desert_stone_block", "" },
		{ "default:desert_stone_block", "default:desert_stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_stone_block_thin_wall", "eurokit:desert_stone_block_thin_wall", "eurokit:desert_stone_block_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_counterarch_inward", {
	description = "Desert Stone Block Counterarch Inward",
	groups = { cracky = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_counterarch_inward 3",
	recipe = {
		{ "", "default:desert_stone_block", "default:desert_stone_block" },
		{ "", "", "default:desert_stone_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 2",
	recipe = {
		{ "eurokit:desert_stone_block_counterarch_inward", "", "" },
		{ "eurokit:desert_stone_block_counterarch_inward", "eurokit:desert_stone_block_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_small_counterarch", {
	description = "Desert Stone Block Small Counterarch",
	groups = { cracky = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_small_counterarch 17",
	recipe = {
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" },
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" },
		{ "", "default:desert_stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "eurokit:desert_stone_block_small_counterarch", "eurokit:desert_stone_block_small_counterarch", "" },
		{ "eurokit:desert_stone_block_small_counterarch", "eurokit:desert_stone_block_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_horizontal_arrowslit", {
	description = "Desert Stone Block Horizontal Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_stone_block_arrow_hole", "eurokit:desert_stone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_arch_outward", {
	description = "Desert Stone Block Arch Outward",
	groups = { cracky = 2, outward = 1, arch = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_arch_outward 22",
	recipe = {
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" },
		{ "", "default:desert_stone_block", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "eurokit:desert_stone_block_arch_outward", "", "" },
		{ "eurokit:desert_stone_block_arch_outward", "eurokit:desert_stone_block_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_arch", {
	description = "Desert Stone Block Arch",
	groups = { cracky = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_arch 18",
	recipe = {
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" },
		{ "default:desert_stone_block", "default:desert_stone_block", "" },
		{ "default:desert_stone_block", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "eurokit:desert_stone_block_arch", "eurokit:desert_stone_block_arch", "" },
		{ "eurokit:desert_stone_block_arch", "eurokit:desert_stone_block_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_half_pillar_top", {
	description = "Desert Stone Block Half Pillar Top",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_half_pillar_top 1",
	recipe = {
		{ "eurokit:desert_stone_block_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pillar_top 1",
	recipe = {
		{ "eurokit:desert_stone_block_half_pillar_top", "eurokit:desert_stone_block_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_pointed_arch_2_inward", {
	description = "Desert Stone Block Pointed Arch 2 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:desert_stone_block_pointed_arch_2", "" },
		{ "eurokit:desert_stone_block_pointed_arch_2", "", "eurokit:desert_stone_block_pointed_arch_2" },
		{ "eurokit:desert_stone_block_pointed_arch_2", "eurokit:desert_stone_block_pointed_arch_2", "eurokit:desert_stone_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pointed_arch_2 6",
	recipe = {
		{ "eurokit:desert_stone_block_pointed_arch_2_inward", "eurokit:desert_stone_block_pointed_arch_2_inward", "" },
		{ "eurokit:desert_stone_block_pointed_arch_2_inward", "eurokit:desert_stone_block_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_pointed_arch_2_outward", {
	description = "Desert Stone Block Pointed Arch 2 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_block_pointed_arch_2", "" },
		{ "eurokit:desert_stone_block_pointed_arch_2", "eurokit:desert_stone_block_pointed_arch_2", "eurokit:desert_stone_block_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_stone_block_pointed_arch_2_outward", "eurokit:desert_stone_block_pointed_arch_2_outward", "eurokit:desert_stone_block_pointed_arch_2_outward" },
		{ "eurokit:desert_stone_block_pointed_arch_2_outward", "eurokit:desert_stone_block_pointed_arch_2_outward", "eurokit:desert_stone_block_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_wall_indentation_1_outward", {
	description = "Desert Stone Block Wall Indentation 1 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_block_wall_indentation_1", "" },
		{ "eurokit:desert_stone_block_wall_indentation_1", "eurokit:desert_stone_block_wall_indentation_1", "eurokit:desert_stone_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_wall_indentation_1 1",
	recipe = {
		{ "eurokit:desert_stone_block_wall_indentation_1_outward", "eurokit:desert_stone_block_wall_indentation_1_outward", "" },
		{ "eurokit:desert_stone_block_wall_indentation_1_outward", "eurokit:desert_stone_block_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_wall_indentation_1_inward", {
	description = "Desert Stone Block Wall Indentation 1 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_stone_block_wall_indentation_1", "" },
		{ "eurokit:desert_stone_block_wall_indentation_1", "", "eurokit:desert_stone_block_wall_indentation_1" },
		{ "eurokit:desert_stone_block_wall_indentation_1", "eurokit:desert_stone_block_wall_indentation_1", "eurokit:desert_stone_block_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_wall_indentation_1 5",
	recipe = {
		{ "eurokit:desert_stone_block_wall_indentation_1_inward", "eurokit:desert_stone_block_wall_indentation_1_inward", "eurokit:desert_stone_block_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_pointed_arch_1", {
	description = "Desert Stone Block Pointed Arch 1",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pointed_arch_1 11",
	recipe = {
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "" },
		{ "eurokit:desert_stone_block_slope", "", "" },
		{ "eurokit:desert_stone_block_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_slope 2",
	recipe = {
		{ "eurokit:desert_stone_block_pointed_arch_1", "eurokit:desert_stone_block_pointed_arch_1", "eurokit:desert_stone_block_pointed_arch_1" },
		{ "eurokit:desert_stone_block_pointed_arch_1", "eurokit:desert_stone_block_pointed_arch_1", "eurokit:desert_stone_block_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_small_straight_arch", {
	description = "Desert Stone Block Small Straight Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_small_straight_arch 8",
	recipe = {
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" },
		{ "default:desert_stone_block", "", "default:desert_stone_block" },
		{ "default:desert_stone_block", "", "default:desert_stone_block" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_arrow_hole", {
	description = "Desert Stone Block Arrow Hole",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_arrow_hole 21",
	recipe = {
		{ "", "default:desert_stone_block", "" },
		{ "default:desert_stone_block", "", "default:desert_stone_block" },
		{ "", "default:desert_stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "eurokit:desert_stone_block_arrow_hole", "eurokit:desert_stone_block_arrow_hole", "" },
		{ "eurokit:desert_stone_block_arrow_hole", "eurokit:desert_stone_block_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_pointed_arch_1_inward", {
	description = "Desert Stone Block Pointed Arch 1 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_stone_block_pointed_arch_1", "" },
		{ "eurokit:desert_stone_block_pointed_arch_1", "", "eurokit:desert_stone_block_pointed_arch_1" },
		{ "eurokit:desert_stone_block_pointed_arch_1", "eurokit:desert_stone_block_pointed_arch_1", "eurokit:desert_stone_block_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pointed_arch_1 7",
	recipe = {
		{ "eurokit:desert_stone_block_pointed_arch_1_inward", "eurokit:desert_stone_block_pointed_arch_1_inward", "" },
		{ "eurokit:desert_stone_block_pointed_arch_1_inward", "eurokit:desert_stone_block_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_wall_indentation_1", {
	description = "Desert Stone Block Wall Indentation 1",
	groups = { cracky = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_wall_indentation_1 7",
	recipe = {
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "" },
		{ "eurokit:desert_stone_block_slope", "", "eurokit:desert_stone_block_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_counterarch_outward", {
	description = "Desert Stone Block Counterarch Outward",
	groups = { cracky = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_counterarch_outward 6",
	recipe = {
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" },
		{ "", "", "default:desert_stone_block" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "eurokit:desert_stone_block_counterarch_outward", "eurokit:desert_stone_block_counterarch_outward", "eurokit:desert_stone_block_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_arrowslit_end_right", {
	description = "Desert Stone Block Arrowslit End Right",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_stone_block_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:desert_stone_block_arrow_hole" },
		{ "", "eurokit:desert_stone_block_arrow_hole", "eurokit:desert_stone_block_arrow_hole" },
		{ "", "", "eurokit:desert_stone_block_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_pillar_base", {
	description = "Desert Stone Block Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_pillar_base 7",
	recipe = {
		{ "", "default:desert_stone_block", "" },
		{ "", "default:desert_stone_block", "" },
		{ "", "default:desert_stone_block", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "eurokit:desert_stone_block_pillar_base", "eurokit:desert_stone_block_pillar_base", "eurokit:desert_stone_block_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_long_slope_2_outward", {
	description = "Desert Stone Block Long Slope 2 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_block_long_slope_2", "" },
		{ "eurokit:desert_stone_block_long_slope_2", "eurokit:desert_stone_block_long_slope_2", "eurokit:desert_stone_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_slope_outward", {
	description = "Desert Stone Block Slope Outward",
	groups = { cracky = 2, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:desert_stone_block" },
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 1",
	recipe = {
		{ "eurokit:desert_stone_block_slope_outward", "eurokit:desert_stone_block_slope_outward", "eurokit:desert_stone_block_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_long_slope_2", {
	description = "Desert Stone Block Long Slope 2",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_block_slope", "" },
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_long_slope_1_outward", {
	description = "Desert Stone Block Long Slope 1 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_block_long_slope_1", "" },
		{ "eurokit:desert_stone_block_long_slope_1", "eurokit:desert_stone_block_long_slope_1", "eurokit:desert_stone_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_long_slope_3_inward", {
	description = "Desert Stone Block Long Slope 3 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:desert_stone_block_long_slope_3", "" },
		{ "eurokit:desert_stone_block_long_slope_3", "", "eurokit:desert_stone_block_long_slope_3" },
		{ "eurokit:desert_stone_block_long_slope_3", "eurokit:desert_stone_block_long_slope_3", "eurokit:desert_stone_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_long_slope_1", {
	description = "Desert Stone Block Long Slope 1",
	groups = { cracky = 2, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_stone_block_slope", "", "" },
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_long_slope_3_outward", {
	description = "Desert Stone Block Long Slope 3 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_stone_block_long_slope_3", "" },
		{ "eurokit:desert_stone_block_long_slope_3", "eurokit:desert_stone_block_long_slope_3", "eurokit:desert_stone_block_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_long_slope_3", {
	description = "Desert Stone Block Long Slope 3",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:desert_stone_block_slope" },
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_long_slope_2_inward", {
	description = "Desert Stone Block Long Slope 2 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:desert_stone_block_long_slope_2", "" },
		{ "eurokit:desert_stone_block_long_slope_2", "", "eurokit:desert_stone_block_long_slope_2" },
		{ "eurokit:desert_stone_block_long_slope_2", "eurokit:desert_stone_block_long_slope_2", "eurokit:desert_stone_block_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_slope_inward", {
	description = "Desert Stone Block Slope Inward",
	groups = { cracky = 2, inward = 1, slope = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_slope_inward 7",
	recipe = {
		{ "", "", "default:desert_stone_block" },
		{ "", "default:desert_stone_block", "" },
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 2",
	recipe = {
		{ "eurokit:desert_stone_block_slope_inward", "", "" },
		{ "eurokit:desert_stone_block_slope_inward", "eurokit:desert_stone_block_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_long_slope_1_inward", {
	description = "Desert Stone Block Long Slope 1 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:desert_stone_block_long_slope_1", "" },
		{ "eurokit:desert_stone_block_long_slope_1", "", "eurokit:desert_stone_block_long_slope_1" },
		{ "eurokit:desert_stone_block_long_slope_1", "eurokit:desert_stone_block_long_slope_1", "eurokit:desert_stone_block_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_stone_block_slope", {
	description = "Desert Stone Block Slope",
	groups = { cracky = 2, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_desert_stone_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_stone_block_slope 11",
	recipe = {
		{ "", "", "default:desert_stone_block" },
		{ "", "default:desert_stone_block", "default:desert_stone_block" },
		{ "default:desert_stone_block", "default:desert_stone_block", "default:desert_stone_block" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_stone_block 2",
	recipe = {
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "" },
		{ "eurokit:desert_stone_block_slope", "eurokit:desert_stone_block_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:wood_half_pillar_mid", {
	description = "Wood Half Pillar Mid",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_half_pillar_mid 1",
	recipe = {
		{ "eurokit:wood_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pillar_mid 2",
	recipe = {
		{ "eurokit:wood_half_pillar_mid", "eurokit:wood_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_half_pillar_mid",
	burntime = 1.859375
})

minetest.register_node( "eurokit:wood_pillar_top", {
	description = "Wood Pillar Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pillar_top 12",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "", "default:wood", "" },
		{ "", "default:wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 1",
	recipe = {
		{ "eurokit:wood_pillar_top", "eurokit:wood_pillar_top", "eurokit:wood_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_pillar_top",
	burntime = 2.76171875
})

minetest.register_node( "eurokit:wood_counterarch", {
	description = "Wood Counterarch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_counterarch 7",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "", "default:wood", "default:wood" },
		{ "", "", "default:wood" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 3",
	recipe = {
		{ "eurokit:wood_counterarch", "eurokit:wood_counterarch", "" },
		{ "eurokit:wood_counterarch", "eurokit:wood_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_counterarch",
	burntime = 5.46875
})

minetest.register_node( "eurokit:wood_vertical_arrowslit", {
	description = "Wood Vertical Arrowslit",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:wood_arrow_hole", "" },
		{ "", "eurokit:wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_vertical_arrowslit",
	burntime = 1.203125
})

minetest.register_node( "eurokit:wood_wall_indentation_2_inward", {
	description = "Wood Wall Indentation 2 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:wood_wall_indentation_2", "" },
		{ "eurokit:wood_wall_indentation_2", "", "eurokit:wood_wall_indentation_2" },
		{ "eurokit:wood_wall_indentation_2", "eurokit:wood_wall_indentation_2", "eurokit:wood_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_wall_indentation_2 4",
	recipe = {
		{ "eurokit:wood_wall_indentation_2_inward", "eurokit:wood_wall_indentation_2_inward", "eurokit:wood_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_wall_indentation_2_inward",
	burntime = 7.888671875
})

minetest.register_node( "eurokit:wood_half_pillar_base", {
	description = "Wood Half Pillar Base",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_half_pillar_base 1",
	recipe = {
		{ "eurokit:wood_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pillar_base 1",
	recipe = {
		{ "eurokit:wood_half_pillar_base", "eurokit:wood_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_half_pillar_base",
	burntime = 1.900390625
})

minetest.register_node( "eurokit:wood_small_pointed_arch", {
	description = "Wood Small Pointed Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_small_pointed_arch 9",
	recipe = {
		{ "eurokit:wood_slope", "eurokit:wood_slope", "eurokit:wood_slope" },
		{ "eurokit:wood_slope", "", "eurokit:wood_slope" },
		{ "eurokit:wood_slope", "", "eurokit:wood_slope" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_small_pointed_arch",
	burntime = 2.734375
})

minetest.register_node( "eurokit:wood_pointed_arch_2", {
	description = "Wood Pointed Arch 2",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pointed_arch_2 3",
	recipe = {
		{ "eurokit:wood_slope", "eurokit:wood_slope", "" },
		{ "eurokit:wood_slope", "eurokit:wood_slope", "" },
		{ "eurokit:wood_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_slope 5",
	recipe = {
		{ "eurokit:wood_pointed_arch_2", "eurokit:wood_pointed_arch_2", "" },
		{ "eurokit:wood_pointed_arch_2", "eurokit:wood_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_pointed_arch_2",
	burntime = 4.73046875
})

minetest.register_node( "eurokit:wood_machicolation", {
	description = "Wood Machicolation",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, machicolation = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_machicolation 18",
	recipe = {
		{ "default:wood", "", "default:wood" },
		{ "default:wood", "", "default:wood" },
		{ "default:wood", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_machicolation",
	burntime = 1.873046875
})

minetest.register_node( "eurokit:wood_pointed_arch_1_outward", {
	description = "Wood Pointed Arch 1 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:wood_pointed_arch_1", "" },
		{ "eurokit:wood_pointed_arch_1", "eurokit:wood_pointed_arch_1", "eurokit:wood_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pointed_arch_1 1",
	recipe = {
		{ "eurokit:wood_pointed_arch_1_outward", "eurokit:wood_pointed_arch_1_outward", "eurokit:wood_pointed_arch_1_outward" },
		{ "eurokit:wood_pointed_arch_1_outward", "eurokit:wood_pointed_arch_1_outward", "eurokit:wood_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_pointed_arch_1_outward",
	burntime = 0.2734375
})

minetest.register_node( "eurokit:wood_arrowslit_end_top", {
	description = "Wood Arrowslit End Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:wood_arrow_hole", "eurokit:wood_arrow_hole", "eurokit:wood_arrow_hole" },
		{ "", "eurokit:wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_arrowslit_end_top",
	burntime = 1.11083984375
})

minetest.register_node( "eurokit:wood_arrowslit_end_bottom", {
	description = "Wood Arrowslit End Bottom",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:wood_arrow_hole", "" },
		{ "eurokit:wood_arrow_hole", "eurokit:wood_arrow_hole", "eurokit:wood_arrow_hole" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_arrowslit_end_bottom",
	burntime = 1.11083984375
})

minetest.register_node( "eurokit:wood_wall_indentation_2_outward", {
	description = "Wood Wall Indentation 2 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:wood_wall_indentation_2", "" },
		{ "eurokit:wood_wall_indentation_2", "eurokit:wood_wall_indentation_2", "eurokit:wood_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_wall_indentation_2 3",
	recipe = {
		{ "eurokit:wood_wall_indentation_2_outward", "eurokit:wood_wall_indentation_2_outward", "" },
		{ "eurokit:wood_wall_indentation_2_outward", "eurokit:wood_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_wall_indentation_2_outward",
	burntime = 4.416015625
})

minetest.register_node( "eurokit:wood_pillar_mid", {
	description = "Wood Pillar Mid",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pillar_mid 14",
	recipe = {
		{ "", "default:wood", "" },
		{ "", "default:wood", "" },
		{ "", "default:wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 1",
	recipe = {
		{ "eurokit:wood_pillar_mid", "eurokit:wood_pillar_mid", "eurokit:wood_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_pillar_mid",
	burntime = 1.421875
})

minetest.register_node( "eurokit:wood_arrowslit_end_left", {
	description = "Wood Arrowslit End Left",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:wood_arrow_hole", "", "" },
		{ "eurokit:wood_arrow_hole", "eurokit:wood_arrow_hole", "" },
		{ "eurokit:wood_arrow_hole", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_arrowslit_end_left",
	burntime = 1.08171875
})

minetest.register_node( "eurokit:wood_wall_indentation_2", {
	description = "Wood Wall Indentation 2",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_wall_indentation_2 2",
	recipe = {
		{ "eurokit:wood_slope", "", "" },
		{ "eurokit:wood_slope", "eurokit:wood_slope", "eurokit:wood_slope" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_wall_indentation_2",
	burntime = 5.46875
})

minetest.register_node( "eurokit:wood_arch_inward", {
	description = "Wood Arch Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, inward = 1, arch = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_arch_inward 13",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "default:wood", "", "default:wood" },
		{ "", "default:wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 1",
	recipe = {
		{ "eurokit:wood_arch_inward", "eurokit:wood_arch_inward", "eurokit:wood_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_arch_inward",
	burntime = 3.197509765625
})

minetest.register_node( "eurokit:wood_small_arch", {
	description = "Wood Small Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:wood", "" },
		{ "default:wood", "", "default:wood" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 2",
	recipe = {
		{ "eurokit:wood_small_arch", "eurokit:wood_small_arch", "" },
		{ "eurokit:wood_small_arch", "eurokit:wood_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_small_arch",
	burntime = 4.703125
})

minetest.register_node( "eurokit:wood_thin_wall", {
	description = "Wood Thin Wall",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_thin_wall 24",
	recipe = {
		{ "default:wood", "default:wood", "" },
		{ "default:wood", "default:wood", "" },
		{ "default:wood", "default:wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:wood_thin_wall", "eurokit:wood_thin_wall", "eurokit:wood_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_thin_wall",
	burntime = 1.75
})

minetest.register_node( "eurokit:wood_counterarch_inward", {
	description = "Wood Counterarch Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_counterarch_inward 3",
	recipe = {
		{ "", "default:wood", "default:wood" },
		{ "", "", "default:wood" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 2",
	recipe = {
		{ "eurokit:wood_counterarch_inward", "", "" },
		{ "eurokit:wood_counterarch_inward", "eurokit:wood_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_counterarch_inward",
	burntime = 6.330078125
})

minetest.register_node( "eurokit:wood_small_counterarch", {
	description = "Wood Small Counterarch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_small_counterarch 17",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "default:wood", "default:wood", "default:wood" },
		{ "", "default:wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 1",
	recipe = {
		{ "eurokit:wood_small_counterarch", "eurokit:wood_small_counterarch", "" },
		{ "eurokit:wood_small_counterarch", "eurokit:wood_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_small_counterarch",
	burntime = 2.84375
})

minetest.register_node( "eurokit:wood_horizontal_arrowslit", {
	description = "Wood Horizontal Arrowslit",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:wood_arrow_hole", "eurokit:wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_horizontal_arrowslit",
	burntime = 1.203125
})

minetest.register_node( "eurokit:wood_arch_outward", {
	description = "Wood Arch Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, outward = 1, arch = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_arch_outward 22",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "", "default:wood", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 1",
	recipe = {
		{ "eurokit:wood_arch_outward", "", "" },
		{ "eurokit:wood_arch_outward", "eurokit:wood_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_arch_outward",
	burntime = 1.232177734375
})

minetest.register_node( "eurokit:wood_arch", {
	description = "Wood Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_arch 18",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "default:wood", "default:wood", "" },
		{ "default:wood", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 1",
	recipe = {
		{ "eurokit:wood_arch", "eurokit:wood_arch", "" },
		{ "eurokit:wood_arch", "eurokit:wood_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_arch",
	burntime = 2.21484375
})

minetest.register_node( "eurokit:wood_half_pillar_top", {
	description = "Wood Half Pillar Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_half_pillar_top 1",
	recipe = {
		{ "eurokit:wood_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pillar_top 1",
	recipe = {
		{ "eurokit:wood_half_pillar_top", "eurokit:wood_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_half_pillar_top",
	burntime = 1.900390625
})

minetest.register_node( "eurokit:wood_pointed_arch_2_inward", {
	description = "Wood Pointed Arch 2 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:wood_pointed_arch_2", "" },
		{ "eurokit:wood_pointed_arch_2", "", "eurokit:wood_pointed_arch_2" },
		{ "eurokit:wood_pointed_arch_2", "eurokit:wood_pointed_arch_2", "eurokit:wood_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pointed_arch_2 6",
	recipe = {
		{ "eurokit:wood_pointed_arch_2_inward", "eurokit:wood_pointed_arch_2_inward", "" },
		{ "eurokit:wood_pointed_arch_2_inward", "eurokit:wood_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_pointed_arch_2_inward",
	burntime = 8.197998046875
})

minetest.register_node( "eurokit:wood_pointed_arch_2_outward", {
	description = "Wood Pointed Arch 2 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:wood_pointed_arch_2", "" },
		{ "eurokit:wood_pointed_arch_2", "eurokit:wood_pointed_arch_2", "eurokit:wood_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pointed_arch_2 3",
	recipe = {
		{ "eurokit:wood_pointed_arch_2_outward", "eurokit:wood_pointed_arch_2_outward", "eurokit:wood_pointed_arch_2_outward" },
		{ "eurokit:wood_pointed_arch_2_outward", "eurokit:wood_pointed_arch_2_outward", "eurokit:wood_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_pointed_arch_2_outward",
	burntime = 2.965087890625
})

minetest.register_node( "eurokit:wood_wall_indentation_1_outward", {
	description = "Wood Wall Indentation 1 Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:wood_wall_indentation_1", "" },
		{ "eurokit:wood_wall_indentation_1", "eurokit:wood_wall_indentation_1", "eurokit:wood_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_wall_indentation_1 1",
	recipe = {
		{ "eurokit:wood_wall_indentation_1_outward", "eurokit:wood_wall_indentation_1_outward", "" },
		{ "eurokit:wood_wall_indentation_1_outward", "eurokit:wood_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_wall_indentation_1_outward",
	burntime = 0.697265625
})

minetest.register_node( "eurokit:wood_wall_indentation_1_inward", {
	description = "Wood Wall Indentation 1 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:wood_wall_indentation_1", "" },
		{ "eurokit:wood_wall_indentation_1", "", "eurokit:wood_wall_indentation_1" },
		{ "eurokit:wood_wall_indentation_1", "eurokit:wood_wall_indentation_1", "eurokit:wood_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_wall_indentation_1 5",
	recipe = {
		{ "eurokit:wood_wall_indentation_1_inward", "eurokit:wood_wall_indentation_1_inward", "eurokit:wood_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_wall_indentation_1_inward",
	burntime = 3.458984375
})

minetest.register_node( "eurokit:wood_pointed_arch_1", {
	description = "Wood Pointed Arch 1",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pointed_arch_1 11",
	recipe = {
		{ "eurokit:wood_slope", "eurokit:wood_slope", "" },
		{ "eurokit:wood_slope", "", "" },
		{ "eurokit:wood_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_slope 2",
	recipe = {
		{ "eurokit:wood_pointed_arch_1", "eurokit:wood_pointed_arch_1", "eurokit:wood_pointed_arch_1" },
		{ "eurokit:wood_pointed_arch_1", "eurokit:wood_pointed_arch_1", "eurokit:wood_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_pointed_arch_1",
	burntime = 1.2578125
})

minetest.register_node( "eurokit:wood_small_straight_arch", {
	description = "Wood Small Straight Arch",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_small_straight_arch 8",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "default:wood", "", "default:wood" },
		{ "default:wood", "", "default:wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_small_straight_arch",
	burntime = 5.46875
})

minetest.register_node( "eurokit:wood_arrow_hole", {
	description = "Wood Arrow Hole",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_arrow_hole 21",
	recipe = {
		{ "", "default:wood", "" },
		{ "default:wood", "", "default:wood" },
		{ "", "default:wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 1",
	recipe = {
		{ "eurokit:wood_arrow_hole", "eurokit:wood_arrow_hole", "" },
		{ "eurokit:wood_arrow_hole", "eurokit:wood_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_arrow_hole",
	burntime = 1.326171875
})

minetest.register_node( "eurokit:wood_pointed_arch_1_inward", {
	description = "Wood Pointed Arch 1 Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:wood_pointed_arch_1", "" },
		{ "eurokit:wood_pointed_arch_1", "", "eurokit:wood_pointed_arch_1" },
		{ "eurokit:wood_pointed_arch_1", "eurokit:wood_pointed_arch_1", "eurokit:wood_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pointed_arch_1 7",
	recipe = {
		{ "eurokit:wood_pointed_arch_1_inward", "eurokit:wood_pointed_arch_1_inward", "" },
		{ "eurokit:wood_pointed_arch_1_inward", "eurokit:wood_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_pointed_arch_1_inward",
	burntime = 2.339599609375
})

minetest.register_node( "eurokit:wood_wall_indentation_1", {
	description = "Wood Wall Indentation 1",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_wall_indentation_1 7",
	recipe = {
		{ "eurokit:wood_slope", "eurokit:wood_slope", "" },
		{ "eurokit:wood_slope", "", "eurokit:wood_slope" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_wall_indentation_1",
	burntime = 1.96875
})

minetest.register_node( "eurokit:wood_counterarch_outward", {
	description = "Wood Counterarch Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_counterarch_outward 6",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "", "", "default:wood" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 1",
	recipe = {
		{ "eurokit:wood_counterarch_outward", "eurokit:wood_counterarch_outward", "eurokit:wood_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_counterarch_outward",
	burntime = 4.607421875
})

minetest.register_node( "eurokit:wood_arrowslit_end_right", {
	description = "Wood Arrowslit End Right",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, arrowslit = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:wood_arrow_hole" },
		{ "", "eurokit:wood_arrow_hole", "eurokit:wood_arrow_hole" },
		{ "", "", "eurokit:wood_arrow_hole" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_arrowslit_end_right",
	burntime = 1.09375
})

minetest.register_node( "eurokit:wood_pillar_base", {
	description = "Wood Pillar Base",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, pillar = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_wood_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_pillar_base 7",
	recipe = {
		{ "", "default:wood", "" },
		{ "", "default:wood", "" },
		{ "", "default:wood", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:wood 1",
	recipe = {
		{ "eurokit:wood_pillar_base", "eurokit:wood_pillar_base", "eurokit:wood_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_pillar_base",
	burntime = 2.76171875
})

minetest.register_node( "eurokit:wood_frieze_outward", {
	description = "Wood Frieze Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_frieze_outward 99",
	recipe = {
		{ "", "", "default:wood" },
		{ "", "", "" },
		{ "", "", "default:wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_frieze_outward",
	burntime = 0.03076171875
})

minetest.register_node( "eurokit:wood_frieze", {
	description = "Wood Frieze",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_frieze 99",
	recipe = {
		{ "", "default:wood", "default:wood" },
		{ "", "", "" },
		{ "", "default:wood", "default:wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_frieze",
	burntime = 0.2734375
})

minetest.register_node( "eurokit:wood_fancy_frieze_outward", {
	description = "Wood Fancy Frieze Outward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, outward = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_outward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_fancy_frieze_outward 99",
	recipe = {
		{ "", "default:wood", "default:wood" },
		{ "", "", "default:wood" },
		{ "", "default:wood", "default:wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_fancy_frieze_outward",
	burntime = 0.032744140625
})

minetest.register_node( "eurokit:wood_side_rail_oblique", {
	description = "Wood Side Rail Oblique",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_side_rail_oblique")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail_oblique 93",
	recipe = {
		{ "default:wood", "", "" },
		{ "default:wood", "default:wood", "" },
		{ "default:wood", "", "default:wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_side_rail_oblique",
	burntime = 0.3757578125
})

minetest.register_node( "eurokit:wood_frieze_inward", {
	description = "Wood Frieze Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, inward = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_frieze_inward 81",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "", "", "" },
		{ "default:wood", "default:wood", "default:wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_frieze_inward",
	burntime = 0.51611328125
})

minetest.register_node( "eurokit:wood_fancy_frieze_inward", {
	description = "Wood Fancy Frieze Inward",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1, inward = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_inward,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_fancy_frieze_inward 82",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "default:wood", "default:wood", "" },
		{ "default:wood", "default:wood", "default:wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_fancy_frieze_inward",
	burntime = 0.68017578125
})

minetest.register_node( "eurokit:wood_side_rail_oblique_corner_counterclockwise", {
	description = "Wood Side Rail Oblique Corner Counterclockwise",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_counterclockwise,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_side_rail_oblique_corner_counterclockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail_oblique_corner_counterclockwise 2",
	recipe = {
		{ "", "eurokit:wood_side_rail_oblique", "eurokit:wood_side_rail_oblique" },
		{ "", "", "eurokit:wood_side_rail_oblique" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail_oblique 2",
	recipe = {
		{ "eurokit:wood_side_rail_oblique_corner_counterclockwise", "eurokit:wood_side_rail_oblique_corner_counterclockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_side_rail_oblique_corner_counterclockwise",
	burntime = 0.4990234375
})

minetest.register_node( "eurokit:wood_side_rail_oblique_corner_clockwise", {
	description = "Wood Side Rail Oblique Corner Clockwise",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_clockwise,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_side_rail_oblique_corner_clockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail_oblique_corner_clockwise 2",
	recipe = {
		{ "eurokit:wood_side_rail_oblique", "eurokit:wood_side_rail_oblique", "" },
		{ "eurokit:wood_side_rail_oblique", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail_oblique 2",
	recipe = {
		{ "eurokit:wood_side_rail_oblique_corner_clockwise", "eurokit:wood_side_rail_oblique_corner_clockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_side_rail_oblique_corner_clockwise",
	burntime = 0.4990234375
})

minetest.register_node( "eurokit:wood_side_rail_top_corner", {
	description = "Wood Side Rail Top Corner",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, corner = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top_corner,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_side_rail_top_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail_top_corner 2",
	recipe = {
		{ "eurokit:wood_side_rail_top", "eurokit:wood_side_rail_top", "" },
		{ "eurokit:wood_side_rail_top", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail_top 2",
	recipe = {
		{ "eurokit:wood_side_rail_top_corner", "eurokit:wood_side_rail_top_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_side_rail_top_corner",
	burntime = 0.587890625
})

minetest.register_node( "eurokit:wood_fancy_frieze", {
	description = "Wood Fancy Frieze",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, frieze = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze,
	},
	sounds = default.node_sound_wood_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_fancy_frieze 99",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "", "default:wood", "" },
		{ "default:wood", "default:wood", "default:wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_fancy_frieze",
	burntime = 0.35546875
})

minetest.register_node( "eurokit:wood_side_rail_corner", {
	description = "Wood Side Rail Corner",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, corner = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_corner,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_side_rail_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail_corner 3",
	recipe = {
		{ "eurokit:wood_side_rail", "eurokit:wood_side_rail", "" },
		{ "eurokit:wood_side_rail", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail 2",
	recipe = {
		{ "eurokit:wood_side_rail_corner", "eurokit:wood_side_rail_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_side_rail_corner",
	burntime = 0.328125
})

minetest.register_node( "eurokit:wood_side_rail_top", {
	description = "Wood Side Rail Top",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1, raillingtop = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_side_rail_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail_top 89",
	recipe = {
		{ "default:wood", "default:wood", "default:wood" },
		{ "default:wood", "", "default:wood" },
		{ "default:wood", "", "default:wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_side_rail_top",
	burntime = 0.546875
})

minetest.register_node( "eurokit:wood_side_rail", {
	description = "Wood Side Rail",
	groups = { wood = 1, oddly_breakable_by_hand = 2, choppy = 2, flammable = 2, railling = 1 },
	tiles = { "default_wood.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail,
	},
	sounds = default.node_sound_wood_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:wood_side_rail")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:wood_side_rail 99",
	recipe = {
		{ "default:wood", "", "default:wood" },
		{ "default:wood", "", "default:wood" },
		{ "default:wood", "", "default:wood" }
	}
})

minetest.register_craft({
	type = "fuel",
	recipe = "eurokit:wood_side_rail",
	burntime = 0.328125
})

minetest.register_node( "eurokit:desert_sandstone_half_pillar_mid", {
	description = "Desert Sandstone Half Pillar Mid",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_half_pillar_mid 1",
	recipe = {
		{ "eurokit:desert_sandstone_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pillar_mid 2",
	recipe = {
		{ "eurokit:desert_sandstone_half_pillar_mid", "eurokit:desert_sandstone_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_pillar_top", {
	description = "Desert Sandstone Pillar Top",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pillar_top 12",
	recipe = {
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" },
		{ "", "default:desert_sandstone", "" },
		{ "", "default:desert_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "eurokit:desert_sandstone_pillar_top", "eurokit:desert_sandstone_pillar_top", "eurokit:desert_sandstone_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_counterarch", {
	description = "Desert Sandstone Counterarch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_counterarch 7",
	recipe = {
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" },
		{ "", "default:desert_sandstone", "default:desert_sandstone" },
		{ "", "", "default:desert_sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 3",
	recipe = {
		{ "eurokit:desert_sandstone_counterarch", "eurokit:desert_sandstone_counterarch", "" },
		{ "eurokit:desert_sandstone_counterarch", "eurokit:desert_sandstone_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_vertical_arrowslit", {
	description = "Desert Sandstone Vertical Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:desert_sandstone_arrow_hole", "" },
		{ "", "eurokit:desert_sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_wall_indentation_2_inward", {
	description = "Desert Sandstone Wall Indentation 2 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:desert_sandstone_wall_indentation_2", "" },
		{ "eurokit:desert_sandstone_wall_indentation_2", "", "eurokit:desert_sandstone_wall_indentation_2" },
		{ "eurokit:desert_sandstone_wall_indentation_2", "eurokit:desert_sandstone_wall_indentation_2", "eurokit:desert_sandstone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_wall_indentation_2 4",
	recipe = {
		{ "eurokit:desert_sandstone_wall_indentation_2_inward", "eurokit:desert_sandstone_wall_indentation_2_inward", "eurokit:desert_sandstone_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_half_pillar_base", {
	description = "Desert Sandstone Half Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_half_pillar_base 1",
	recipe = {
		{ "eurokit:desert_sandstone_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pillar_base 1",
	recipe = {
		{ "eurokit:desert_sandstone_half_pillar_base", "eurokit:desert_sandstone_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_small_pointed_arch", {
	description = "Desert Sandstone Small Pointed Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_small_pointed_arch 9",
	recipe = {
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope" },
		{ "eurokit:desert_sandstone_slope", "", "eurokit:desert_sandstone_slope" },
		{ "eurokit:desert_sandstone_slope", "", "eurokit:desert_sandstone_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_pointed_arch_2", {
	description = "Desert Sandstone Pointed Arch 2",
	groups = { cracky = 3, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "" },
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "" },
		{ "eurokit:desert_sandstone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_slope 5",
	recipe = {
		{ "eurokit:desert_sandstone_pointed_arch_2", "eurokit:desert_sandstone_pointed_arch_2", "" },
		{ "eurokit:desert_sandstone_pointed_arch_2", "eurokit:desert_sandstone_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_machicolation", {
	description = "Desert Sandstone Machicolation",
	groups = { cracky = 3, machicolation = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_machicolation 18",
	recipe = {
		{ "default:desert_sandstone", "", "default:desert_sandstone" },
		{ "default:desert_sandstone", "", "default:desert_sandstone" },
		{ "default:desert_sandstone", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_pointed_arch_1_outward", {
	description = "Desert Sandstone Pointed Arch 1 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_pointed_arch_1", "" },
		{ "eurokit:desert_sandstone_pointed_arch_1", "eurokit:desert_sandstone_pointed_arch_1", "eurokit:desert_sandstone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pointed_arch_1 1",
	recipe = {
		{ "eurokit:desert_sandstone_pointed_arch_1_outward", "eurokit:desert_sandstone_pointed_arch_1_outward", "eurokit:desert_sandstone_pointed_arch_1_outward" },
		{ "eurokit:desert_sandstone_pointed_arch_1_outward", "eurokit:desert_sandstone_pointed_arch_1_outward", "eurokit:desert_sandstone_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_arrowslit_end_top", {
	description = "Desert Sandstone Arrowslit End Top",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:desert_sandstone_arrow_hole", "eurokit:desert_sandstone_arrow_hole", "eurokit:desert_sandstone_arrow_hole" },
		{ "", "eurokit:desert_sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_arrowslit_end_bottom", {
	description = "Desert Sandstone Arrowslit End Bottom",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_arrow_hole", "" },
		{ "eurokit:desert_sandstone_arrow_hole", "eurokit:desert_sandstone_arrow_hole", "eurokit:desert_sandstone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_wall_indentation_2_outward", {
	description = "Desert Sandstone Wall Indentation 2 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_wall_indentation_2", "" },
		{ "eurokit:desert_sandstone_wall_indentation_2", "eurokit:desert_sandstone_wall_indentation_2", "eurokit:desert_sandstone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_wall_indentation_2 3",
	recipe = {
		{ "eurokit:desert_sandstone_wall_indentation_2_outward", "eurokit:desert_sandstone_wall_indentation_2_outward", "" },
		{ "eurokit:desert_sandstone_wall_indentation_2_outward", "eurokit:desert_sandstone_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_pillar_mid", {
	description = "Desert Sandstone Pillar Mid",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pillar_mid 14",
	recipe = {
		{ "", "default:desert_sandstone", "" },
		{ "", "default:desert_sandstone", "" },
		{ "", "default:desert_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "eurokit:desert_sandstone_pillar_mid", "eurokit:desert_sandstone_pillar_mid", "eurokit:desert_sandstone_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_arrowslit_end_left", {
	description = "Desert Sandstone Arrowslit End Left",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:desert_sandstone_arrow_hole", "", "" },
		{ "eurokit:desert_sandstone_arrow_hole", "eurokit:desert_sandstone_arrow_hole", "" },
		{ "eurokit:desert_sandstone_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_wall_indentation_2", {
	description = "Desert Sandstone Wall Indentation 2",
	groups = { cracky = 3, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_wall_indentation_2 2",
	recipe = {
		{ "eurokit:desert_sandstone_slope", "", "" },
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_arch_inward", {
	description = "Desert Sandstone Arch Inward",
	groups = { cracky = 3, inward = 1, arch = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_arch_inward 13",
	recipe = {
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" },
		{ "default:desert_sandstone", "", "default:desert_sandstone" },
		{ "", "default:desert_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "eurokit:desert_sandstone_arch_inward", "eurokit:desert_sandstone_arch_inward", "eurokit:desert_sandstone_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_small_arch", {
	description = "Desert Sandstone Small Arch",
	groups = { cracky = 3, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:desert_sandstone", "" },
		{ "default:desert_sandstone", "", "default:desert_sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 2",
	recipe = {
		{ "eurokit:desert_sandstone_small_arch", "eurokit:desert_sandstone_small_arch", "" },
		{ "eurokit:desert_sandstone_small_arch", "eurokit:desert_sandstone_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_thin_wall", {
	description = "Desert Sandstone Thin Wall",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_thin_wall 24",
	recipe = {
		{ "default:desert_sandstone", "default:desert_sandstone", "" },
		{ "default:desert_sandstone", "default:desert_sandstone", "" },
		{ "default:desert_sandstone", "default:desert_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_sandstone_thin_wall", "eurokit:desert_sandstone_thin_wall", "eurokit:desert_sandstone_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_counterarch_inward", {
	description = "Desert Sandstone Counterarch Inward",
	groups = { cracky = 3, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_counterarch_inward 3",
	recipe = {
		{ "", "default:desert_sandstone", "default:desert_sandstone" },
		{ "", "", "default:desert_sandstone" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 2",
	recipe = {
		{ "eurokit:desert_sandstone_counterarch_inward", "", "" },
		{ "eurokit:desert_sandstone_counterarch_inward", "eurokit:desert_sandstone_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_small_counterarch", {
	description = "Desert Sandstone Small Counterarch",
	groups = { cracky = 3, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_small_counterarch 17",
	recipe = {
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" },
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" },
		{ "", "default:desert_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "eurokit:desert_sandstone_small_counterarch", "eurokit:desert_sandstone_small_counterarch", "" },
		{ "eurokit:desert_sandstone_small_counterarch", "eurokit:desert_sandstone_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_horizontal_arrowslit", {
	description = "Desert Sandstone Horizontal Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_sandstone_arrow_hole", "eurokit:desert_sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_arch_outward", {
	description = "Desert Sandstone Arch Outward",
	groups = { cracky = 3, outward = 1, arch = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_arch_outward 22",
	recipe = {
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" },
		{ "", "default:desert_sandstone", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "eurokit:desert_sandstone_arch_outward", "", "" },
		{ "eurokit:desert_sandstone_arch_outward", "eurokit:desert_sandstone_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_arch", {
	description = "Desert Sandstone Arch",
	groups = { cracky = 3, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_arch 18",
	recipe = {
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" },
		{ "default:desert_sandstone", "default:desert_sandstone", "" },
		{ "default:desert_sandstone", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "eurokit:desert_sandstone_arch", "eurokit:desert_sandstone_arch", "" },
		{ "eurokit:desert_sandstone_arch", "eurokit:desert_sandstone_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_half_pillar_top", {
	description = "Desert Sandstone Half Pillar Top",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_half_pillar_top 1",
	recipe = {
		{ "eurokit:desert_sandstone_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pillar_top 1",
	recipe = {
		{ "eurokit:desert_sandstone_half_pillar_top", "eurokit:desert_sandstone_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_pointed_arch_2_inward", {
	description = "Desert Sandstone Pointed Arch 2 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:desert_sandstone_pointed_arch_2", "" },
		{ "eurokit:desert_sandstone_pointed_arch_2", "", "eurokit:desert_sandstone_pointed_arch_2" },
		{ "eurokit:desert_sandstone_pointed_arch_2", "eurokit:desert_sandstone_pointed_arch_2", "eurokit:desert_sandstone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pointed_arch_2 6",
	recipe = {
		{ "eurokit:desert_sandstone_pointed_arch_2_inward", "eurokit:desert_sandstone_pointed_arch_2_inward", "" },
		{ "eurokit:desert_sandstone_pointed_arch_2_inward", "eurokit:desert_sandstone_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_pointed_arch_2_outward", {
	description = "Desert Sandstone Pointed Arch 2 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_pointed_arch_2", "" },
		{ "eurokit:desert_sandstone_pointed_arch_2", "eurokit:desert_sandstone_pointed_arch_2", "eurokit:desert_sandstone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_sandstone_pointed_arch_2_outward", "eurokit:desert_sandstone_pointed_arch_2_outward", "eurokit:desert_sandstone_pointed_arch_2_outward" },
		{ "eurokit:desert_sandstone_pointed_arch_2_outward", "eurokit:desert_sandstone_pointed_arch_2_outward", "eurokit:desert_sandstone_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_wall_indentation_1_outward", {
	description = "Desert Sandstone Wall Indentation 1 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_wall_indentation_1", "" },
		{ "eurokit:desert_sandstone_wall_indentation_1", "eurokit:desert_sandstone_wall_indentation_1", "eurokit:desert_sandstone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_wall_indentation_1 1",
	recipe = {
		{ "eurokit:desert_sandstone_wall_indentation_1_outward", "eurokit:desert_sandstone_wall_indentation_1_outward", "" },
		{ "eurokit:desert_sandstone_wall_indentation_1_outward", "eurokit:desert_sandstone_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_wall_indentation_1_inward", {
	description = "Desert Sandstone Wall Indentation 1 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_sandstone_wall_indentation_1", "" },
		{ "eurokit:desert_sandstone_wall_indentation_1", "", "eurokit:desert_sandstone_wall_indentation_1" },
		{ "eurokit:desert_sandstone_wall_indentation_1", "eurokit:desert_sandstone_wall_indentation_1", "eurokit:desert_sandstone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_wall_indentation_1 5",
	recipe = {
		{ "eurokit:desert_sandstone_wall_indentation_1_inward", "eurokit:desert_sandstone_wall_indentation_1_inward", "eurokit:desert_sandstone_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_pointed_arch_1", {
	description = "Desert Sandstone Pointed Arch 1",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pointed_arch_1 11",
	recipe = {
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "" },
		{ "eurokit:desert_sandstone_slope", "", "" },
		{ "eurokit:desert_sandstone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_slope 2",
	recipe = {
		{ "eurokit:desert_sandstone_pointed_arch_1", "eurokit:desert_sandstone_pointed_arch_1", "eurokit:desert_sandstone_pointed_arch_1" },
		{ "eurokit:desert_sandstone_pointed_arch_1", "eurokit:desert_sandstone_pointed_arch_1", "eurokit:desert_sandstone_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_small_straight_arch", {
	description = "Desert Sandstone Small Straight Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_small_straight_arch 8",
	recipe = {
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" },
		{ "default:desert_sandstone", "", "default:desert_sandstone" },
		{ "default:desert_sandstone", "", "default:desert_sandstone" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_arrow_hole", {
	description = "Desert Sandstone Arrow Hole",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_arrow_hole 21",
	recipe = {
		{ "", "default:desert_sandstone", "" },
		{ "default:desert_sandstone", "", "default:desert_sandstone" },
		{ "", "default:desert_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "eurokit:desert_sandstone_arrow_hole", "eurokit:desert_sandstone_arrow_hole", "" },
		{ "eurokit:desert_sandstone_arrow_hole", "eurokit:desert_sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_pointed_arch_1_inward", {
	description = "Desert Sandstone Pointed Arch 1 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_sandstone_pointed_arch_1", "" },
		{ "eurokit:desert_sandstone_pointed_arch_1", "", "eurokit:desert_sandstone_pointed_arch_1" },
		{ "eurokit:desert_sandstone_pointed_arch_1", "eurokit:desert_sandstone_pointed_arch_1", "eurokit:desert_sandstone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pointed_arch_1 7",
	recipe = {
		{ "eurokit:desert_sandstone_pointed_arch_1_inward", "eurokit:desert_sandstone_pointed_arch_1_inward", "" },
		{ "eurokit:desert_sandstone_pointed_arch_1_inward", "eurokit:desert_sandstone_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_wall_indentation_1", {
	description = "Desert Sandstone Wall Indentation 1",
	groups = { cracky = 3, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_wall_indentation_1 7",
	recipe = {
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "" },
		{ "eurokit:desert_sandstone_slope", "", "eurokit:desert_sandstone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_counterarch_outward", {
	description = "Desert Sandstone Counterarch Outward",
	groups = { cracky = 3, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_counterarch_outward 6",
	recipe = {
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" },
		{ "", "", "default:desert_sandstone" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "eurokit:desert_sandstone_counterarch_outward", "eurokit:desert_sandstone_counterarch_outward", "eurokit:desert_sandstone_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_arrowslit_end_right", {
	description = "Desert Sandstone Arrowslit End Right",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:desert_sandstone_arrow_hole" },
		{ "", "eurokit:desert_sandstone_arrow_hole", "eurokit:desert_sandstone_arrow_hole" },
		{ "", "", "eurokit:desert_sandstone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_pillar_base", {
	description = "Desert Sandstone Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_pillar_base 7",
	recipe = {
		{ "", "default:desert_sandstone", "" },
		{ "", "default:desert_sandstone", "" },
		{ "", "default:desert_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "eurokit:desert_sandstone_pillar_base", "eurokit:desert_sandstone_pillar_base", "eurokit:desert_sandstone_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_long_slope_2_outward", {
	description = "Desert Sandstone Long Slope 2 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_long_slope_2", "" },
		{ "eurokit:desert_sandstone_long_slope_2", "eurokit:desert_sandstone_long_slope_2", "eurokit:desert_sandstone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_slope_outward", {
	description = "Desert Sandstone Slope Outward",
	groups = { cracky = 3, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:desert_sandstone" },
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 1",
	recipe = {
		{ "eurokit:desert_sandstone_slope_outward", "eurokit:desert_sandstone_slope_outward", "eurokit:desert_sandstone_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_long_slope_2", {
	description = "Desert Sandstone Long Slope 2",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_slope", "" },
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_long_slope_1_outward", {
	description = "Desert Sandstone Long Slope 1 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_long_slope_1", "" },
		{ "eurokit:desert_sandstone_long_slope_1", "eurokit:desert_sandstone_long_slope_1", "eurokit:desert_sandstone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_long_slope_3_inward", {
	description = "Desert Sandstone Long Slope 3 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:desert_sandstone_long_slope_3", "" },
		{ "eurokit:desert_sandstone_long_slope_3", "", "eurokit:desert_sandstone_long_slope_3" },
		{ "eurokit:desert_sandstone_long_slope_3", "eurokit:desert_sandstone_long_slope_3", "eurokit:desert_sandstone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_long_slope_1", {
	description = "Desert Sandstone Long Slope 1",
	groups = { cracky = 3, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_sandstone_slope", "", "" },
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_long_slope_3_outward", {
	description = "Desert Sandstone Long Slope 3 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_long_slope_3", "" },
		{ "eurokit:desert_sandstone_long_slope_3", "eurokit:desert_sandstone_long_slope_3", "eurokit:desert_sandstone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_long_slope_3", {
	description = "Desert Sandstone Long Slope 3",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:desert_sandstone_slope" },
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_long_slope_2_inward", {
	description = "Desert Sandstone Long Slope 2 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:desert_sandstone_long_slope_2", "" },
		{ "eurokit:desert_sandstone_long_slope_2", "", "eurokit:desert_sandstone_long_slope_2" },
		{ "eurokit:desert_sandstone_long_slope_2", "eurokit:desert_sandstone_long_slope_2", "eurokit:desert_sandstone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_slope_inward", {
	description = "Desert Sandstone Slope Inward",
	groups = { cracky = 3, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_slope_inward 7",
	recipe = {
		{ "", "", "default:desert_sandstone" },
		{ "", "default:desert_sandstone", "" },
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 2",
	recipe = {
		{ "eurokit:desert_sandstone_slope_inward", "", "" },
		{ "eurokit:desert_sandstone_slope_inward", "eurokit:desert_sandstone_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_long_slope_1_inward", {
	description = "Desert Sandstone Long Slope 1 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:desert_sandstone_long_slope_1", "" },
		{ "eurokit:desert_sandstone_long_slope_1", "", "eurokit:desert_sandstone_long_slope_1" },
		{ "eurokit:desert_sandstone_long_slope_1", "eurokit:desert_sandstone_long_slope_1", "eurokit:desert_sandstone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_slope", {
	description = "Desert Sandstone Slope",
	groups = { cracky = 3, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_desert_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_slope 11",
	recipe = {
		{ "", "", "default:desert_sandstone" },
		{ "", "default:desert_sandstone", "default:desert_sandstone" },
		{ "default:desert_sandstone", "default:desert_sandstone", "default:desert_sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone 2",
	recipe = {
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "" },
		{ "eurokit:desert_sandstone_slope", "eurokit:desert_sandstone_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:gold_frieze_outward", {
	description = "Gold Frieze Outward",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_outward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_frieze_outward 56",
	recipe = {
		{ "", "", "eurokit:gold_sheet" },
		{ "", "", "" },
		{ "", "", "eurokit:gold_sheet" }
	}
})

minetest.register_node( "eurokit:gold_frieze", {
	description = "Gold Frieze",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_frieze 12",
	recipe = {
		{ "", "eurokit:gold_sheet", "eurokit:gold_sheet" },
		{ "", "", "" },
		{ "", "eurokit:gold_sheet", "eurokit:gold_sheet" }
	}
})

minetest.register_node( "eurokit:gold_fancy_frieze_outward", {
	description = "Gold Fancy Frieze Outward",
	groups = { cracky = 1, frieze = 1, outward = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_outward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_fancy_frieze_outward 99",
	recipe = {
		{ "", "eurokit:gold_sheet", "eurokit:gold_sheet" },
		{ "", "", "eurokit:gold_sheet" },
		{ "", "eurokit:gold_sheet", "eurokit:gold_sheet" }
	}
})

minetest.register_node( "eurokit:gold_side_rail_oblique", {
	description = "Gold Side Rail Oblique",
	groups = { cracky = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:gold_side_rail_oblique")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail_oblique 11",
	recipe = {
		{ "eurokit:gold_sheet", "", "" },
		{ "eurokit:gold_sheet", "eurokit:gold_sheet", "" },
		{ "eurokit:gold_sheet", "", "eurokit:gold_sheet" }
	}
})

minetest.register_node( "eurokit:gold_frieze_inward", {
	description = "Gold Frieze Inward",
	groups = { cracky = 1, frieze = 1, inward = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.frieze_inward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_frieze_inward 10",
	recipe = {
		{ "eurokit:gold_sheet", "eurokit:gold_sheet", "eurokit:gold_sheet" },
		{ "", "", "" },
		{ "eurokit:gold_sheet", "eurokit:gold_sheet", "eurokit:gold_sheet" }
	}
})

minetest.register_node( "eurokit:gold_fancy_frieze_inward", {
	description = "Gold Fancy Frieze Inward",
	groups = { cracky = 1, frieze = 1, inward = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze_inward,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_fancy_frieze_inward 10",
	recipe = {
		{ "eurokit:gold_sheet", "eurokit:gold_sheet", "eurokit:gold_sheet" },
		{ "eurokit:gold_sheet", "eurokit:gold_sheet", "" },
		{ "eurokit:gold_sheet", "eurokit:gold_sheet", "eurokit:gold_sheet" }
	}
})

minetest.register_node( "eurokit:gold_side_rail_oblique_corner_counterclockwise", {
	description = "Gold Side Rail Oblique Corner Counterclockwise",
	groups = { cracky = 1, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_counterclockwise,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:gold_side_rail_oblique_corner_counterclockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail_oblique_corner_counterclockwise 2",
	recipe = {
		{ "", "eurokit:gold_side_rail_oblique", "eurokit:gold_side_rail_oblique" },
		{ "", "", "eurokit:gold_side_rail_oblique" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail_oblique 2",
	recipe = {
		{ "eurokit:gold_side_rail_oblique_corner_counterclockwise", "eurokit:gold_side_rail_oblique_corner_counterclockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:gold_side_rail_oblique_corner_clockwise", {
	description = "Gold Side Rail Oblique Corner Clockwise",
	groups = { cracky = 1, corner = 1, raillingtop = 1, railling = 1, oblique = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_oblique_corner_clockwise,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:gold_side_rail_oblique_corner_clockwise")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail_oblique_corner_clockwise 2",
	recipe = {
		{ "eurokit:gold_side_rail_oblique", "eurokit:gold_side_rail_oblique", "" },
		{ "eurokit:gold_side_rail_oblique", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail_oblique 2",
	recipe = {
		{ "eurokit:gold_side_rail_oblique_corner_clockwise", "eurokit:gold_side_rail_oblique_corner_clockwise", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:gold_side_rail_top_corner", {
	description = "Gold Side Rail Top Corner",
	groups = { cracky = 1, railling = 1, corner = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top_corner,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:gold_side_rail_top_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail_top_corner 2",
	recipe = {
		{ "eurokit:gold_side_rail_top", "eurokit:gold_side_rail_top", "" },
		{ "eurokit:gold_side_rail_top", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail_top 2",
	recipe = {
		{ "eurokit:gold_side_rail_top_corner", "eurokit:gold_side_rail_top_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:gold_fancy_frieze", {
	description = "Gold Fancy Frieze",
	groups = { cracky = 1, frieze = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.fancy_frieze,
	},
	sounds = default.node_sound_metal_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_fancy_frieze 17",
	recipe = {
		{ "eurokit:gold_sheet", "eurokit:gold_sheet", "eurokit:gold_sheet" },
		{ "", "eurokit:gold_sheet", "" },
		{ "eurokit:gold_sheet", "eurokit:gold_sheet", "eurokit:gold_sheet" }
	}
})

minetest.register_node( "eurokit:gold_side_rail_corner", {
	description = "Gold Side Rail Corner",
	groups = { cracky = 1, railling = 1, corner = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_corner,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:gold_side_rail_corner")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail_corner 3",
	recipe = {
		{ "eurokit:gold_side_rail", "eurokit:gold_side_rail", "" },
		{ "eurokit:gold_side_rail", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail 2",
	recipe = {
		{ "eurokit:gold_side_rail_corner", "eurokit:gold_side_rail_corner", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:gold_side_rail_top", {
	description = "Gold Side Rail Top",
	groups = { cracky = 1, railling = 1, raillingtop = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail_top,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:gold_side_rail_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail_top 11",
	recipe = {
		{ "eurokit:gold_sheet", "eurokit:gold_sheet", "eurokit:gold_sheet" },
		{ "eurokit:gold_sheet", "", "eurokit:gold_sheet" },
		{ "eurokit:gold_sheet", "", "eurokit:gold_sheet" }
	}
})

minetest.register_node( "eurokit:gold_side_rail", {
	description = "Gold Side Rail",
	groups = { cracky = 1, railling = 1 },
	tiles = { "default_gold_block.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.side_rail,
	},
	sounds = default.node_sound_metal_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:gold_side_rail")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:gold_side_rail 16",
	recipe = {
		{ "eurokit:gold_sheet", "", "eurokit:gold_sheet" },
		{ "eurokit:gold_sheet", "", "eurokit:gold_sheet" },
		{ "eurokit:gold_sheet", "", "eurokit:gold_sheet" }
	}
})

minetest.register_node( "eurokit:stone_half_pillar_mid", {
	description = "Stone Half Pillar Mid",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_half_pillar_mid 1",
	recipe = {
		{ "eurokit:stone_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pillar_mid 2",
	recipe = {
		{ "eurokit:stone_half_pillar_mid", "eurokit:stone_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_pillar_top", {
	description = "Stone Pillar Top",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pillar_top 12",
	recipe = {
		{ "default:stone", "default:stone", "default:stone" },
		{ "", "default:stone", "" },
		{ "", "default:stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "eurokit:stone_pillar_top", "eurokit:stone_pillar_top", "eurokit:stone_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_counterarch", {
	description = "Stone Counterarch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_counterarch 7",
	recipe = {
		{ "default:stone", "default:stone", "default:stone" },
		{ "", "default:stone", "default:stone" },
		{ "", "", "default:stone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 3",
	recipe = {
		{ "eurokit:stone_counterarch", "eurokit:stone_counterarch", "" },
		{ "eurokit:stone_counterarch", "eurokit:stone_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_vertical_arrowslit", {
	description = "Stone Vertical Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:stone_arrow_hole", "" },
		{ "", "eurokit:stone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_wall_indentation_2_inward", {
	description = "Stone Wall Indentation 2 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:stone_wall_indentation_2", "" },
		{ "eurokit:stone_wall_indentation_2", "", "eurokit:stone_wall_indentation_2" },
		{ "eurokit:stone_wall_indentation_2", "eurokit:stone_wall_indentation_2", "eurokit:stone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_wall_indentation_2 4",
	recipe = {
		{ "eurokit:stone_wall_indentation_2_inward", "eurokit:stone_wall_indentation_2_inward", "eurokit:stone_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_half_pillar_base", {
	description = "Stone Half Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_half_pillar_base 1",
	recipe = {
		{ "eurokit:stone_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pillar_base 1",
	recipe = {
		{ "eurokit:stone_half_pillar_base", "eurokit:stone_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_small_pointed_arch", {
	description = "Stone Small Pointed Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_small_pointed_arch 9",
	recipe = {
		{ "eurokit:stone_slope", "eurokit:stone_slope", "eurokit:stone_slope" },
		{ "eurokit:stone_slope", "", "eurokit:stone_slope" },
		{ "eurokit:stone_slope", "", "eurokit:stone_slope" }
	}
})

minetest.register_node( "eurokit:stone_pointed_arch_2", {
	description = "Stone Pointed Arch 2",
	groups = { cracky = 3, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:stone_slope", "eurokit:stone_slope", "" },
		{ "eurokit:stone_slope", "eurokit:stone_slope", "" },
		{ "eurokit:stone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_slope 5",
	recipe = {
		{ "eurokit:stone_pointed_arch_2", "eurokit:stone_pointed_arch_2", "" },
		{ "eurokit:stone_pointed_arch_2", "eurokit:stone_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_machicolation", {
	description = "Stone Machicolation",
	groups = { cracky = 3, machicolation = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_machicolation 18",
	recipe = {
		{ "default:stone", "", "default:stone" },
		{ "default:stone", "", "default:stone" },
		{ "default:stone", "", "" }
	}
})

minetest.register_node( "eurokit:stone_pointed_arch_1_outward", {
	description = "Stone Pointed Arch 1 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_pointed_arch_1", "" },
		{ "eurokit:stone_pointed_arch_1", "eurokit:stone_pointed_arch_1", "eurokit:stone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pointed_arch_1 1",
	recipe = {
		{ "eurokit:stone_pointed_arch_1_outward", "eurokit:stone_pointed_arch_1_outward", "eurokit:stone_pointed_arch_1_outward" },
		{ "eurokit:stone_pointed_arch_1_outward", "eurokit:stone_pointed_arch_1_outward", "eurokit:stone_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_arrowslit_end_top", {
	description = "Stone Arrowslit End Top",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:stone_arrow_hole", "eurokit:stone_arrow_hole", "eurokit:stone_arrow_hole" },
		{ "", "eurokit:stone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_arrowslit_end_bottom", {
	description = "Stone Arrowslit End Bottom",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_arrow_hole", "" },
		{ "eurokit:stone_arrow_hole", "eurokit:stone_arrow_hole", "eurokit:stone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:stone_wall_indentation_2_outward", {
	description = "Stone Wall Indentation 2 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_wall_indentation_2", "" },
		{ "eurokit:stone_wall_indentation_2", "eurokit:stone_wall_indentation_2", "eurokit:stone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_wall_indentation_2 3",
	recipe = {
		{ "eurokit:stone_wall_indentation_2_outward", "eurokit:stone_wall_indentation_2_outward", "" },
		{ "eurokit:stone_wall_indentation_2_outward", "eurokit:stone_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_pillar_mid", {
	description = "Stone Pillar Mid",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pillar_mid 14",
	recipe = {
		{ "", "default:stone", "" },
		{ "", "default:stone", "" },
		{ "", "default:stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "eurokit:stone_pillar_mid", "eurokit:stone_pillar_mid", "eurokit:stone_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_arrowslit_end_left", {
	description = "Stone Arrowslit End Left",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:stone_arrow_hole", "", "" },
		{ "eurokit:stone_arrow_hole", "eurokit:stone_arrow_hole", "" },
		{ "eurokit:stone_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:stone_wall_indentation_2", {
	description = "Stone Wall Indentation 2",
	groups = { cracky = 3, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_wall_indentation_2 2",
	recipe = {
		{ "eurokit:stone_slope", "", "" },
		{ "eurokit:stone_slope", "eurokit:stone_slope", "eurokit:stone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_arch_inward", {
	description = "Stone Arch Inward",
	groups = { cracky = 3, inward = 1, arch = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_arch_inward 13",
	recipe = {
		{ "default:stone", "default:stone", "default:stone" },
		{ "default:stone", "", "default:stone" },
		{ "", "default:stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "eurokit:stone_arch_inward", "eurokit:stone_arch_inward", "eurokit:stone_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_small_arch", {
	description = "Stone Small Arch",
	groups = { cracky = 3, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:stone", "" },
		{ "default:stone", "", "default:stone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 2",
	recipe = {
		{ "eurokit:stone_small_arch", "eurokit:stone_small_arch", "" },
		{ "eurokit:stone_small_arch", "eurokit:stone_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_thin_wall", {
	description = "Stone Thin Wall",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_thin_wall 24",
	recipe = {
		{ "default:stone", "default:stone", "" },
		{ "default:stone", "default:stone", "" },
		{ "default:stone", "default:stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:stone_thin_wall", "eurokit:stone_thin_wall", "eurokit:stone_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_counterarch_inward", {
	description = "Stone Counterarch Inward",
	groups = { cracky = 3, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_counterarch_inward 3",
	recipe = {
		{ "", "default:stone", "default:stone" },
		{ "", "", "default:stone" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 2",
	recipe = {
		{ "eurokit:stone_counterarch_inward", "", "" },
		{ "eurokit:stone_counterarch_inward", "eurokit:stone_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_small_counterarch", {
	description = "Stone Small Counterarch",
	groups = { cracky = 3, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_small_counterarch 17",
	recipe = {
		{ "default:stone", "default:stone", "default:stone" },
		{ "default:stone", "default:stone", "default:stone" },
		{ "", "default:stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "eurokit:stone_small_counterarch", "eurokit:stone_small_counterarch", "" },
		{ "eurokit:stone_small_counterarch", "eurokit:stone_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_horizontal_arrowslit", {
	description = "Stone Horizontal Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:stone_arrow_hole", "eurokit:stone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_arch_outward", {
	description = "Stone Arch Outward",
	groups = { cracky = 3, outward = 1, arch = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_arch_outward 22",
	recipe = {
		{ "default:stone", "default:stone", "default:stone" },
		{ "", "default:stone", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "eurokit:stone_arch_outward", "", "" },
		{ "eurokit:stone_arch_outward", "eurokit:stone_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_arch", {
	description = "Stone Arch",
	groups = { cracky = 3, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_arch 18",
	recipe = {
		{ "default:stone", "default:stone", "default:stone" },
		{ "default:stone", "default:stone", "" },
		{ "default:stone", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "eurokit:stone_arch", "eurokit:stone_arch", "" },
		{ "eurokit:stone_arch", "eurokit:stone_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_half_pillar_top", {
	description = "Stone Half Pillar Top",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_half_pillar_top 1",
	recipe = {
		{ "eurokit:stone_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pillar_top 1",
	recipe = {
		{ "eurokit:stone_half_pillar_top", "eurokit:stone_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_pointed_arch_2_inward", {
	description = "Stone Pointed Arch 2 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:stone_pointed_arch_2", "" },
		{ "eurokit:stone_pointed_arch_2", "", "eurokit:stone_pointed_arch_2" },
		{ "eurokit:stone_pointed_arch_2", "eurokit:stone_pointed_arch_2", "eurokit:stone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pointed_arch_2 6",
	recipe = {
		{ "eurokit:stone_pointed_arch_2_inward", "eurokit:stone_pointed_arch_2_inward", "" },
		{ "eurokit:stone_pointed_arch_2_inward", "eurokit:stone_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_pointed_arch_2_outward", {
	description = "Stone Pointed Arch 2 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_pointed_arch_2", "" },
		{ "eurokit:stone_pointed_arch_2", "eurokit:stone_pointed_arch_2", "eurokit:stone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:stone_pointed_arch_2_outward", "eurokit:stone_pointed_arch_2_outward", "eurokit:stone_pointed_arch_2_outward" },
		{ "eurokit:stone_pointed_arch_2_outward", "eurokit:stone_pointed_arch_2_outward", "eurokit:stone_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_wall_indentation_1_outward", {
	description = "Stone Wall Indentation 1 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_wall_indentation_1", "" },
		{ "eurokit:stone_wall_indentation_1", "eurokit:stone_wall_indentation_1", "eurokit:stone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_wall_indentation_1 1",
	recipe = {
		{ "eurokit:stone_wall_indentation_1_outward", "eurokit:stone_wall_indentation_1_outward", "" },
		{ "eurokit:stone_wall_indentation_1_outward", "eurokit:stone_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_wall_indentation_1_inward", {
	description = "Stone Wall Indentation 1 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:stone_wall_indentation_1", "" },
		{ "eurokit:stone_wall_indentation_1", "", "eurokit:stone_wall_indentation_1" },
		{ "eurokit:stone_wall_indentation_1", "eurokit:stone_wall_indentation_1", "eurokit:stone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_wall_indentation_1 5",
	recipe = {
		{ "eurokit:stone_wall_indentation_1_inward", "eurokit:stone_wall_indentation_1_inward", "eurokit:stone_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_pointed_arch_1", {
	description = "Stone Pointed Arch 1",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pointed_arch_1 11",
	recipe = {
		{ "eurokit:stone_slope", "eurokit:stone_slope", "" },
		{ "eurokit:stone_slope", "", "" },
		{ "eurokit:stone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_slope 2",
	recipe = {
		{ "eurokit:stone_pointed_arch_1", "eurokit:stone_pointed_arch_1", "eurokit:stone_pointed_arch_1" },
		{ "eurokit:stone_pointed_arch_1", "eurokit:stone_pointed_arch_1", "eurokit:stone_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_small_straight_arch", {
	description = "Stone Small Straight Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_small_straight_arch 8",
	recipe = {
		{ "default:stone", "default:stone", "default:stone" },
		{ "default:stone", "", "default:stone" },
		{ "default:stone", "", "default:stone" }
	}
})

minetest.register_node( "eurokit:stone_arrow_hole", {
	description = "Stone Arrow Hole",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_arrow_hole 21",
	recipe = {
		{ "", "default:stone", "" },
		{ "default:stone", "", "default:stone" },
		{ "", "default:stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "eurokit:stone_arrow_hole", "eurokit:stone_arrow_hole", "" },
		{ "eurokit:stone_arrow_hole", "eurokit:stone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_pointed_arch_1_inward", {
	description = "Stone Pointed Arch 1 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:stone_pointed_arch_1", "" },
		{ "eurokit:stone_pointed_arch_1", "", "eurokit:stone_pointed_arch_1" },
		{ "eurokit:stone_pointed_arch_1", "eurokit:stone_pointed_arch_1", "eurokit:stone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pointed_arch_1 7",
	recipe = {
		{ "eurokit:stone_pointed_arch_1_inward", "eurokit:stone_pointed_arch_1_inward", "" },
		{ "eurokit:stone_pointed_arch_1_inward", "eurokit:stone_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_wall_indentation_1", {
	description = "Stone Wall Indentation 1",
	groups = { cracky = 3, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_wall_indentation_1 7",
	recipe = {
		{ "eurokit:stone_slope", "eurokit:stone_slope", "" },
		{ "eurokit:stone_slope", "", "eurokit:stone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_counterarch_outward", {
	description = "Stone Counterarch Outward",
	groups = { cracky = 3, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_counterarch_outward 6",
	recipe = {
		{ "default:stone", "default:stone", "default:stone" },
		{ "", "", "default:stone" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "eurokit:stone_counterarch_outward", "eurokit:stone_counterarch_outward", "eurokit:stone_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_arrowslit_end_right", {
	description = "Stone Arrowslit End Right",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:stone_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:stone_arrow_hole" },
		{ "", "eurokit:stone_arrow_hole", "eurokit:stone_arrow_hole" },
		{ "", "", "eurokit:stone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:stone_pillar_base", {
	description = "Stone Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_pillar_base 7",
	recipe = {
		{ "", "default:stone", "" },
		{ "", "default:stone", "" },
		{ "", "default:stone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "eurokit:stone_pillar_base", "eurokit:stone_pillar_base", "eurokit:stone_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_long_slope_2_outward", {
	description = "Stone Long Slope 2 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_long_slope_2", "" },
		{ "eurokit:stone_long_slope_2", "eurokit:stone_long_slope_2", "eurokit:stone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:stone_slope_outward", {
	description = "Stone Slope Outward",
	groups = { cracky = 3, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:stone" },
		{ "default:stone", "default:stone", "default:stone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 1",
	recipe = {
		{ "eurokit:stone_slope_outward", "eurokit:stone_slope_outward", "eurokit:stone_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_long_slope_2", {
	description = "Stone Long Slope 2",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_slope", "" },
		{ "eurokit:stone_slope", "eurokit:stone_slope", "eurokit:stone_slope" }
	}
})

minetest.register_node( "eurokit:stone_long_slope_1_outward", {
	description = "Stone Long Slope 1 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_long_slope_1", "" },
		{ "eurokit:stone_long_slope_1", "eurokit:stone_long_slope_1", "eurokit:stone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:stone_long_slope_3_inward", {
	description = "Stone Long Slope 3 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:stone_long_slope_3", "" },
		{ "eurokit:stone_long_slope_3", "", "eurokit:stone_long_slope_3" },
		{ "eurokit:stone_long_slope_3", "eurokit:stone_long_slope_3", "eurokit:stone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:stone_long_slope_1", {
	description = "Stone Long Slope 1",
	groups = { cracky = 3, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:stone_slope", "", "" },
		{ "eurokit:stone_slope", "eurokit:stone_slope", "eurokit:stone_slope" }
	}
})

minetest.register_node( "eurokit:stone_long_slope_3_outward", {
	description = "Stone Long Slope 3 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:stone_long_slope_3", "" },
		{ "eurokit:stone_long_slope_3", "eurokit:stone_long_slope_3", "eurokit:stone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:stone_long_slope_3", {
	description = "Stone Long Slope 3",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:stone_slope" },
		{ "eurokit:stone_slope", "eurokit:stone_slope", "eurokit:stone_slope" }
	}
})

minetest.register_node( "eurokit:stone_long_slope_2_inward", {
	description = "Stone Long Slope 2 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:stone_long_slope_2", "" },
		{ "eurokit:stone_long_slope_2", "", "eurokit:stone_long_slope_2" },
		{ "eurokit:stone_long_slope_2", "eurokit:stone_long_slope_2", "eurokit:stone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:stone_slope_inward", {
	description = "Stone Slope Inward",
	groups = { cracky = 3, inward = 1, slope = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_slope_inward 7",
	recipe = {
		{ "", "", "default:stone" },
		{ "", "default:stone", "" },
		{ "default:stone", "default:stone", "default:stone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 2",
	recipe = {
		{ "eurokit:stone_slope_inward", "", "" },
		{ "eurokit:stone_slope_inward", "eurokit:stone_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:stone_long_slope_1_inward", {
	description = "Stone Long Slope 1 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:stone_long_slope_1", "" },
		{ "eurokit:stone_long_slope_1", "", "eurokit:stone_long_slope_1" },
		{ "eurokit:stone_long_slope_1", "eurokit:stone_long_slope_1", "eurokit:stone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:stone_slope", {
	description = "Stone Slope",
	groups = { cracky = 3, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_stone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:stone_slope 11",
	recipe = {
		{ "", "", "default:stone" },
		{ "", "default:stone", "default:stone" },
		{ "default:stone", "default:stone", "default:stone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:stone 2",
	recipe = {
		{ "eurokit:stone_slope", "eurokit:stone_slope", "" },
		{ "eurokit:stone_slope", "eurokit:stone_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_half_pillar_mid", {
	description = "Silver Sandstone Brick Half Pillar Mid",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_half_pillar_mid 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pillar_mid 2",
	recipe = {
		{ "eurokit:silver_sandstone_brick_half_pillar_mid", "eurokit:silver_sandstone_brick_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_pillar_top", {
	description = "Silver Sandstone Brick Pillar Top",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pillar_top 12",
	recipe = {
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "", "default:silver_sandstone_brick", "" },
		{ "", "default:silver_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pillar_top", "eurokit:silver_sandstone_brick_pillar_top", "eurokit:silver_sandstone_brick_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_counterarch", {
	description = "Silver Sandstone Brick Counterarch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_counterarch 7",
	recipe = {
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "", "", "default:silver_sandstone_brick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 3",
	recipe = {
		{ "eurokit:silver_sandstone_brick_counterarch", "eurokit:silver_sandstone_brick_counterarch", "" },
		{ "eurokit:silver_sandstone_brick_counterarch", "eurokit:silver_sandstone_brick_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_vertical_arrowslit", {
	description = "Silver Sandstone Brick Vertical Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:silver_sandstone_brick_arrow_hole", "" },
		{ "", "eurokit:silver_sandstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_wall_indentation_2_inward", {
	description = "Silver Sandstone Brick Wall Indentation 2 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:silver_sandstone_brick_wall_indentation_2", "" },
		{ "eurokit:silver_sandstone_brick_wall_indentation_2", "", "eurokit:silver_sandstone_brick_wall_indentation_2" },
		{ "eurokit:silver_sandstone_brick_wall_indentation_2", "eurokit:silver_sandstone_brick_wall_indentation_2", "eurokit:silver_sandstone_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_wall_indentation_2 4",
	recipe = {
		{ "eurokit:silver_sandstone_brick_wall_indentation_2_inward", "eurokit:silver_sandstone_brick_wall_indentation_2_inward", "eurokit:silver_sandstone_brick_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_half_pillar_base", {
	description = "Silver Sandstone Brick Half Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_half_pillar_base 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pillar_base 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_half_pillar_base", "eurokit:silver_sandstone_brick_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_small_pointed_arch", {
	description = "Silver Sandstone Brick Small Pointed Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_small_pointed_arch 9",
	recipe = {
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope" },
		{ "eurokit:silver_sandstone_brick_slope", "", "eurokit:silver_sandstone_brick_slope" },
		{ "eurokit:silver_sandstone_brick_slope", "", "eurokit:silver_sandstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_pointed_arch_2", {
	description = "Silver Sandstone Brick Pointed Arch 2",
	groups = { cracky = 3, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "" },
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "" },
		{ "eurokit:silver_sandstone_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_slope 5",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pointed_arch_2", "eurokit:silver_sandstone_brick_pointed_arch_2", "" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_2", "eurokit:silver_sandstone_brick_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_machicolation", {
	description = "Silver Sandstone Brick Machicolation",
	groups = { cracky = 3, machicolation = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_machicolation 18",
	recipe = {
		{ "default:silver_sandstone_brick", "", "default:silver_sandstone_brick" },
		{ "default:silver_sandstone_brick", "", "default:silver_sandstone_brick" },
		{ "default:silver_sandstone_brick", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_pointed_arch_1_outward", {
	description = "Silver Sandstone Brick Pointed Arch 1 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_brick_pointed_arch_1", "" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_1", "eurokit:silver_sandstone_brick_pointed_arch_1", "eurokit:silver_sandstone_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pointed_arch_1 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pointed_arch_1_outward", "eurokit:silver_sandstone_brick_pointed_arch_1_outward", "eurokit:silver_sandstone_brick_pointed_arch_1_outward" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_1_outward", "eurokit:silver_sandstone_brick_pointed_arch_1_outward", "eurokit:silver_sandstone_brick_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_arrowslit_end_top", {
	description = "Silver Sandstone Brick Arrowslit End Top",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:silver_sandstone_brick_arrow_hole", "eurokit:silver_sandstone_brick_arrow_hole", "eurokit:silver_sandstone_brick_arrow_hole" },
		{ "", "eurokit:silver_sandstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_arrowslit_end_bottom", {
	description = "Silver Sandstone Brick Arrowslit End Bottom",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_brick_arrow_hole", "" },
		{ "eurokit:silver_sandstone_brick_arrow_hole", "eurokit:silver_sandstone_brick_arrow_hole", "eurokit:silver_sandstone_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_wall_indentation_2_outward", {
	description = "Silver Sandstone Brick Wall Indentation 2 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_brick_wall_indentation_2", "" },
		{ "eurokit:silver_sandstone_brick_wall_indentation_2", "eurokit:silver_sandstone_brick_wall_indentation_2", "eurokit:silver_sandstone_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_wall_indentation_2 3",
	recipe = {
		{ "eurokit:silver_sandstone_brick_wall_indentation_2_outward", "eurokit:silver_sandstone_brick_wall_indentation_2_outward", "" },
		{ "eurokit:silver_sandstone_brick_wall_indentation_2_outward", "eurokit:silver_sandstone_brick_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_pillar_mid", {
	description = "Silver Sandstone Brick Pillar Mid",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pillar_mid 14",
	recipe = {
		{ "", "default:silver_sandstone_brick", "" },
		{ "", "default:silver_sandstone_brick", "" },
		{ "", "default:silver_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pillar_mid", "eurokit:silver_sandstone_brick_pillar_mid", "eurokit:silver_sandstone_brick_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_arrowslit_end_left", {
	description = "Silver Sandstone Brick Arrowslit End Left",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:silver_sandstone_brick_arrow_hole", "", "" },
		{ "eurokit:silver_sandstone_brick_arrow_hole", "eurokit:silver_sandstone_brick_arrow_hole", "" },
		{ "eurokit:silver_sandstone_brick_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_wall_indentation_2", {
	description = "Silver Sandstone Brick Wall Indentation 2",
	groups = { cracky = 3, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_wall_indentation_2 2",
	recipe = {
		{ "eurokit:silver_sandstone_brick_slope", "", "" },
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_arch_inward", {
	description = "Silver Sandstone Brick Arch Inward",
	groups = { cracky = 3, inward = 1, arch = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_arch_inward 13",
	recipe = {
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "default:silver_sandstone_brick", "", "default:silver_sandstone_brick" },
		{ "", "default:silver_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_arch_inward", "eurokit:silver_sandstone_brick_arch_inward", "eurokit:silver_sandstone_brick_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_small_arch", {
	description = "Silver Sandstone Brick Small Arch",
	groups = { cracky = 3, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:silver_sandstone_brick", "" },
		{ "default:silver_sandstone_brick", "", "default:silver_sandstone_brick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 2",
	recipe = {
		{ "eurokit:silver_sandstone_brick_small_arch", "eurokit:silver_sandstone_brick_small_arch", "" },
		{ "eurokit:silver_sandstone_brick_small_arch", "eurokit:silver_sandstone_brick_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_thin_wall", {
	description = "Silver Sandstone Brick Thin Wall",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_thin_wall 24",
	recipe = {
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "" },
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "" },
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:silver_sandstone_brick_thin_wall", "eurokit:silver_sandstone_brick_thin_wall", "eurokit:silver_sandstone_brick_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_counterarch_inward", {
	description = "Silver Sandstone Brick Counterarch Inward",
	groups = { cracky = 3, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_counterarch_inward 3",
	recipe = {
		{ "", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "", "", "default:silver_sandstone_brick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 2",
	recipe = {
		{ "eurokit:silver_sandstone_brick_counterarch_inward", "", "" },
		{ "eurokit:silver_sandstone_brick_counterarch_inward", "eurokit:silver_sandstone_brick_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_small_counterarch", {
	description = "Silver Sandstone Brick Small Counterarch",
	groups = { cracky = 3, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_small_counterarch 17",
	recipe = {
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "", "default:silver_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_small_counterarch", "eurokit:silver_sandstone_brick_small_counterarch", "" },
		{ "eurokit:silver_sandstone_brick_small_counterarch", "eurokit:silver_sandstone_brick_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_horizontal_arrowslit", {
	description = "Silver Sandstone Brick Horizontal Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:silver_sandstone_brick_arrow_hole", "eurokit:silver_sandstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_arch_outward", {
	description = "Silver Sandstone Brick Arch Outward",
	groups = { cracky = 3, outward = 1, arch = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_arch_outward 22",
	recipe = {
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "", "default:silver_sandstone_brick", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_arch_outward", "", "" },
		{ "eurokit:silver_sandstone_brick_arch_outward", "eurokit:silver_sandstone_brick_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_arch", {
	description = "Silver Sandstone Brick Arch",
	groups = { cracky = 3, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_arch 18",
	recipe = {
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "" },
		{ "default:silver_sandstone_brick", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_arch", "eurokit:silver_sandstone_brick_arch", "" },
		{ "eurokit:silver_sandstone_brick_arch", "eurokit:silver_sandstone_brick_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_half_pillar_top", {
	description = "Silver Sandstone Brick Half Pillar Top",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_half_pillar_top 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pillar_top 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_half_pillar_top", "eurokit:silver_sandstone_brick_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_pointed_arch_2_inward", {
	description = "Silver Sandstone Brick Pointed Arch 2 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:silver_sandstone_brick_pointed_arch_2", "" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_2", "", "eurokit:silver_sandstone_brick_pointed_arch_2" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_2", "eurokit:silver_sandstone_brick_pointed_arch_2", "eurokit:silver_sandstone_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pointed_arch_2 6",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pointed_arch_2_inward", "eurokit:silver_sandstone_brick_pointed_arch_2_inward", "" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_2_inward", "eurokit:silver_sandstone_brick_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_pointed_arch_2_outward", {
	description = "Silver Sandstone Brick Pointed Arch 2 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_brick_pointed_arch_2", "" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_2", "eurokit:silver_sandstone_brick_pointed_arch_2", "eurokit:silver_sandstone_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pointed_arch_2_outward", "eurokit:silver_sandstone_brick_pointed_arch_2_outward", "eurokit:silver_sandstone_brick_pointed_arch_2_outward" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_2_outward", "eurokit:silver_sandstone_brick_pointed_arch_2_outward", "eurokit:silver_sandstone_brick_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_wall_indentation_1_outward", {
	description = "Silver Sandstone Brick Wall Indentation 1 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_brick_wall_indentation_1", "" },
		{ "eurokit:silver_sandstone_brick_wall_indentation_1", "eurokit:silver_sandstone_brick_wall_indentation_1", "eurokit:silver_sandstone_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_wall_indentation_1 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_wall_indentation_1_outward", "eurokit:silver_sandstone_brick_wall_indentation_1_outward", "" },
		{ "eurokit:silver_sandstone_brick_wall_indentation_1_outward", "eurokit:silver_sandstone_brick_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_wall_indentation_1_inward", {
	description = "Silver Sandstone Brick Wall Indentation 1 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:silver_sandstone_brick_wall_indentation_1", "" },
		{ "eurokit:silver_sandstone_brick_wall_indentation_1", "", "eurokit:silver_sandstone_brick_wall_indentation_1" },
		{ "eurokit:silver_sandstone_brick_wall_indentation_1", "eurokit:silver_sandstone_brick_wall_indentation_1", "eurokit:silver_sandstone_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_wall_indentation_1 5",
	recipe = {
		{ "eurokit:silver_sandstone_brick_wall_indentation_1_inward", "eurokit:silver_sandstone_brick_wall_indentation_1_inward", "eurokit:silver_sandstone_brick_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_pointed_arch_1", {
	description = "Silver Sandstone Brick Pointed Arch 1",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pointed_arch_1 11",
	recipe = {
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "" },
		{ "eurokit:silver_sandstone_brick_slope", "", "" },
		{ "eurokit:silver_sandstone_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_slope 2",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pointed_arch_1", "eurokit:silver_sandstone_brick_pointed_arch_1", "eurokit:silver_sandstone_brick_pointed_arch_1" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_1", "eurokit:silver_sandstone_brick_pointed_arch_1", "eurokit:silver_sandstone_brick_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_small_straight_arch", {
	description = "Silver Sandstone Brick Small Straight Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_small_straight_arch 8",
	recipe = {
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "default:silver_sandstone_brick", "", "default:silver_sandstone_brick" },
		{ "default:silver_sandstone_brick", "", "default:silver_sandstone_brick" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_arrow_hole", {
	description = "Silver Sandstone Brick Arrow Hole",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_arrow_hole 21",
	recipe = {
		{ "", "default:silver_sandstone_brick", "" },
		{ "default:silver_sandstone_brick", "", "default:silver_sandstone_brick" },
		{ "", "default:silver_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_arrow_hole", "eurokit:silver_sandstone_brick_arrow_hole", "" },
		{ "eurokit:silver_sandstone_brick_arrow_hole", "eurokit:silver_sandstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_pointed_arch_1_inward", {
	description = "Silver Sandstone Brick Pointed Arch 1 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:silver_sandstone_brick_pointed_arch_1", "" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_1", "", "eurokit:silver_sandstone_brick_pointed_arch_1" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_1", "eurokit:silver_sandstone_brick_pointed_arch_1", "eurokit:silver_sandstone_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pointed_arch_1 7",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pointed_arch_1_inward", "eurokit:silver_sandstone_brick_pointed_arch_1_inward", "" },
		{ "eurokit:silver_sandstone_brick_pointed_arch_1_inward", "eurokit:silver_sandstone_brick_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_wall_indentation_1", {
	description = "Silver Sandstone Brick Wall Indentation 1",
	groups = { cracky = 3, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_wall_indentation_1 7",
	recipe = {
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "" },
		{ "eurokit:silver_sandstone_brick_slope", "", "eurokit:silver_sandstone_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_counterarch_outward", {
	description = "Silver Sandstone Brick Counterarch Outward",
	groups = { cracky = 3, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_counterarch_outward 6",
	recipe = {
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "", "", "default:silver_sandstone_brick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_counterarch_outward", "eurokit:silver_sandstone_brick_counterarch_outward", "eurokit:silver_sandstone_brick_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_arrowslit_end_right", {
	description = "Silver Sandstone Brick Arrowslit End Right",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_brick_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:silver_sandstone_brick_arrow_hole" },
		{ "", "eurokit:silver_sandstone_brick_arrow_hole", "eurokit:silver_sandstone_brick_arrow_hole" },
		{ "", "", "eurokit:silver_sandstone_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_pillar_base", {
	description = "Silver Sandstone Brick Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_pillar_base 7",
	recipe = {
		{ "", "default:silver_sandstone_brick", "" },
		{ "", "default:silver_sandstone_brick", "" },
		{ "", "default:silver_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_pillar_base", "eurokit:silver_sandstone_brick_pillar_base", "eurokit:silver_sandstone_brick_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_long_slope_2_outward", {
	description = "Silver Sandstone Brick Long Slope 2 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_brick_long_slope_2", "" },
		{ "eurokit:silver_sandstone_brick_long_slope_2", "eurokit:silver_sandstone_brick_long_slope_2", "eurokit:silver_sandstone_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_slope_outward", {
	description = "Silver Sandstone Brick Slope Outward",
	groups = { cracky = 3, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:silver_sandstone_brick" },
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 1",
	recipe = {
		{ "eurokit:silver_sandstone_brick_slope_outward", "eurokit:silver_sandstone_brick_slope_outward", "eurokit:silver_sandstone_brick_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_long_slope_2", {
	description = "Silver Sandstone Brick Long Slope 2",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_brick_slope", "" },
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_long_slope_1_outward", {
	description = "Silver Sandstone Brick Long Slope 1 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_brick_long_slope_1", "" },
		{ "eurokit:silver_sandstone_brick_long_slope_1", "eurokit:silver_sandstone_brick_long_slope_1", "eurokit:silver_sandstone_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_long_slope_3_inward", {
	description = "Silver Sandstone Brick Long Slope 3 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:silver_sandstone_brick_long_slope_3", "" },
		{ "eurokit:silver_sandstone_brick_long_slope_3", "", "eurokit:silver_sandstone_brick_long_slope_3" },
		{ "eurokit:silver_sandstone_brick_long_slope_3", "eurokit:silver_sandstone_brick_long_slope_3", "eurokit:silver_sandstone_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_long_slope_1", {
	description = "Silver Sandstone Brick Long Slope 1",
	groups = { cracky = 3, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:silver_sandstone_brick_slope", "", "" },
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_long_slope_3_outward", {
	description = "Silver Sandstone Brick Long Slope 3 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_brick_long_slope_3", "" },
		{ "eurokit:silver_sandstone_brick_long_slope_3", "eurokit:silver_sandstone_brick_long_slope_3", "eurokit:silver_sandstone_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_long_slope_3", {
	description = "Silver Sandstone Brick Long Slope 3",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:silver_sandstone_brick_slope" },
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_long_slope_2_inward", {
	description = "Silver Sandstone Brick Long Slope 2 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:silver_sandstone_brick_long_slope_2", "" },
		{ "eurokit:silver_sandstone_brick_long_slope_2", "", "eurokit:silver_sandstone_brick_long_slope_2" },
		{ "eurokit:silver_sandstone_brick_long_slope_2", "eurokit:silver_sandstone_brick_long_slope_2", "eurokit:silver_sandstone_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_slope_inward", {
	description = "Silver Sandstone Brick Slope Inward",
	groups = { cracky = 3, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_slope_inward 7",
	recipe = {
		{ "", "", "default:silver_sandstone_brick" },
		{ "", "default:silver_sandstone_brick", "" },
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 2",
	recipe = {
		{ "eurokit:silver_sandstone_brick_slope_inward", "", "" },
		{ "eurokit:silver_sandstone_brick_slope_inward", "eurokit:silver_sandstone_brick_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_long_slope_1_inward", {
	description = "Silver Sandstone Brick Long Slope 1 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:silver_sandstone_brick_long_slope_1", "" },
		{ "eurokit:silver_sandstone_brick_long_slope_1", "", "eurokit:silver_sandstone_brick_long_slope_1" },
		{ "eurokit:silver_sandstone_brick_long_slope_1", "eurokit:silver_sandstone_brick_long_slope_1", "eurokit:silver_sandstone_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_brick_slope", {
	description = "Silver Sandstone Brick Slope",
	groups = { cracky = 3, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_silver_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_brick_slope 11",
	recipe = {
		{ "", "", "default:silver_sandstone_brick" },
		{ "", "default:silver_sandstone_brick", "default:silver_sandstone_brick" },
		{ "default:silver_sandstone_brick", "default:silver_sandstone_brick", "default:silver_sandstone_brick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone_brick 2",
	recipe = {
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "" },
		{ "eurokit:silver_sandstone_brick_slope", "eurokit:silver_sandstone_brick_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_half_pillar_mid", {
	description = "Desert Sandstone Brick Half Pillar Mid",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_half_pillar_mid 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pillar_mid 2",
	recipe = {
		{ "eurokit:desert_sandstone_brick_half_pillar_mid", "eurokit:desert_sandstone_brick_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_pillar_top", {
	description = "Desert Sandstone Brick Pillar Top",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pillar_top 12",
	recipe = {
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "", "default:desert_sandstone_brick", "" },
		{ "", "default:desert_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pillar_top", "eurokit:desert_sandstone_brick_pillar_top", "eurokit:desert_sandstone_brick_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_counterarch", {
	description = "Desert Sandstone Brick Counterarch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_counterarch 7",
	recipe = {
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "", "", "default:desert_sandstone_brick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 3",
	recipe = {
		{ "eurokit:desert_sandstone_brick_counterarch", "eurokit:desert_sandstone_brick_counterarch", "" },
		{ "eurokit:desert_sandstone_brick_counterarch", "eurokit:desert_sandstone_brick_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_vertical_arrowslit", {
	description = "Desert Sandstone Brick Vertical Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:desert_sandstone_brick_arrow_hole", "" },
		{ "", "eurokit:desert_sandstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_wall_indentation_2_inward", {
	description = "Desert Sandstone Brick Wall Indentation 2 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:desert_sandstone_brick_wall_indentation_2", "" },
		{ "eurokit:desert_sandstone_brick_wall_indentation_2", "", "eurokit:desert_sandstone_brick_wall_indentation_2" },
		{ "eurokit:desert_sandstone_brick_wall_indentation_2", "eurokit:desert_sandstone_brick_wall_indentation_2", "eurokit:desert_sandstone_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_wall_indentation_2 4",
	recipe = {
		{ "eurokit:desert_sandstone_brick_wall_indentation_2_inward", "eurokit:desert_sandstone_brick_wall_indentation_2_inward", "eurokit:desert_sandstone_brick_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_half_pillar_base", {
	description = "Desert Sandstone Brick Half Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_half_pillar_base 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pillar_base 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_half_pillar_base", "eurokit:desert_sandstone_brick_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_small_pointed_arch", {
	description = "Desert Sandstone Brick Small Pointed Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_small_pointed_arch 9",
	recipe = {
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope" },
		{ "eurokit:desert_sandstone_brick_slope", "", "eurokit:desert_sandstone_brick_slope" },
		{ "eurokit:desert_sandstone_brick_slope", "", "eurokit:desert_sandstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_pointed_arch_2", {
	description = "Desert Sandstone Brick Pointed Arch 2",
	groups = { cracky = 2, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "" },
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "" },
		{ "eurokit:desert_sandstone_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_slope 5",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pointed_arch_2", "eurokit:desert_sandstone_brick_pointed_arch_2", "" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_2", "eurokit:desert_sandstone_brick_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_machicolation", {
	description = "Desert Sandstone Brick Machicolation",
	groups = { cracky = 2, machicolation = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_machicolation 18",
	recipe = {
		{ "default:desert_sandstone_brick", "", "default:desert_sandstone_brick" },
		{ "default:desert_sandstone_brick", "", "default:desert_sandstone_brick" },
		{ "default:desert_sandstone_brick", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_pointed_arch_1_outward", {
	description = "Desert Sandstone Brick Pointed Arch 1 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_brick_pointed_arch_1", "" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_1", "eurokit:desert_sandstone_brick_pointed_arch_1", "eurokit:desert_sandstone_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pointed_arch_1 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pointed_arch_1_outward", "eurokit:desert_sandstone_brick_pointed_arch_1_outward", "eurokit:desert_sandstone_brick_pointed_arch_1_outward" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_1_outward", "eurokit:desert_sandstone_brick_pointed_arch_1_outward", "eurokit:desert_sandstone_brick_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_arrowslit_end_top", {
	description = "Desert Sandstone Brick Arrowslit End Top",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:desert_sandstone_brick_arrow_hole", "eurokit:desert_sandstone_brick_arrow_hole", "eurokit:desert_sandstone_brick_arrow_hole" },
		{ "", "eurokit:desert_sandstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_arrowslit_end_bottom", {
	description = "Desert Sandstone Brick Arrowslit End Bottom",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_brick_arrow_hole", "" },
		{ "eurokit:desert_sandstone_brick_arrow_hole", "eurokit:desert_sandstone_brick_arrow_hole", "eurokit:desert_sandstone_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_wall_indentation_2_outward", {
	description = "Desert Sandstone Brick Wall Indentation 2 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_brick_wall_indentation_2", "" },
		{ "eurokit:desert_sandstone_brick_wall_indentation_2", "eurokit:desert_sandstone_brick_wall_indentation_2", "eurokit:desert_sandstone_brick_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_wall_indentation_2 3",
	recipe = {
		{ "eurokit:desert_sandstone_brick_wall_indentation_2_outward", "eurokit:desert_sandstone_brick_wall_indentation_2_outward", "" },
		{ "eurokit:desert_sandstone_brick_wall_indentation_2_outward", "eurokit:desert_sandstone_brick_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_pillar_mid", {
	description = "Desert Sandstone Brick Pillar Mid",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pillar_mid 14",
	recipe = {
		{ "", "default:desert_sandstone_brick", "" },
		{ "", "default:desert_sandstone_brick", "" },
		{ "", "default:desert_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pillar_mid", "eurokit:desert_sandstone_brick_pillar_mid", "eurokit:desert_sandstone_brick_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_arrowslit_end_left", {
	description = "Desert Sandstone Brick Arrowslit End Left",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:desert_sandstone_brick_arrow_hole", "", "" },
		{ "eurokit:desert_sandstone_brick_arrow_hole", "eurokit:desert_sandstone_brick_arrow_hole", "" },
		{ "eurokit:desert_sandstone_brick_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_wall_indentation_2", {
	description = "Desert Sandstone Brick Wall Indentation 2",
	groups = { cracky = 2, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_wall_indentation_2 2",
	recipe = {
		{ "eurokit:desert_sandstone_brick_slope", "", "" },
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_arch_inward", {
	description = "Desert Sandstone Brick Arch Inward",
	groups = { cracky = 2, inward = 1, arch = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_arch_inward 13",
	recipe = {
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "default:desert_sandstone_brick", "", "default:desert_sandstone_brick" },
		{ "", "default:desert_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_arch_inward", "eurokit:desert_sandstone_brick_arch_inward", "eurokit:desert_sandstone_brick_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_small_arch", {
	description = "Desert Sandstone Brick Small Arch",
	groups = { cracky = 2, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:desert_sandstone_brick", "" },
		{ "default:desert_sandstone_brick", "", "default:desert_sandstone_brick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 2",
	recipe = {
		{ "eurokit:desert_sandstone_brick_small_arch", "eurokit:desert_sandstone_brick_small_arch", "" },
		{ "eurokit:desert_sandstone_brick_small_arch", "eurokit:desert_sandstone_brick_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_thin_wall", {
	description = "Desert Sandstone Brick Thin Wall",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_thin_wall 24",
	recipe = {
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "" },
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "" },
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_sandstone_brick_thin_wall", "eurokit:desert_sandstone_brick_thin_wall", "eurokit:desert_sandstone_brick_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_counterarch_inward", {
	description = "Desert Sandstone Brick Counterarch Inward",
	groups = { cracky = 2, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_counterarch_inward 3",
	recipe = {
		{ "", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "", "", "default:desert_sandstone_brick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 2",
	recipe = {
		{ "eurokit:desert_sandstone_brick_counterarch_inward", "", "" },
		{ "eurokit:desert_sandstone_brick_counterarch_inward", "eurokit:desert_sandstone_brick_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_small_counterarch", {
	description = "Desert Sandstone Brick Small Counterarch",
	groups = { cracky = 2, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_small_counterarch 17",
	recipe = {
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "", "default:desert_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_small_counterarch", "eurokit:desert_sandstone_brick_small_counterarch", "" },
		{ "eurokit:desert_sandstone_brick_small_counterarch", "eurokit:desert_sandstone_brick_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_horizontal_arrowslit", {
	description = "Desert Sandstone Brick Horizontal Arrowslit",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_sandstone_brick_arrow_hole", "eurokit:desert_sandstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_arch_outward", {
	description = "Desert Sandstone Brick Arch Outward",
	groups = { cracky = 2, outward = 1, arch = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_arch_outward 22",
	recipe = {
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "", "default:desert_sandstone_brick", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_arch_outward", "", "" },
		{ "eurokit:desert_sandstone_brick_arch_outward", "eurokit:desert_sandstone_brick_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_arch", {
	description = "Desert Sandstone Brick Arch",
	groups = { cracky = 2, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_arch 18",
	recipe = {
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "" },
		{ "default:desert_sandstone_brick", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_arch", "eurokit:desert_sandstone_brick_arch", "" },
		{ "eurokit:desert_sandstone_brick_arch", "eurokit:desert_sandstone_brick_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_half_pillar_top", {
	description = "Desert Sandstone Brick Half Pillar Top",
	groups = { cracky = 2, pillar = 1, half_pillar = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_half_pillar_top 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pillar_top 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_half_pillar_top", "eurokit:desert_sandstone_brick_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_pointed_arch_2_inward", {
	description = "Desert Sandstone Brick Pointed Arch 2 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:desert_sandstone_brick_pointed_arch_2", "" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_2", "", "eurokit:desert_sandstone_brick_pointed_arch_2" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_2", "eurokit:desert_sandstone_brick_pointed_arch_2", "eurokit:desert_sandstone_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pointed_arch_2 6",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pointed_arch_2_inward", "eurokit:desert_sandstone_brick_pointed_arch_2_inward", "" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_2_inward", "eurokit:desert_sandstone_brick_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_pointed_arch_2_outward", {
	description = "Desert Sandstone Brick Pointed Arch 2 Outward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_brick_pointed_arch_2", "" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_2", "eurokit:desert_sandstone_brick_pointed_arch_2", "eurokit:desert_sandstone_brick_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pointed_arch_2 3",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pointed_arch_2_outward", "eurokit:desert_sandstone_brick_pointed_arch_2_outward", "eurokit:desert_sandstone_brick_pointed_arch_2_outward" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_2_outward", "eurokit:desert_sandstone_brick_pointed_arch_2_outward", "eurokit:desert_sandstone_brick_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_wall_indentation_1_outward", {
	description = "Desert Sandstone Brick Wall Indentation 1 Outward",
	groups = { cracky = 2, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_brick_wall_indentation_1", "" },
		{ "eurokit:desert_sandstone_brick_wall_indentation_1", "eurokit:desert_sandstone_brick_wall_indentation_1", "eurokit:desert_sandstone_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_wall_indentation_1 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_wall_indentation_1_outward", "eurokit:desert_sandstone_brick_wall_indentation_1_outward", "" },
		{ "eurokit:desert_sandstone_brick_wall_indentation_1_outward", "eurokit:desert_sandstone_brick_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_wall_indentation_1_inward", {
	description = "Desert Sandstone Brick Wall Indentation 1 Inward",
	groups = { cracky = 2, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_sandstone_brick_wall_indentation_1", "" },
		{ "eurokit:desert_sandstone_brick_wall_indentation_1", "", "eurokit:desert_sandstone_brick_wall_indentation_1" },
		{ "eurokit:desert_sandstone_brick_wall_indentation_1", "eurokit:desert_sandstone_brick_wall_indentation_1", "eurokit:desert_sandstone_brick_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_wall_indentation_1 5",
	recipe = {
		{ "eurokit:desert_sandstone_brick_wall_indentation_1_inward", "eurokit:desert_sandstone_brick_wall_indentation_1_inward", "eurokit:desert_sandstone_brick_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_pointed_arch_1", {
	description = "Desert Sandstone Brick Pointed Arch 1",
	groups = { cracky = 2, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pointed_arch_1 11",
	recipe = {
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "" },
		{ "eurokit:desert_sandstone_brick_slope", "", "" },
		{ "eurokit:desert_sandstone_brick_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_slope 2",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pointed_arch_1", "eurokit:desert_sandstone_brick_pointed_arch_1", "eurokit:desert_sandstone_brick_pointed_arch_1" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_1", "eurokit:desert_sandstone_brick_pointed_arch_1", "eurokit:desert_sandstone_brick_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_small_straight_arch", {
	description = "Desert Sandstone Brick Small Straight Arch",
	groups = { cracky = 2, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_small_straight_arch 8",
	recipe = {
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "default:desert_sandstone_brick", "", "default:desert_sandstone_brick" },
		{ "default:desert_sandstone_brick", "", "default:desert_sandstone_brick" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_arrow_hole", {
	description = "Desert Sandstone Brick Arrow Hole",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_arrow_hole 21",
	recipe = {
		{ "", "default:desert_sandstone_brick", "" },
		{ "default:desert_sandstone_brick", "", "default:desert_sandstone_brick" },
		{ "", "default:desert_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_arrow_hole", "eurokit:desert_sandstone_brick_arrow_hole", "" },
		{ "eurokit:desert_sandstone_brick_arrow_hole", "eurokit:desert_sandstone_brick_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_pointed_arch_1_inward", {
	description = "Desert Sandstone Brick Pointed Arch 1 Inward",
	groups = { cracky = 2, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:desert_sandstone_brick_pointed_arch_1", "" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_1", "", "eurokit:desert_sandstone_brick_pointed_arch_1" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_1", "eurokit:desert_sandstone_brick_pointed_arch_1", "eurokit:desert_sandstone_brick_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pointed_arch_1 7",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pointed_arch_1_inward", "eurokit:desert_sandstone_brick_pointed_arch_1_inward", "" },
		{ "eurokit:desert_sandstone_brick_pointed_arch_1_inward", "eurokit:desert_sandstone_brick_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_wall_indentation_1", {
	description = "Desert Sandstone Brick Wall Indentation 1",
	groups = { cracky = 2, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_wall_indentation_1 7",
	recipe = {
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "" },
		{ "eurokit:desert_sandstone_brick_slope", "", "eurokit:desert_sandstone_brick_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_counterarch_outward", {
	description = "Desert Sandstone Brick Counterarch Outward",
	groups = { cracky = 2, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_counterarch_outward 6",
	recipe = {
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "", "", "default:desert_sandstone_brick" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_counterarch_outward", "eurokit:desert_sandstone_brick_counterarch_outward", "eurokit:desert_sandstone_brick_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_arrowslit_end_right", {
	description = "Desert Sandstone Brick Arrowslit End Right",
	groups = { cracky = 2, arrowslit = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:desert_sandstone_brick_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:desert_sandstone_brick_arrow_hole" },
		{ "", "eurokit:desert_sandstone_brick_arrow_hole", "eurokit:desert_sandstone_brick_arrow_hole" },
		{ "", "", "eurokit:desert_sandstone_brick_arrow_hole" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_pillar_base", {
	description = "Desert Sandstone Brick Pillar Base",
	groups = { cracky = 2, pillar = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_pillar_base 7",
	recipe = {
		{ "", "default:desert_sandstone_brick", "" },
		{ "", "default:desert_sandstone_brick", "" },
		{ "", "default:desert_sandstone_brick", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_pillar_base", "eurokit:desert_sandstone_brick_pillar_base", "eurokit:desert_sandstone_brick_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_long_slope_2_outward", {
	description = "Desert Sandstone Brick Long Slope 2 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_brick_long_slope_2", "" },
		{ "eurokit:desert_sandstone_brick_long_slope_2", "eurokit:desert_sandstone_brick_long_slope_2", "eurokit:desert_sandstone_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_slope_outward", {
	description = "Desert Sandstone Brick Slope Outward",
	groups = { cracky = 2, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:desert_sandstone_brick" },
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 1",
	recipe = {
		{ "eurokit:desert_sandstone_brick_slope_outward", "eurokit:desert_sandstone_brick_slope_outward", "eurokit:desert_sandstone_brick_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_long_slope_2", {
	description = "Desert Sandstone Brick Long Slope 2",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_brick_slope", "" },
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_long_slope_1_outward", {
	description = "Desert Sandstone Brick Long Slope 1 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_brick_long_slope_1", "" },
		{ "eurokit:desert_sandstone_brick_long_slope_1", "eurokit:desert_sandstone_brick_long_slope_1", "eurokit:desert_sandstone_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_long_slope_3_inward", {
	description = "Desert Sandstone Brick Long Slope 3 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:desert_sandstone_brick_long_slope_3", "" },
		{ "eurokit:desert_sandstone_brick_long_slope_3", "", "eurokit:desert_sandstone_brick_long_slope_3" },
		{ "eurokit:desert_sandstone_brick_long_slope_3", "eurokit:desert_sandstone_brick_long_slope_3", "eurokit:desert_sandstone_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_long_slope_1", {
	description = "Desert Sandstone Brick Long Slope 1",
	groups = { cracky = 2, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:desert_sandstone_brick_slope", "", "" },
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_long_slope_3_outward", {
	description = "Desert Sandstone Brick Long Slope 3 Outward",
	groups = { cracky = 2, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:desert_sandstone_brick_long_slope_3", "" },
		{ "eurokit:desert_sandstone_brick_long_slope_3", "eurokit:desert_sandstone_brick_long_slope_3", "eurokit:desert_sandstone_brick_long_slope_3" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_long_slope_3", {
	description = "Desert Sandstone Brick Long Slope 3",
	groups = { cracky = 2, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:desert_sandstone_brick_slope" },
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_long_slope_2_inward", {
	description = "Desert Sandstone Brick Long Slope 2 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:desert_sandstone_brick_long_slope_2", "" },
		{ "eurokit:desert_sandstone_brick_long_slope_2", "", "eurokit:desert_sandstone_brick_long_slope_2" },
		{ "eurokit:desert_sandstone_brick_long_slope_2", "eurokit:desert_sandstone_brick_long_slope_2", "eurokit:desert_sandstone_brick_long_slope_2" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_slope_inward", {
	description = "Desert Sandstone Brick Slope Inward",
	groups = { cracky = 2, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_slope_inward 7",
	recipe = {
		{ "", "", "default:desert_sandstone_brick" },
		{ "", "default:desert_sandstone_brick", "" },
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 2",
	recipe = {
		{ "eurokit:desert_sandstone_brick_slope_inward", "", "" },
		{ "eurokit:desert_sandstone_brick_slope_inward", "eurokit:desert_sandstone_brick_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_long_slope_1_inward", {
	description = "Desert Sandstone Brick Long Slope 1 Inward",
	groups = { cracky = 2, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:desert_sandstone_brick_long_slope_1", "" },
		{ "eurokit:desert_sandstone_brick_long_slope_1", "", "eurokit:desert_sandstone_brick_long_slope_1" },
		{ "eurokit:desert_sandstone_brick_long_slope_1", "eurokit:desert_sandstone_brick_long_slope_1", "eurokit:desert_sandstone_brick_long_slope_1" }
	}
})

minetest.register_node( "eurokit:desert_sandstone_brick_slope", {
	description = "Desert Sandstone Brick Slope",
	groups = { cracky = 2, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_desert_sandstone_brick.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:desert_sandstone_brick_slope 11",
	recipe = {
		{ "", "", "default:desert_sandstone_brick" },
		{ "", "default:desert_sandstone_brick", "default:desert_sandstone_brick" },
		{ "default:desert_sandstone_brick", "default:desert_sandstone_brick", "default:desert_sandstone_brick" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:desert_sandstone_brick 2",
	recipe = {
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "" },
		{ "eurokit:desert_sandstone_brick_slope", "eurokit:desert_sandstone_brick_slope", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_half_pillar_mid", {
	description = "Silver Sandstone Half Pillar Mid",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_mid,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_half_pillar_mid")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_half_pillar_mid 1",
	recipe = {
		{ "eurokit:silver_sandstone_pillar_mid", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pillar_mid 2",
	recipe = {
		{ "eurokit:silver_sandstone_half_pillar_mid", "eurokit:silver_sandstone_half_pillar_mid", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_pillar_top", {
	description = "Silver Sandstone Pillar Top",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_top,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pillar_top 12",
	recipe = {
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" },
		{ "", "default:silver_sandstone", "" },
		{ "", "default:silver_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "eurokit:silver_sandstone_pillar_top", "eurokit:silver_sandstone_pillar_top", "eurokit:silver_sandstone_pillar_top" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_counterarch", {
	description = "Silver Sandstone Counterarch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, counterarch = 1, carc = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_counterarch 7",
	recipe = {
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" },
		{ "", "default:silver_sandstone", "default:silver_sandstone" },
		{ "", "", "default:silver_sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 3",
	recipe = {
		{ "eurokit:silver_sandstone_counterarch", "eurokit:silver_sandstone_counterarch", "" },
		{ "eurokit:silver_sandstone_counterarch", "eurokit:silver_sandstone_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_vertical_arrowslit", {
	description = "Silver Sandstone Vertical Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.vertical_arrowslit,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_vertical_arrowslit")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_vertical_arrowslit 2",
	recipe = {
		{ "", "eurokit:silver_sandstone_arrow_hole", "" },
		{ "", "eurokit:silver_sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_wall_indentation_2_inward", {
	description = "Silver Sandstone Wall Indentation 2 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_wall_indentation_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_wall_indentation_2_inward 4",
	recipe = {
		{ "", "eurokit:silver_sandstone_wall_indentation_2", "" },
		{ "eurokit:silver_sandstone_wall_indentation_2", "", "eurokit:silver_sandstone_wall_indentation_2" },
		{ "eurokit:silver_sandstone_wall_indentation_2", "eurokit:silver_sandstone_wall_indentation_2", "eurokit:silver_sandstone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_wall_indentation_2 4",
	recipe = {
		{ "eurokit:silver_sandstone_wall_indentation_2_inward", "eurokit:silver_sandstone_wall_indentation_2_inward", "eurokit:silver_sandstone_wall_indentation_2_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_half_pillar_base", {
	description = "Silver Sandstone Half Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_base,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_half_pillar_base")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_half_pillar_base 1",
	recipe = {
		{ "eurokit:silver_sandstone_pillar_base", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pillar_base 1",
	recipe = {
		{ "eurokit:silver_sandstone_half_pillar_base", "eurokit:silver_sandstone_half_pillar_base", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_small_pointed_arch", {
	description = "Silver Sandstone Small Pointed Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, spar = 1, small = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_pointed_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_small_pointed_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_small_pointed_arch 9",
	recipe = {
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope" },
		{ "eurokit:silver_sandstone_slope", "", "eurokit:silver_sandstone_slope" },
		{ "eurokit:silver_sandstone_slope", "", "eurokit:silver_sandstone_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_pointed_arch_2", {
	description = "Silver Sandstone Pointed Arch 2",
	groups = { cracky = 3, par2 = 1, arch = 1, pointed_arch = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_pointed_arch_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "" },
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "" },
		{ "eurokit:silver_sandstone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_slope 5",
	recipe = {
		{ "eurokit:silver_sandstone_pointed_arch_2", "eurokit:silver_sandstone_pointed_arch_2", "" },
		{ "eurokit:silver_sandstone_pointed_arch_2", "eurokit:silver_sandstone_pointed_arch_2", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_machicolation", {
	description = "Silver Sandstone Machicolation",
	groups = { cracky = 3, machicolation = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.machicolation,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_machicolation")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_machicolation 18",
	recipe = {
		{ "default:silver_sandstone", "", "default:silver_sandstone" },
		{ "default:silver_sandstone", "", "default:silver_sandstone" },
		{ "default:silver_sandstone", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_pointed_arch_1_outward", {
	description = "Silver Sandstone Pointed Arch 1 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_pointed_arch_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pointed_arch_1_outward 18",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_pointed_arch_1", "" },
		{ "eurokit:silver_sandstone_pointed_arch_1", "eurokit:silver_sandstone_pointed_arch_1", "eurokit:silver_sandstone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pointed_arch_1 1",
	recipe = {
		{ "eurokit:silver_sandstone_pointed_arch_1_outward", "eurokit:silver_sandstone_pointed_arch_1_outward", "eurokit:silver_sandstone_pointed_arch_1_outward" },
		{ "eurokit:silver_sandstone_pointed_arch_1_outward", "eurokit:silver_sandstone_pointed_arch_1_outward", "eurokit:silver_sandstone_pointed_arch_1_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_arrowslit_end_top", {
	description = "Silver Sandstone Arrowslit End Top",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_arrowslit_end_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_arrowslit_end_top 4",
	recipe = {
		{ "eurokit:silver_sandstone_arrow_hole", "eurokit:silver_sandstone_arrow_hole", "eurokit:silver_sandstone_arrow_hole" },
		{ "", "eurokit:silver_sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_arrowslit_end_bottom", {
	description = "Silver Sandstone Arrowslit End Bottom",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_bottom,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_arrowslit_end_bottom")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_arrowslit_end_bottom 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_arrow_hole", "" },
		{ "eurokit:silver_sandstone_arrow_hole", "eurokit:silver_sandstone_arrow_hole", "eurokit:silver_sandstone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_wall_indentation_2_outward", {
	description = "Silver Sandstone Wall Indentation 2 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_wall_indentation_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_wall_indentation_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_wall_indentation_2", "" },
		{ "eurokit:silver_sandstone_wall_indentation_2", "eurokit:silver_sandstone_wall_indentation_2", "eurokit:silver_sandstone_wall_indentation_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_wall_indentation_2 3",
	recipe = {
		{ "eurokit:silver_sandstone_wall_indentation_2_outward", "eurokit:silver_sandstone_wall_indentation_2_outward", "" },
		{ "eurokit:silver_sandstone_wall_indentation_2_outward", "eurokit:silver_sandstone_wall_indentation_2_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_pillar_mid", {
	description = "Silver Sandstone Pillar Mid",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_mid,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pillar_mid 14",
	recipe = {
		{ "", "default:silver_sandstone", "" },
		{ "", "default:silver_sandstone", "" },
		{ "", "default:silver_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "eurokit:silver_sandstone_pillar_mid", "eurokit:silver_sandstone_pillar_mid", "eurokit:silver_sandstone_pillar_mid" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_arrowslit_end_left", {
	description = "Silver Sandstone Arrowslit End Left",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_left,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_arrowslit_end_left")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_arrowslit_end_left 4",
	recipe = {
		{ "eurokit:silver_sandstone_arrow_hole", "", "" },
		{ "eurokit:silver_sandstone_arrow_hole", "eurokit:silver_sandstone_arrow_hole", "" },
		{ "eurokit:silver_sandstone_arrow_hole", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_wall_indentation_2", {
	description = "Silver Sandstone Wall Indentation 2",
	groups = { cracky = 3, ultramodel = 1, arch = 1, win2 = 1, indent = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_2,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_wall_indentation_2")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_wall_indentation_2 2",
	recipe = {
		{ "eurokit:silver_sandstone_slope", "", "" },
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_arch_inward", {
	description = "Silver Sandstone Arch Inward",
	groups = { cracky = 3, inward = 1, arch = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_arch_inward 13",
	recipe = {
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" },
		{ "default:silver_sandstone", "", "default:silver_sandstone" },
		{ "", "default:silver_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "eurokit:silver_sandstone_arch_inward", "eurokit:silver_sandstone_arch_inward", "eurokit:silver_sandstone_arch_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_small_arch", {
	description = "Silver Sandstone Small Arch",
	groups = { cracky = 3, ultramodel = 1, sarc = 1, arch = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_small_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_small_arch 4",
	recipe = {
		{ "", "", "" },
		{ "", "default:silver_sandstone", "" },
		{ "default:silver_sandstone", "", "default:silver_sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 2",
	recipe = {
		{ "eurokit:silver_sandstone_small_arch", "eurokit:silver_sandstone_small_arch", "" },
		{ "eurokit:silver_sandstone_small_arch", "eurokit:silver_sandstone_small_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_thin_wall", {
	description = "Silver Sandstone Thin Wall",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.thin_wall,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_thin_wall")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_thin_wall 24",
	recipe = {
		{ "default:silver_sandstone", "default:silver_sandstone", "" },
		{ "default:silver_sandstone", "default:silver_sandstone", "" },
		{ "default:silver_sandstone", "default:silver_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "", "", "" },
		{ "eurokit:silver_sandstone_thin_wall", "eurokit:silver_sandstone_thin_wall", "eurokit:silver_sandstone_thin_wall" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_counterarch_inward", {
	description = "Silver Sandstone Counterarch Inward",
	groups = { cracky = 3, arch = 1, counterarch = 1, inward = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_counterarch_inward 3",
	recipe = {
		{ "", "default:silver_sandstone", "default:silver_sandstone" },
		{ "", "", "default:silver_sandstone" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 2",
	recipe = {
		{ "eurokit:silver_sandstone_counterarch_inward", "", "" },
		{ "eurokit:silver_sandstone_counterarch_inward", "eurokit:silver_sandstone_counterarch_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_small_counterarch", {
	description = "Silver Sandstone Small Counterarch",
	groups = { cracky = 3, scar = 1, arch = 1, counterarch = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_counterarch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_small_counterarch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_small_counterarch 17",
	recipe = {
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" },
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" },
		{ "", "default:silver_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "eurokit:silver_sandstone_small_counterarch", "eurokit:silver_sandstone_small_counterarch", "" },
		{ "eurokit:silver_sandstone_small_counterarch", "eurokit:silver_sandstone_small_counterarch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_horizontal_arrowslit", {
	description = "Silver Sandstone Horizontal Arrowslit",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.horizontal_arrowslit,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_horizontal_arrowslit 2",
	recipe = {
		{ "", "", "" },
		{ "eurokit:silver_sandstone_arrow_hole", "eurokit:silver_sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_arch_outward", {
	description = "Silver Sandstone Arch Outward",
	groups = { cracky = 3, outward = 1, arch = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_arch_outward 22",
	recipe = {
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" },
		{ "", "default:silver_sandstone", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "eurokit:silver_sandstone_arch_outward", "", "" },
		{ "eurokit:silver_sandstone_arch_outward", "eurokit:silver_sandstone_arch_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_arch", {
	description = "Silver Sandstone Arch",
	groups = { cracky = 3, rarc = 1, arch = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arch,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_arch 18",
	recipe = {
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" },
		{ "default:silver_sandstone", "default:silver_sandstone", "" },
		{ "default:silver_sandstone", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "eurokit:silver_sandstone_arch", "eurokit:silver_sandstone_arch", "" },
		{ "eurokit:silver_sandstone_arch", "eurokit:silver_sandstone_arch", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_half_pillar_top", {
	description = "Silver Sandstone Half Pillar Top",
	groups = { cracky = 3, pillar = 1, half_pillar = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.half_pillar_top,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_half_pillar_top")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_half_pillar_top 1",
	recipe = {
		{ "eurokit:silver_sandstone_pillar_top", "", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pillar_top 1",
	recipe = {
		{ "eurokit:silver_sandstone_half_pillar_top", "eurokit:silver_sandstone_half_pillar_top", "" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_pointed_arch_2_inward", {
	description = "Silver Sandstone Pointed Arch 2 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_pointed_arch_2_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pointed_arch_2_inward 3",
	recipe = {
		{ "", "eurokit:silver_sandstone_pointed_arch_2", "" },
		{ "eurokit:silver_sandstone_pointed_arch_2", "", "eurokit:silver_sandstone_pointed_arch_2" },
		{ "eurokit:silver_sandstone_pointed_arch_2", "eurokit:silver_sandstone_pointed_arch_2", "eurokit:silver_sandstone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pointed_arch_2 6",
	recipe = {
		{ "eurokit:silver_sandstone_pointed_arch_2_inward", "eurokit:silver_sandstone_pointed_arch_2_inward", "" },
		{ "eurokit:silver_sandstone_pointed_arch_2_inward", "eurokit:silver_sandstone_pointed_arch_2_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_pointed_arch_2_outward", {
	description = "Silver Sandstone Pointed Arch 2 Outward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_pointed_arch_2_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pointed_arch_2_outward 6",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_pointed_arch_2", "" },
		{ "eurokit:silver_sandstone_pointed_arch_2", "eurokit:silver_sandstone_pointed_arch_2", "eurokit:silver_sandstone_pointed_arch_2" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pointed_arch_2 3",
	recipe = {
		{ "eurokit:silver_sandstone_pointed_arch_2_outward", "eurokit:silver_sandstone_pointed_arch_2_outward", "eurokit:silver_sandstone_pointed_arch_2_outward" },
		{ "eurokit:silver_sandstone_pointed_arch_2_outward", "eurokit:silver_sandstone_pointed_arch_2_outward", "eurokit:silver_sandstone_pointed_arch_2_outward" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_wall_indentation_1_outward", {
	description = "Silver Sandstone Wall Indentation 1 Outward",
	groups = { cracky = 3, arch = 1, outward = 1, indent = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_wall_indentation_1_outward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_wall_indentation_1_outward 11",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_wall_indentation_1", "" },
		{ "eurokit:silver_sandstone_wall_indentation_1", "eurokit:silver_sandstone_wall_indentation_1", "eurokit:silver_sandstone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_wall_indentation_1 1",
	recipe = {
		{ "eurokit:silver_sandstone_wall_indentation_1_outward", "eurokit:silver_sandstone_wall_indentation_1_outward", "" },
		{ "eurokit:silver_sandstone_wall_indentation_1_outward", "eurokit:silver_sandstone_wall_indentation_1_outward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_wall_indentation_1_inward", {
	description = "Silver Sandstone Wall Indentation 1 Inward",
	groups = { cracky = 3, arch = 1, inward = 1, indent = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_wall_indentation_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_wall_indentation_1_inward 3",
	recipe = {
		{ "", "eurokit:silver_sandstone_wall_indentation_1", "" },
		{ "eurokit:silver_sandstone_wall_indentation_1", "", "eurokit:silver_sandstone_wall_indentation_1" },
		{ "eurokit:silver_sandstone_wall_indentation_1", "eurokit:silver_sandstone_wall_indentation_1", "eurokit:silver_sandstone_wall_indentation_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_wall_indentation_1 5",
	recipe = {
		{ "eurokit:silver_sandstone_wall_indentation_1_inward", "eurokit:silver_sandstone_wall_indentation_1_inward", "eurokit:silver_sandstone_wall_indentation_1_inward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_pointed_arch_1", {
	description = "Silver Sandstone Pointed Arch 1",
	groups = { cracky = 3, ultramodel = 1, arch = 1, pointed_arch = 1, par1 = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_pointed_arch_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pointed_arch_1 11",
	recipe = {
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "" },
		{ "eurokit:silver_sandstone_slope", "", "" },
		{ "eurokit:silver_sandstone_slope", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_slope 2",
	recipe = {
		{ "eurokit:silver_sandstone_pointed_arch_1", "eurokit:silver_sandstone_pointed_arch_1", "eurokit:silver_sandstone_pointed_arch_1" },
		{ "eurokit:silver_sandstone_pointed_arch_1", "eurokit:silver_sandstone_pointed_arch_1", "eurokit:silver_sandstone_pointed_arch_1" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_small_straight_arch", {
	description = "Silver Sandstone Small Straight Arch",
	groups = { cracky = 3, ultramodel = 1, arch = 1, ssar = 1, straight_arch = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.small_straight_arch,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_small_straight_arch")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_small_straight_arch 8",
	recipe = {
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" },
		{ "default:silver_sandstone", "", "default:silver_sandstone" },
		{ "default:silver_sandstone", "", "default:silver_sandstone" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_arrow_hole", {
	description = "Silver Sandstone Arrow Hole",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrow_hole,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_arrow_hole")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_arrow_hole 21",
	recipe = {
		{ "", "default:silver_sandstone", "" },
		{ "default:silver_sandstone", "", "default:silver_sandstone" },
		{ "", "default:silver_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "eurokit:silver_sandstone_arrow_hole", "eurokit:silver_sandstone_arrow_hole", "" },
		{ "eurokit:silver_sandstone_arrow_hole", "eurokit:silver_sandstone_arrow_hole", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_pointed_arch_1_inward", {
	description = "Silver Sandstone Pointed Arch 1 Inward",
	groups = { cracky = 3, arch = 1, pointed_arch = 1, small = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pointed_arch_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_pointed_arch_1_inward")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pointed_arch_1_inward 3",
	recipe = {
		{ "", "eurokit:silver_sandstone_pointed_arch_1", "" },
		{ "eurokit:silver_sandstone_pointed_arch_1", "", "eurokit:silver_sandstone_pointed_arch_1" },
		{ "eurokit:silver_sandstone_pointed_arch_1", "eurokit:silver_sandstone_pointed_arch_1", "eurokit:silver_sandstone_pointed_arch_1" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pointed_arch_1 7",
	recipe = {
		{ "eurokit:silver_sandstone_pointed_arch_1_inward", "eurokit:silver_sandstone_pointed_arch_1_inward", "" },
		{ "eurokit:silver_sandstone_pointed_arch_1_inward", "eurokit:silver_sandstone_pointed_arch_1_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_wall_indentation_1", {
	description = "Silver Sandstone Wall Indentation 1",
	groups = { cracky = 3, win1 = 1, arch = 1, ultramodel = 1, indent = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.wall_indentation_1,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_wall_indentation_1")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_wall_indentation_1 7",
	recipe = {
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "" },
		{ "eurokit:silver_sandstone_slope", "", "eurokit:silver_sandstone_slope" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_counterarch_outward", {
	description = "Silver Sandstone Counterarch Outward",
	groups = { cracky = 3, arch = 1, counterarch = 1, outward = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.counterarch_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_counterarch_outward 6",
	recipe = {
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" },
		{ "", "", "default:silver_sandstone" },
		{ "", "", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "eurokit:silver_sandstone_counterarch_outward", "eurokit:silver_sandstone_counterarch_outward", "eurokit:silver_sandstone_counterarch_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_arrowslit_end_right", {
	description = "Silver Sandstone Arrowslit End Right",
	groups = { cracky = 3, arrowslit = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.arrowslit_end_right,
	},
	sounds = default.node_sound_stone_defaults(),
	after_place_node = function(pos, placer, itemstack, pointed_thing)
		restricted_rotation(placer, pointed_thing.above, "eurokit:silver_sandstone_arrowslit_end_right")
	end
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_arrowslit_end_right 4",
	recipe = {
		{ "", "", "eurokit:silver_sandstone_arrow_hole" },
		{ "", "eurokit:silver_sandstone_arrow_hole", "eurokit:silver_sandstone_arrow_hole" },
		{ "", "", "eurokit:silver_sandstone_arrow_hole" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_pillar_base", {
	description = "Silver Sandstone Pillar Base",
	groups = { cracky = 3, pillar = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.pillar_base,
	},
	sounds = default.node_sound_stone_defaults()
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_pillar_base 7",
	recipe = {
		{ "", "default:silver_sandstone", "" },
		{ "", "default:silver_sandstone", "" },
		{ "", "default:silver_sandstone", "" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "eurokit:silver_sandstone_pillar_base", "eurokit:silver_sandstone_pillar_base", "eurokit:silver_sandstone_pillar_base" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_long_slope_2_outward", {
	description = "Silver Sandstone Long Slope 2 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_long_slope_2_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_long_slope_2", "" },
		{ "eurokit:silver_sandstone_long_slope_2", "eurokit:silver_sandstone_long_slope_2", "eurokit:silver_sandstone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_slope_outward", {
	description = "Silver Sandstone Slope Outward",
	groups = { cracky = 3, slope = 1, nonredundant = 1, outward = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_slope_outward 10",
	recipe = {
		{ "", "", "" },
		{ "", "", "default:silver_sandstone" },
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 1",
	recipe = {
		{ "eurokit:silver_sandstone_slope_outward", "eurokit:silver_sandstone_slope_outward", "eurokit:silver_sandstone_slope_outward" },
		{ "", "", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_long_slope_2", {
	description = "Silver Sandstone Long Slope 2",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl2 = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_long_slope_2 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_slope", "" },
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_long_slope_1_outward", {
	description = "Silver Sandstone Long Slope 1 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_long_slope_1_outward 2",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_long_slope_1", "" },
		{ "eurokit:silver_sandstone_long_slope_1", "eurokit:silver_sandstone_long_slope_1", "eurokit:silver_sandstone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_long_slope_3_inward", {
	description = "Silver Sandstone Long Slope 3 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_long_slope_3_inward 5",
	recipe = {
		{ "", "eurokit:silver_sandstone_long_slope_3", "" },
		{ "eurokit:silver_sandstone_long_slope_3", "", "eurokit:silver_sandstone_long_slope_3" },
		{ "eurokit:silver_sandstone_long_slope_3", "eurokit:silver_sandstone_long_slope_3", "eurokit:silver_sandstone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_long_slope_1", {
	description = "Silver Sandstone Long Slope 1",
	groups = { cracky = 3, long_slope = 1, slope = 1, lsl1 = 1, ultramodel = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_long_slope_1 10",
	recipe = {
		{ "", "", "" },
		{ "eurokit:silver_sandstone_slope", "", "" },
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_long_slope_3_outward", {
	description = "Silver Sandstone Long Slope 3 Outward",
	groups = { cracky = 3, long_slope = 1, slope = 1, outward = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3_outward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_long_slope_3_outward 4",
	recipe = {
		{ "", "", "" },
		{ "", "eurokit:silver_sandstone_long_slope_3", "" },
		{ "eurokit:silver_sandstone_long_slope_3", "eurokit:silver_sandstone_long_slope_3", "eurokit:silver_sandstone_long_slope_3" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_long_slope_3", {
	description = "Silver Sandstone Long Slope 3",
	groups = { cracky = 3, long_slope = 1, slope = 1, ultramodel = 1, lsl3 = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_3,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_long_slope_3 2",
	recipe = {
		{ "", "", "" },
		{ "", "", "eurokit:silver_sandstone_slope" },
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_long_slope_2_inward", {
	description = "Silver Sandstone Long Slope 2 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_2_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_long_slope_2_inward 5",
	recipe = {
		{ "", "eurokit:silver_sandstone_long_slope_2", "" },
		{ "eurokit:silver_sandstone_long_slope_2", "", "eurokit:silver_sandstone_long_slope_2" },
		{ "eurokit:silver_sandstone_long_slope_2", "eurokit:silver_sandstone_long_slope_2", "eurokit:silver_sandstone_long_slope_2" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_slope_inward", {
	description = "Silver Sandstone Slope Inward",
	groups = { cracky = 3, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_slope_inward 7",
	recipe = {
		{ "", "", "default:silver_sandstone" },
		{ "", "default:silver_sandstone", "" },
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 2",
	recipe = {
		{ "eurokit:silver_sandstone_slope_inward", "", "" },
		{ "eurokit:silver_sandstone_slope_inward", "eurokit:silver_sandstone_slope_inward", "" },
		{ "", "", "" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_long_slope_1_inward", {
	description = "Silver Sandstone Long Slope 1 Inward",
	groups = { cracky = 3, long_slope = 1, inward = 1, slope = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.long_slope_1_inward,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_long_slope_1_inward 4",
	recipe = {
		{ "", "eurokit:silver_sandstone_long_slope_1", "" },
		{ "eurokit:silver_sandstone_long_slope_1", "", "eurokit:silver_sandstone_long_slope_1" },
		{ "eurokit:silver_sandstone_long_slope_1", "eurokit:silver_sandstone_long_slope_1", "eurokit:silver_sandstone_long_slope_1" }
	}
})

minetest.register_node( "eurokit:silver_sandstone_slope", {
	description = "Silver Sandstone Slope",
	groups = { cracky = 3, ultramodel = 1, slope = 1, slpe = 1, nonredundant = 1 },
	tiles = { "default_silver_sandstone.png" },
	paramtype = "light",
	paramtype2 = "facedir",
	drawtype = "nodebox",
	node_box = {
		type = "fixed",
		fixed = nodes.slope,
	},
	sounds = default.node_sound_stone_defaults(),
	on_place = minetest.rotate_node
})

minetest.register_craft({
	type = "shaped",
	output = "eurokit:silver_sandstone_slope 11",
	recipe = {
		{ "", "", "default:silver_sandstone" },
		{ "", "default:silver_sandstone", "default:silver_sandstone" },
		{ "default:silver_sandstone", "default:silver_sandstone", "default:silver_sandstone" }
	}
})

minetest.register_craft({
	type = "shaped",
	output = "default:silver_sandstone 2",
	recipe = {
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "" },
		{ "eurokit:silver_sandstone_slope", "eurokit:silver_sandstone_slope", "" },
		{ "", "", "" }
	}
})

